{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple api documintation, build with love by Fawzi E. Abdulfattah",
    "version": "1.0.0",
    "title": "E-clinic",
    "contact": {
      "email": "iifawzie@gmail.com"
    }
  },
  "host": "clinice.herokuapp.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "Auth",
      "description": "Everything related to Authentication"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "The signup end point for users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "201 (Created)",
            "schema": {
              "$ref": "#/definitions/signupRes"
            }
          },
          "400": {
            "description": "400 (Error with the inputs)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 (phone number already exists)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "The signin end point for users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 (successful)",
            "schema": {
              "$ref": "#/definitions/signinResponse"
            }
          },
          "400": {
            "description": "400 (Error with the inputs)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 (phone number is not found)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 (User with this phone_number is blocked)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/updateFirebaseToken": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "update the firebase token id for a specific user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateToken"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 (successful)",
            "schema": {
              "$ref": "#/definitions/updateTokenResponse"
            }
          },
          "400": {
            "description": "400 (Error with the inputs)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 (phone number is not found)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "403 (User with this phone_number is blocked)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/updateDoctorFirebaseToken": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "update the firebase token id for a specific DOCTOR",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateDoctorToken"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 (successful)",
            "schema": {
              "$ref": "#/definitions/updateDoctorTokenResponse"
            }
          },
          "400": {
            "description": "400 (Error with the inputs)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 (phone number is not found)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/signDoctors": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Doctors Signin Endpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signinDoctors"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 (successful)",
            "schema": {
              "$ref": "#/definitions/signinDoctorsResponse"
            }
          },
          "400": {
            "description": "400 (Error with the inputs)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "401 (Phone number or password is incorrect)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "signup": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "province": {
          "type": "string"
        }
      },
      "example": {
        "phone_number": "01590243399",
        "first_name": "fawzi",
        "last_name": "ahmed",
        "birth_date": "1999-03-20",
        "weight": 100,
        "height": 180,
        "bmi": 28,
        "fb_token_id": "djdj84",
        "gender": "male"
      }
    },
    "signin": {
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "string"
        }
      },
      "example": {
        "phone_number": "01590243399"
      }
    },
    "updateToken": {
      "type": "object",
      "properties": {
        "new_token": {
          "type": "string"
        }
      },
      "example": {
        "new_token": "5895787854hjhjdjhdjhd"
      }
    },
    "updateDoctorToken": {
      "type": "object",
      "properties": {
        "new_token": {
          "type": "string"
        }
      },
      "example": {
        "new_token": "5895787854hjhjdjhdjhd"
      }
    },
    "signinDoctors": {
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "example": {
        "phone_number": "01590243399",
        "password": "halawallah"
      }
    },
    "signupRes": {
      "type": "object",
      "example": {
        "status": true,
        "data": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImYzYWR3MXN6ZGlpIiwidXNlclJvbGUiOiJ1c2VyIiwiaWF0IjoxNTg4NjQ3NzkxLCJleHAiOjE1ODk1MTE3OTF9.q16hbHroXLD6own-9Bhh32uErZfh0sYfhUYaaCaRpq4",
          "phone_number": "01590243399",
          "first_name": "fawzi",
          "last_name": "ahmed",
          "birth_date": "1999-03-20",
          "weight": 100,
          "height": 180,
          "bmi": 28,
          "fb_token_id": "djdj84",
          "gender": "male",
          "role": "user"
        }
      }
    },
    "signinResponse": {
      "type": "object",
      "example": {
        "status": true,
        "data": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImYzYWR3MXN6ZGlpIiwidXNlclJvbGUiOiJ1c2VyIiwiaWF0IjoxNTg5MDAzMzMwLCJleHAiOjE1ODk4NjczMzB9.YPwfiTpfqUgtroESoxni417Y1OS_Foy_pVpdJrFjJC4",
          "phone_number": "01590243399",
          "first_name": "fawzi",
          "last_name": "ahmed",
          "birth_date": "1999-03-20",
          "weight": 100,
          "height": 180,
          "bmi": 28,
          "fb_token_id": "djdj84",
          "gender": "male",
          "role": "user"
        }
      }
    },
    "updateTokenResponse": {
      "type": "object",
      "example": {
        "status": true,
        "data": {
          "phone_number": "01590243399",
          "updated_token": "5895787854hjhjdjhdjhd"
        }
      }
    },
    "updateDoctorTokenResponse": {
      "type": "object",
      "example": {
        "status": true,
        "data": {
          "phone_number": "01590243399",
          "updated_token": "5895787854hjhjdjhdjhd"
        }
      }
    },
    "signinDoctorsResponse": {
      "type": "object",
      "example": {
        "status": true,
        "data": {
          "phone_number": "01590243399",
          "first_name": "fawzi",
          "last_name": "ahmed",
          "country": "egypt",
          "category": "3yoon",
          "sub_category": "3yoon helwa",
          "avaliable": true,
          "fb_token_id": "djdj84"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      },
      "example": {
        "status": false,
        "message": "Error message will appear here, it will be an array if there're multiple error"
      }
    }
  }
}
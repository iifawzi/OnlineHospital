{
  "stats": {
    "suites": 26,
    "tests": 61,
    "passes": 61,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-26T07:44:15.202Z",
    "end": "2020-05-26T07:44:17.219Z",
    "duration": 2017,
    "testsRegistered": 61,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5e4912fa-acf7-40df-82bd-415de74d1f3c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fc9bec79-e719-421e-9da9-d16cc47212ac",
          "title": "/api/auth",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
          "file": "/test/auth.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/auth \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "182fdf4e-e4ea-484c-9db1-b04d22df547e",
              "parentUUID": "fc9bec79-e719-421e-9da9-d16cc47212ac",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/auth \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "b2b1e5b8-78dc-45d0-a896-0675b42ac805",
              "parentUUID": "fc9bec79-e719-421e-9da9-d16cc47212ac",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "05baf61c-72b4-4130-9297-ab16ac41be0e",
              "title": "/signup",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if one of inputs is incorrect or missing (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /signup should respond with 400 if one of inputs is incorrect or missing (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 44,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\").expect(400);  \nres = await request(server)\n.post(\"/api/auth/signup\")\n.send({password:\"fawzi\"})\n.expect(400);",
                  "err": {},
                  "uuid": "426d3efc-5350-47e2-977f-3bbba57b20d8",
                  "parentUUID": "05baf61c-72b4-4130-9297-ab16ac41be0e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 201 if user succefully registered",
                  "fullTitle": "/api/auth /signup should respond with 201 if user succefully registered",
                  "timedOut": false,
                  "duration": 36,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243399\");",
                  "err": {},
                  "uuid": "0ef6c274-ce7c-4446-b74f-11e9245032ec",
                  "parentUUID": "05baf61c-72b4-4130-9297-ab16ac41be0e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 403 if phone_number is already registered",
                  "fullTitle": "/api/auth /signup should respond with 403 if phone_number is already registered",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(403);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "8623d4e2-f085-4954-9bc4-e7608a908ab4",
                  "parentUUID": "05baf61c-72b4-4130-9297-ab16ac41be0e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "426d3efc-5350-47e2-977f-3bbba57b20d8",
                "0ef6c274-ce7c-4446-b74f-11e9245032ec",
                "8623d4e2-f085-4954-9bc4-e7608a908ab4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 87,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "354a7612-357e-4d9d-adb4-5d7cd183b81e",
              "title": "/signin",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /signin should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signin\")\n.expect(400);",
                  "err": {},
                  "uuid": "2db4bb2c-d051-4c82-95a6-70a4ffad5238",
                  "parentUUID": "354a7612-357e-4d9d-adb4-5d7cd183b81e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 when phone number notfound `backend side`",
                  "fullTitle": "/api/auth /signin should respond with 401 when phone number notfound `backend side`",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n .post(\"/api/auth/signin\")\n .send({\"phone_number\":\"01590243311\"})\n .expect(401);",
                  "err": {},
                  "uuid": "06892017-7e38-478a-bf2e-a5e5a1b255b2",
                  "parentUUID": "354a7612-357e-4d9d-adb4-5d7cd183b81e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if user loged in successfully",
                  "fullTitle": "/api/auth /signin should respond with 200 if user loged in successfully",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243311\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n}).expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243311\");\nres = await request(server)\n.post(\"/api/auth/signin\")\n.send({\"phone_number\":\"01590243311\"})\n.expect(200);\ndeleteUser(\"01590243311\");",
                  "err": {},
                  "uuid": "d9616b29-95af-4189-b0a5-a5660543dc51",
                  "parentUUID": "354a7612-357e-4d9d-adb4-5d7cd183b81e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2db4bb2c-d051-4c82-95a6-70a4ffad5238",
                "06892017-7e38-478a-bf2e-a5e5a1b255b2",
                "d9616b29-95af-4189-b0a5-a5660543dc51"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 26,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "df7613a2-d7e1-4e92-b7f8-ac456c9f2a1e",
              "title": "/updateFirebaseToken",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /updateFirebaseToken Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",\"user\");\nlet res = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"notInTheSchema\":\"haka\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "1957d95c-e5e4-41da-a01b-0b20f102024b",
                  "parentUUID": "df7613a2-d7e1-4e92-b7f8-ac456c9f2a1e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if phone number not found `backend side`",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 401 if phone number not found `backend side`",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243788\",\"user\");\nlet res = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"djkdjkdjk\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(401);",
                  "err": {},
                  "uuid": "1adba5a0-85d7-4a2d-868a-6f419cbb5370",
                  "parentUUID": "df7613a2-d7e1-4e92-b7f8-ac456c9f2a1e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if we updated the token_id successfully",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 200 if we updated the token_id successfully",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243388\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\"\n}).expect(201);\nconst token = genToken(\"01590243388\",\"user\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);\nexpect(res.body.data.updated_token).to.equal(\"123456789elhamdullah\");\ndeleteUser(\"01590243388\");",
                  "err": {},
                  "uuid": "e2f2520b-3bf8-4e7c-828f-d29a1ac93f27",
                  "parentUUID": "df7613a2-d7e1-4e92-b7f8-ac456c9f2a1e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 403 if user is blocked",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 403 if user is blocked",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"01590243399\",\"user\");\nawait blockUser(\"01590243399\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "b7cac633-1f4a-499c-b571-eb8111b435e1",
                  "parentUUID": "df7613a2-d7e1-4e92-b7f8-ac456c9f2a1e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if user is not authorized ",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 401 if user is not authorized ",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243391\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\n// const token = genToken(\"01590243399\",\"user\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n// .set(\"Authorization\", `Bearer ${token}`)\n.expect(401);\ndeleteUser(\"01590243391\");",
                  "err": {},
                  "uuid": "eaedae14-b826-4463-9a5b-d52188bde84d",
                  "parentUUID": "df7613a2-d7e1-4e92-b7f8-ac456c9f2a1e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1957d95c-e5e4-41da-a01b-0b20f102024b",
                "1adba5a0-85d7-4a2d-868a-6f419cbb5370",
                "e2f2520b-3bf8-4e7c-828f-d29a1ac93f27",
                "b7cac633-1f4a-499c-b571-eb8111b435e1",
                "eaedae14-b826-4463-9a5b-d52188bde84d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 58,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1df4848f-4b0f-40a7-8329-3a12192ed82b",
              "title": "/signDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if any inputs are incorrect or missed (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /signDoctor should respond with 400 if any inputs are incorrect or missed (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signDoctor\")\n.send({phone_number:\"02903\"})\n.expect(400);",
                  "err": {},
                  "uuid": "c5dcf29e-f84c-412b-a4e5-101f52bbfaac",
                  "parentUUID": "1df4848f-4b0f-40a7-8329-3a12192ed82b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if phone number or password are incorrect `backend side`",
                  "fullTitle": "/api/auth /signDoctor should respond with 401 if phone number or password are incorrect `backend side`",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090243795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\":\"200\"\n})\n.expect(201);\nres = request(server)\n.post(\"/api/auth/signDoctors\")\n.send({phone_number:\"01090243794\",password:\"01288\"})\n.expect(401);\ndeleteDoctor(\"01090243795\");",
                  "err": {},
                  "uuid": "9d174abc-32ab-45a1-aad3-a24ba6141015",
                  "parentUUID": "1df4848f-4b0f-40a7-8329-3a12192ed82b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c5dcf29e-f84c-412b-a4e5-101f52bbfaac",
                "9d174abc-32ab-45a1-aad3-a24ba6141015"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2009beb2-6bff-47d0-a199-64cfd88023b0",
              "title": "/updateDoctorFirebaseToken",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",\"doctor\");\nlet res = await request(server)\n.patch(\"/api/auth/updateDoctorFirebaseToken\")\n.send({\"notInTheSchema\":\"haka\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "ad3cc939-e190-4626-adf5-aed438ec0a95",
                  "parentUUID": "2009beb2-6bff-47d0-a199-64cfd88023b0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if phone number not found `backend side`",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken should respond with 401 if phone number not found `backend side`",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243788\",\"doctor\");\nlet res = await request(server)\n.patch(\"/api/auth/updateDoctorFirebaseToken\")\n.send({\"new_token\":\"djkdjkdjk\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(401);",
                  "err": {},
                  "uuid": "543e4fbf-11a1-418e-b62f-282cf408741b",
                  "parentUUID": "2009beb2-6bff-47d0-a199-64cfd88023b0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if we updated the Doctor token_id successfully",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken should respond with 200 if we updated the Doctor token_id successfully",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243788\",\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090243795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\":\"200\"\n})\n.expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01090243795\");\nconst token2 = genToken(\"01090243795\",\"doctor\");\nres = await request(server)\n.patch(\"/api/auth/updateDoctorFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n.set(\"Authorization\", `Bearer ${token2}`)\n.expect(200);\nexpect(res.body.data.updated_token).to.equal(\"123456789elhamdullah\");\ndeleteDoctor(\"01090243795\");",
                  "err": {},
                  "uuid": "1c51ca69-4ed3-41cb-96a0-71f4a8e44047",
                  "parentUUID": "2009beb2-6bff-47d0-a199-64cfd88023b0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if Doctor is not authorized ",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken should respond with 401 if Doctor is not authorized ",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01010243795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\":\"200\"\n})\n.expect(201);\n// const token = genToken(\"01590243399\",\"doctor\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n// .set(\"Authorization\", `Bearer ${token}`)\n.expect(401);\ndeleteDoctor(\"01010243795\");",
                  "err": {},
                  "uuid": "831b7e91-301f-433b-84ea-6d31fcce7151",
                  "parentUUID": "2009beb2-6bff-47d0-a199-64cfd88023b0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ad3cc939-e190-4626-adf5-aed438ec0a95",
                "543e4fbf-11a1-418e-b62f-282cf408741b",
                "1c51ca69-4ed3-41cb-96a0-71f4a8e44047",
                "831b7e91-301f-433b-84ea-6d31fcce7151"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 29,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aff12870-eab6-4fd5-9995-e3f8152ae0c5",
          "title": "/api/categories",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/categories.js",
          "file": "/test/categories.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/categories \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "a85881a0-6097-43d2-a744-9656448bc198",
              "parentUUID": "aff12870-eab6-4fd5-9995-e3f8152ae0c5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/categories \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "9e917310-8e44-4853-bc3e-61bda2b1f7fb",
              "parentUUID": "aff12870-eab6-4fd5-9995-e3f8152ae0c5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "66a9534f-6086-4df4-8ca9-804480d943a6",
              "title": "/getCategories",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/categories.js",
              "file": "/test/categories.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/categories /getCategories Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/categories/getCategories\")\n.expect(401);",
                  "err": {},
                  "uuid": "de8dd1fc-cecd-40fe-bd2e-7f7ffeacb3d3",
                  "parentUUID": "66a9534f-6086-4df4-8ca9-804480d943a6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 if got categories successfully",
                  "fullTitle": "/api/categories /getCategories Should respond 200 if got categories successfully",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",\"user\");\nlet res = await request(server)\n.post(\"/api/categories/getCategories\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);",
                  "err": {},
                  "uuid": "7788c73a-590f-4c79-ae1b-dafde11edf5b",
                  "parentUUID": "66a9534f-6086-4df4-8ca9-804480d943a6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "de8dd1fc-cecd-40fe-bd2e-7f7ffeacb3d3",
                "7788c73a-590f-4c79-ae1b-dafde11edf5b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "221f02e5-3615-4541-9138-ec8e5b1e2b7b",
          "title": "/api/controlPanel",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
          "file": "/test/controlPanel.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/controlPanel \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "3cb04666-bec9-40ff-8f88-0630c0acac03",
              "parentUUID": "221f02e5-3615-4541-9138-ec8e5b1e2b7b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/controlPanel \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "5ee8efc5-cb16-49d4-95fc-bafe878cde78",
              "parentUUID": "221f02e5-3615-4541-9138-ec8e5b1e2b7b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "1d0f6720-fee2-4be6-b280-a96c0ff77c9a",
              "title": "/addingDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION)",
                  "fullTitle": "/api/controlPanel /addingDoctor Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\", \"admin\");\nconst res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(400);",
                  "err": {},
                  "uuid": "d0abff1c-a59c-4470-b2fc-1e894dab7d20",
                  "parentUUID": "1d0f6720-fee2-4be6-b280-a96c0ff77c9a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 201 if doctor created successfully",
                  "fullTitle": "/api/controlPanel /addingDoctor Should respond with 201 if doctor created successfully",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"11090243799\", \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"11090243799\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"11090243799\");\ndeleteDoctor(\"11090243799\");",
                  "err": {},
                  "uuid": "3b477302-606d-4632-bb77-0bcfefbca910",
                  "parentUUID": "1d0f6720-fee2-4be6-b280-a96c0ff77c9a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 403 if the phone number is already registered",
                  "fullTitle": "/api/controlPanel /addingDoctor Should respond with 403 if the phone number is already registered",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243798\", \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243798\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01090243798\");\nres = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243798\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(403);",
                  "err": {},
                  "uuid": "68f60f72-1016-40ee-bf63-ca6397b2b80e",
                  "parentUUID": "1d0f6720-fee2-4be6-b280-a96c0ff77c9a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d0abff1c-a59c-4470-b2fc-1e894dab7d20",
                "3b477302-606d-4632-bb77-0bcfefbca910",
                "68f60f72-1016-40ee-bf63-ca6397b2b80e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "773bbf81-5dc9-473d-892a-fc7f6cc0c0c9",
              "title": "/addingAdmin",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION",
                  "fullTitle": "/api/controlPanel /addingAdmin Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\", \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ name: \"fawzi\" })\n  .expect(400);",
                  "err": {},
                  "uuid": "43411e02-f85c-4d26-9dbc-c5ec497b33e8",
                  "parentUUID": "773bbf81-5dc9-473d-892a-fc7f6cc0c0c9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 201 if created successfully",
                  "fullTitle": "/api/controlPanel /addingAdmin Should respond with 201 if created successfully",
                  "timedOut": false,
                  "duration": 267,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"11090243799\", \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"11090243799\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"11090243799\");\ndeleteAdmin(\"11090243799\");",
                  "err": {},
                  "uuid": "80d77718-ee9e-4e49-8f87-5a2226f70d4d",
                  "parentUUID": "773bbf81-5dc9-473d-892a-fc7f6cc0c0c9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should Respond with 403 if phone number is already Registered",
                  "fullTitle": "/api/controlPanel /addingAdmin Should Respond with 403 if phone number is already Registered",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\", \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243795\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(403);\ndeleteAdmin(\"01090243795\");",
                  "err": {},
                  "uuid": "67d70fcb-499a-4a9f-858d-0bb13033be0f",
                  "parentUUID": "773bbf81-5dc9-473d-892a-fc7f6cc0c0c9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "43411e02-f85c-4d26-9dbc-c5ec497b33e8",
                "80d77718-ee9e-4e49-8f87-5a2226f70d4d",
                "67d70fcb-499a-4a9f-858d-0bb13033be0f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 274,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9f70750b-5d57-4b05-9a22-5ef823fd321d",
              "title": "/signAdmin",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "fullTitle": "/api/controlPanel /signAdmin should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .post(\"/api/controlPanel/signAdmin\")\n  .expect(400);",
                  "err": {},
                  "uuid": "d098dbc7-6d74-4778-a94b-36728d7ecc17",
                  "parentUUID": "9f70750b-5d57-4b05-9a22-5ef823fd321d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 when phone number is not found `backend side`",
                  "fullTitle": "/api/controlPanel /signAdmin should respond with 401 when phone number is not found `backend side`",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .post(\"/api/controlPanel/signAdmin\")\n  .send({ phone_number: \"01090243795\", password: \"testest\" })\n  .expect(401);",
                  "err": {},
                  "uuid": "57cbbc5a-abef-46fa-a5ac-21297a81560c",
                  "parentUUID": "9f70750b-5d57-4b05-9a22-5ef823fd321d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if admin loged in successfully",
                  "fullTitle": "/api/controlPanel /signAdmin should respond with 200 if admin loged in successfully",
                  "timedOut": false,
                  "duration": 522,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\", \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243795\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01090243795\");\nres = await request(server)\n  .post(\"/api/controlPanel/signAdmin\")\n  .send({ phone_number: \"01090243795\", password: \"testtest\" })\n  .expect(200);\nexpect(res.body.data.phone_number).to.equal(\"01090243795\");\ndeleteAdmin(\"01090243795\");",
                  "err": {},
                  "uuid": "7b1b1d2b-6050-4b4f-b25f-196b7b2deaac",
                  "parentUUID": "9f70750b-5d57-4b05-9a22-5ef823fd321d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d098dbc7-6d74-4778-a94b-36728d7ecc17",
                "57cbbc5a-abef-46fa-a5ac-21297a81560c",
                "7b1b1d2b-6050-4b4f-b25f-196b7b2deaac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 529,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "84a67788-4bd4-41e1-8b82-49db51c2af93",
              "title": "/checkAdminByToken",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if admin is not authorized",
                  "fullTitle": "/api/controlPanel /checkAdminByToken Should respond with 401 if admin is not authorized",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\", \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/checkAdminByToken\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(401);",
                  "err": {},
                  "uuid": "0aca5c9b-6a3e-4738-b1ed-ef8286c4de62",
                  "parentUUID": "84a67788-4bd4-41e1-8b82-49db51c2af93",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if token is valid and referanced to admin",
                  "fullTitle": "/api/controlPanel /checkAdminByToken Should respond with 200 if token is valid and referanced to admin",
                  "timedOut": false,
                  "duration": 265,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\", \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243795\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(201);\nres = await request(server)\n  .post(\"/api/controlPanel/checkAdminByToken\")\n  .send({})\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(200);\ndeleteAdmin(\"01090243795\");",
                  "err": {},
                  "uuid": "2f31d695-728d-455f-a24e-2ae2a60a8809",
                  "parentUUID": "84a67788-4bd4-41e1-8b82-49db51c2af93",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0aca5c9b-6a3e-4738-b1ed-ef8286c4de62",
                "2f31d695-728d-455f-a24e-2ae2a60a8809"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 269,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a21bb254-b864-41d5-8b38-8ab4f79f7c15",
              "title": "/addImage",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should responed with 201 if uploaded",
                  "fullTitle": "/api/controlPanel /addImage Should responed with 201 if uploaded",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"ahmed\", \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addImage\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n  .attach(\"file\", path.resolve(__dirname, \"../logo.png\"))\n  .expect(201);",
                  "err": {},
                  "uuid": "951bcd0c-2afb-4d96-96ca-0ff016b2d3ef",
                  "parentUUID": "a21bb254-b864-41d5-8b38-8ab4f79f7c15",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 403 if type not allowed",
                  "fullTitle": "/api/controlPanel /addImage Should responed with 403 if type not allowed",
                  "timedOut": false,
                  "duration": 53,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"ahmed\", \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addImage\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n  .attach(\"file\", path.resolve(__dirname, \"../udemy-accs.txt\"))\n  .expect(403);",
                  "err": {},
                  "uuid": "51063ed1-3509-4ab2-897b-8a49b3edc6f0",
                  "parentUUID": "a21bb254-b864-41d5-8b38-8ab4f79f7c15",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "951bcd0c-2afb-4d96-96ca-0ff016b2d3ef",
                "51063ed1-3509-4ab2-897b-8a49b3edc6f0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 71,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "dd631f9f-64f9-417f-81e4-3353673a6c0b",
              "title": "/getCategories",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /getCategories Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .expect(401);",
                  "err": {},
                  "uuid": "7a57ba60-46e3-4c2f-9f62-ae66a4e327f8",
                  "parentUUID": "dd631f9f-64f9-417f-81e4-3353673a6c0b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got categories successfully",
                  "fullTitle": "/api/controlPanel /getCategories Should respond with 200 if got categories successfully",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"ahmed\", \"admin\");\nlet res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(200);",
                  "err": {},
                  "uuid": "4efdb78e-86c0-44fd-94d4-8b9a489ca38e",
                  "parentUUID": "dd631f9f-64f9-417f-81e4-3353673a6c0b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7a57ba60-46e3-4c2f-9f62-ae66a4e327f8",
                "4efdb78e-86c0-44fd-94d4-8b9a489ca38e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9afc0628-4e8f-45d2-97ba-0c45bd8abbec",
              "title": "/getDoctors",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /getDoctors Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .expect(401);",
                  "err": {},
                  "uuid": "6b80d51b-9a54-47bc-a285-7c621df615f0",
                  "parentUUID": "9afc0628-4e8f-45d2-97ba-0c45bd8abbec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got categories successfully",
                  "fullTitle": "/api/controlPanel /getDoctors Should respond with 200 if got categories successfully",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"ahmed\", \"admin\");\nlet res = await request(server)\n  .get(\"/api/controlPanel/getDoctors\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(200);",
                  "err": {},
                  "uuid": "15e25953-58ee-4a76-9077-50a6ff5a31e5",
                  "parentUUID": "9afc0628-4e8f-45d2-97ba-0c45bd8abbec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6b80d51b-9a54-47bc-a285-7c621df615f0",
                "15e25953-58ee-4a76-9077-50a6ff5a31e5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c01239eb-5a53-4390-89e4-0cee03673966",
              "title": "/deleteDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /deleteDoctor Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .expect(401);",
                  "err": {},
                  "uuid": "d151258d-5791-4c86-b467-6d3cf53a2ddc",
                  "parentUUID": "c01239eb-5a53-4390-89e4-0cee03673966",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 404 if doctor not found",
                  "fullTitle": "/api/controlPanel /deleteDoctor Should respond with 404 if doctor not found",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"ahmed\", \"admin\");\nlet res = await request(server)\n  .delete(\"/api/controlPanel/deleteDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"0109024371111212129511113\"})\n  .expect(404);",
                  "err": {},
                  "uuid": "8caf4550-a44c-4206-b0c1-1c2261953f07",
                  "parentUUID": "c01239eb-5a53-4390-89e4-0cee03673966",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if doctor deleted successfully",
                  "fullTitle": "/api/controlPanel /deleteDoctor Should respond with 200 if doctor deleted successfully",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"ahmed\", \"admin\");\nlet res = await request(server)\n  .delete(\"/api/controlPanel/deleteDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"01090243798\"}) // this tee number which registered above\n  .expect(200);",
                  "err": {},
                  "uuid": "85d40b48-1a91-419e-9f40-ad9181bea2c2",
                  "parentUUID": "c01239eb-5a53-4390-89e4-0cee03673966",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d151258d-5791-4c86-b467-6d3cf53a2ddc",
                "8caf4550-a44c-4206-b0c1-1c2261953f07",
                "85d40b48-1a91-419e-9f40-ad9181bea2c2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5730046f-5387-40c7-9a7b-1f0ab93756cb",
          "title": "/api/doctors",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
          "file": "/test/doctors.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/doctors \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "9bf5a39b-624f-471c-9b67-3dcf92be9e74",
              "parentUUID": "5730046f-5387-40c7-9a7b-1f0ab93756cb",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/doctors \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "d43679a9-b161-4106-a522-6af62b88c03d",
              "parentUUID": "5730046f-5387-40c7-9a7b-1f0ab93756cb",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "ab746c27-97ac-4534-8720-69ad58b5a9ab",
              "title": "/getDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
              "file": "/test/doctors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if phone doctor_id is missing (validation schema)",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 400 if phone doctor_id is missing (validation schema)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"fawzii\",\"admin\");\nlet res = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({})\n.expect(400);",
                  "err": {},
                  "uuid": "e51c6a35-ff6c-4071-8d4c-f479dc95de23",
                  "parentUUID": "ab746c27-97ac-4534-8720-69ad58b5a9ab",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.send({doctor_id: \"1233\"})\n.expect(401)",
                  "err": {},
                  "uuid": "020fe489-bf0c-4e56-9711-323c6ed42c87",
                  "parentUUID": "ab746c27-97ac-4534-8720-69ad58b5a9ab",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 404 if doctor not found",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 404 if doctor not found",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"fawzii\",\"user\");\nlet res = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({doctor_id: 54878785})\n.expect(404);",
                  "err": {},
                  "uuid": "9d55d1c3-2d6e-46e3-b9a0-ae72d905511d",
                  "parentUUID": "ab746c27-97ac-4534-8720-69ad58b5a9ab",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got doctor successfully",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 200 if got doctor successfully",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"fawzii\",\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090113795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\": \"100\",\n})\n.expect(201);\nconst doctor_id = res.body.data.doctor_id;\nres = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({doctor_id: doctor_id})\n.expect(200);\ndeleteDoctor(\"01090113795\");",
                  "err": {},
                  "uuid": "08eea37a-8fdf-4b83-aebc-7f088f3e287c",
                  "parentUUID": "ab746c27-97ac-4534-8720-69ad58b5a9ab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e51c6a35-ff6c-4071-8d4c-f479dc95de23",
                "020fe489-bf0c-4e56-9711-323c6ed42c87",
                "9d55d1c3-2d6e-46e3-b9a0-ae72d905511d",
                "08eea37a-8fdf-4b83-aebc-7f088f3e287c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3155d54b-1498-4a33-b744-265d807e7438",
              "title": "/getDoctors",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
              "file": "/test/doctors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/doctors /getDoctors Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/doctors/getDoctors\")\n.expect(401)",
                  "err": {},
                  "uuid": "f883fadc-e439-4032-b230-c48caca9e99b",
                  "parentUUID": "3155d54b-1498-4a33-b744-265d807e7438",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got doctors successfully",
                  "fullTitle": "/api/doctors /getDoctors Should respond with 200 if got doctors successfully",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"fawziiiiiii\",\"user\");\n            let res = await request(server)\n            .post(\"/api/doctors/getDoctors\")\n            .set(\"Authorization\", `Bearer ${token}`)\n            .send({category_id: 42})\n            .expect(200);",
                  "err": {},
                  "uuid": "caf939b2-fec1-4d17-af47-06357dc0a702",
                  "parentUUID": "3155d54b-1498-4a33-b744-265d807e7438",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f883fadc-e439-4032-b230-c48caca9e99b",
                "caf939b2-fec1-4d17-af47-06357dc0a702"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f80177d0-cdee-4e66-89ac-a1c3b3efcca9",
              "title": "/updateDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
              "file": "/test/doctors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/doctors/updateDoctor\")\n.send({\"phone_number\":\"3487\"})\n.expect(401);",
                  "err": {},
                  "uuid": "e379dc3a-62ec-477f-a5cc-b5a571265e34",
                  "parentUUID": "f80177d0-cdee-4e66-89ac-a1c3b3efcca9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 if field is nor allowed",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 400 if field is nor allowed",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243311\",\"admin\");\nlet res = await request(server)\n.patch(\"/api/doctors/updateDoctor\")\n.send({\"fb_token_id\":\"3487\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "499bde26-fc03-4a21-8ebf-acfbf8e2b760",
                  "parentUUID": "f80177d0-cdee-4e66-89ac-a1c3b3efcca9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if successfully updated",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 200 if successfully updated",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"11090243799\", \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"11090243799\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(201);\n  const docId = res.body.data.doctor_id;\nres = await request(server)\n .patch(\"/api/doctors/updateDoctor\")\n.send({\n    doctor_id: docId,\n    phone_number: \"112345\",\n    password: \"t123\",\n    first_name: \"fawziiiii\",\n    last_name: \"ahmedddddd\",\n    country: \"saudiarabia\",\n    category_id: 5,\n    picture: \"fkfjkfj\",\n    price: \"300\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);\nexpect(res.body.data.phone_number).to.equal(\"112345\");\nexpect(res.body.data.password).to.equal(\"t123\");\nexpect(res.body.data.first_name).to.equal(\"fawziiiii\");\nexpect(res.body.data.last_name).to.equal(\"ahmedddddd\");\nexpect(res.body.data.country).to.equal(\"saudiarabia\");\nexpect(res.body.data.category_id).to.equal(5);\nexpect(res.body.data.picture).to.equal(\"fkfjkfj\");\nexpect(res.body.data.price).to.equal(\"300\");",
                  "err": {},
                  "uuid": "5094e563-ad04-4be2-a78c-cb9e057cc7d8",
                  "parentUUID": "f80177d0-cdee-4e66-89ac-a1c3b3efcca9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 403 if new phone number is already registered",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 403 if new phone number is already registered",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243313\",\"admin\");\n          let res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n  phone_number: \"110902411\",\n  password: \"testtest\",\n  first_name: \"fawzi\",\n  last_name: \"ahmed\",\n  country: \"egypt\",\n  category_id: 1,\n  picture: \"fkfjkfj\",\n  price: \"100\",\n})\n.expect(201);\nconst docId = res.body.data.doctor_id;\nres = await request(server)\n.patch(\"/api/doctors/updateDoctor\")\n.send({\n    doctor_id: docId,\n    phone_number: \"112345\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteDoctor(\"110902411\");\ndeleteDoctor(\"112345\");",
                  "err": {},
                  "uuid": "931f06f8-6524-4e4a-b8f1-25a8be1a3c38",
                  "parentUUID": "f80177d0-cdee-4e66-89ac-a1c3b3efcca9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e379dc3a-62ec-477f-a5cc-b5a571265e34",
                "499bde26-fc03-4a21-8ebf-acfbf8e2b760",
                "5094e563-ad04-4be2-a78c-cb9e057cc7d8",
                "931f06f8-6524-4e4a-b8f1-25a8be1a3c38"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 35,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a7c1fe90-20cc-4774-87d1-c1791991b1d0",
          "title": "/api/user",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
          "file": "/test/user.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/user \"before each\" hook",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "ea61ec7f-bd80-4d9b-91be-1faaf9875026",
              "parentUUID": "a7c1fe90-20cc-4774-87d1-c1791991b1d0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/user \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "911fbe79-4490-4682-bcb2-876ab2366d19",
              "parentUUID": "a7c1fe90-20cc-4774-87d1-c1791991b1d0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "4833b39b-f859-4329-aafb-79375b3f4c15",
              "title": "/updateInfo",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/user /updateInfo Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\"phone_number\":\"3487\"})\n.expect(401);",
                  "err": {},
                  "uuid": "40be0c6d-c70f-4b36-bc6e-72d18115f28c",
                  "parentUUID": "4833b39b-f859-4329-aafb-79375b3f4c15",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 if field is nor allowed",
                  "fullTitle": "/api/user /updateInfo Should respond with 400 if field is nor allowed",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243311\",\"user\");\nlet res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\"fb_token_id\":\"3487\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "8cbbb7f9-e78a-451a-8fad-c7b9cfc7e320",
                  "parentUUID": "4833b39b-f859-4329-aafb-79375b3f4c15",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if successfully updated",
                  "fullTitle": "/api/user /updateInfo Should respond with 200 if successfully updated",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243311\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n}).expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243311\");\nconst token = genToken(\"01590243311\",\"user\");\n res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\n    \"phone_number\": \"12345\",\n    \"first_name\": \"ahmed\",\n    \"last_name\":\"mohammed\",\n    \"birth_date\": \"1999-03-22\",\n    \"weight\": 200,\n    \"height\": 300,\n    \"bmi\": 50,\n    \"gender\": \"male\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);\nexpect(res.body.data.phone_number).to.equal(\"12345\");\nexpect(res.body.data.first_name).to.equal(\"ahmed\");\nexpect(res.body.data.last_name).to.equal(\"mohammed\");\nexpect(res.body.data.birth_date).to.equal(\"1999-03-22\");\nexpect(res.body.data.weight).to.equal(200);\nexpect(res.body.data.height).to.equal(300);\nexpect(res.body.data.bmi).to.equal(50);\nexpect(res.body.data.gender).to.equal(\"male\");",
                  "err": {},
                  "uuid": "e28e128b-bf11-4215-895a-ef57bde190f6",
                  "parentUUID": "4833b39b-f859-4329-aafb-79375b3f4c15",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 403 if phone number is already registered",
                  "fullTitle": "/api/user /updateInfo Should respond with 403 if phone number is already registered",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243313\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n}).expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243313\");\nconst token = genToken(\"01590243313\",\"user\");\n res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\n    \"phone_number\": \"12345\",\n    \"first_name\": \"ahmed\",\n    \"last_name\":\"mohammed\",\n    \"birth_date\": \"1999-03-22\",\n    \"weight\": 200,\n    \"height\": 300,\n    \"bmi\": 50,\n    \"gender\": \"male\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteUser(\"01590243313\");\ndeleteUser(\"12345\");",
                  "err": {},
                  "uuid": "84d6ddc9-87a5-4f44-88de-3c7ffa08b563",
                  "parentUUID": "4833b39b-f859-4329-aafb-79375b3f4c15",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "40be0c6d-c70f-4b36-bc6e-72d18115f28c",
                "8cbbb7f9-e78a-451a-8fad-c7b9cfc7e320",
                "e28e128b-bf11-4215-895a-ef57bde190f6",
                "84d6ddc9-87a5-4f44-88de-3c7ffa08b563"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 26,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "319a9087-9f24-49cf-a833-6545c60dc9b5",
              "title": "/notBlocked",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/user /notBlocked Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/user/notBlocked\")\n.expect(401);",
                  "err": {},
                  "uuid": "c7accf48-3d83-40ea-8059-854c5854b78f",
                  "parentUUID": "319a9087-9f24-49cf-a833-6545c60dc9b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 403 if user is blocked",
                  "fullTitle": "/api/user /notBlocked should respond with 403 if user is blocked",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"01590243399\",\"user\");\nawait blockUser(\"01590243399\");\nres = await request(server)\n.get(\"/api/user/notBlocked\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "e033d112-4e93-4f63-b4ae-bc6243540f24",
                  "parentUUID": "319a9087-9f24-49cf-a833-6545c60dc9b5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c7accf48-3d83-40ea-8059-854c5854b78f",
                "e033d112-4e93-4f63-b4ae-bc6243540f24"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d3fec9e2-fc27-4a5d-a5ae-63ee00a3f392",
              "title": "/api/user/updateImage",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should responed with 200 if updated",
                  "fullTitle": "/api/user /api/user/updateImage Should responed with 200 if updated",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"01590243399\",\"user\");\nres = await request(server)\n.patch(\"/api/user/updateImage\")\n.set(\"Authorization\", `Bearer ${token}`)\n.set('Content-Type', 'application/x-www-form-urlencoded')\n.attach('file',path.resolve(__dirname, \"../logo.png\"))\n.expect(200);",
                  "err": {},
                  "uuid": "2460cde0-1ac3-4d61-82c5-1125409a15b5",
                  "parentUUID": "d3fec9e2-fc27-4a5d-a5ae-63ee00a3f392",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 403 if type not allowed",
                  "fullTitle": "/api/user /api/user/updateImage Should responed with 403 if type not allowed",
                  "timedOut": false,
                  "duration": 38,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",\"user\");\nlet res = await request(server)\n.patch(\"/api/user/updateImage\")\n.set(\"Authorization\", `Bearer ${token}`)\n.set('Content-Type', 'application/x-www-form-urlencoded')\n.attach('file',path.resolve(__dirname, \"../udemy-accs.txt\"))\n.expect(403);",
                  "err": {},
                  "uuid": "c4f54a4e-a2d8-4ec0-a375-ae7cf2bccfb5",
                  "parentUUID": "d3fec9e2-fc27-4a5d-a5ae-63ee00a3f392",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 401 not authorized",
                  "fullTitle": "/api/user /api/user/updateImage Should responed with 401 not authorized",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590241\",\"user\");\nlet res = await request(server)\n.patch(\"/api/user/updateImage\")\n.set(\"Authorization\", `Bearer ${token}`)\n.set('Content-Type', 'application/x-www-form-urlencoded')\n.attach('file',path.resolve(__dirname, \"../logo.png\"))\n.expect(401);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "a6d8f1cd-4a7d-43e6-b231-5e500d26c602",
                  "parentUUID": "d3fec9e2-fc27-4a5d-a5ae-63ee00a3f392",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2460cde0-1ac3-4d61-82c5-1125409a15b5",
                "c4f54a4e-a2d8-4ec0-a375-ae7cf2bccfb5",
                "a6d8f1cd-4a7d-43e6-b231-5e500d26c602"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 54,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "98e00881-1ac2-4f80-a2b3-00370db4ec41",
              "title": "/getUser",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/user /getUser Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/user/getUser\")\n.expect(401);",
                  "err": {},
                  "uuid": "59e61bdc-1dea-4f0d-90e3-1f2b3815eac2",
                  "parentUUID": "98e00881-1ac2-4f80-a2b3-00370db4ec41",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 404 if user not found",
                  "fullTitle": "/api/user /getUser should respond with 404 if user not found",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",\"user\");\nlet res = await request(server)\n.get(\"/api/user/getUser\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({ \"phone_number\": \"9868956981256\", })\n.expect(404);",
                  "err": {},
                  "uuid": "c6192ddd-6e30-4182-85eb-fd4b6151b7c8",
                  "parentUUID": "98e00881-1ac2-4f80-a2b3-00370db4ec41",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if got user successfully",
                  "fullTitle": "/api/user /getUser should respond with 200 if got user successfully",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"015902433399\",\"user\");\nres = await request(server)\n.get(\"/api/user/getUser\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({ \"phone_number\": \"01590243399\", })\n.expect(200);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "7b49c95c-4cb4-43a9-8c7b-b4a0dfe0daa0",
                  "parentUUID": "98e00881-1ac2-4f80-a2b3-00370db4ec41",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "59e61bdc-1dea-4f0d-90e3-1f2b3815eac2",
                "c6192ddd-6e30-4182-85eb-fd4b6151b7c8",
                "7b49c95c-4cb4-43a9-8c7b-b4a0dfe0daa0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}
{
  "stats": {
    "suites": 52,
    "tests": 122,
    "passes": 122,
    "pending": 0,
    "failures": 0,
    "start": "2020-06-12T02:44:30.927Z",
    "end": "2020-06-12T02:44:32.499Z",
    "duration": 1572,
    "testsRegistered": 122,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9f3803d9-0339-4003-b045-87942e9420b9",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c3597e89-5685-46c5-af7c-0804cf8c8549",
          "title": "/api/appointments",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
          "file": "/test/appointments.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/appointments \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "2a110ee8-2d32-4ece-8b9c-c69e82fc6453",
              "parentUUID": "c3597e89-5685-46c5-af7c-0804cf8c8549",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/appointments \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "e0d425be-754d-4a1b-931f-8f2a59816939",
              "parentUUID": "c3597e89-5685-46c5-af7c-0804cf8c8549",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f0123433-f916-4bba-a179-96e90f7d0bc7",
              "title": "/addAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /addAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "eeff0a6f-eda1-4940-8b7f-939ad559d922",
                  "parentUUID": "f0123433-f916-4bba-a179-96e90f7d0bc7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /addAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "13a08a79-ac3f-407b-89fb-503ebcbf967a",
                  "parentUUID": "f0123433-f916-4bba-a179-96e90f7d0bc7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 addedd Successfully",
                  "fullTitle": "/api/appointments /addAppointment Should respond 200 addedd Successfully",
                  "timedOut": false,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\ndeleteUser(\"01590243399\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "be99b661-7773-4fd8-92c9-0c9ca2d1526b",
                  "parentUUID": "f0123433-f916-4bba-a179-96e90f7d0bc7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eeff0a6f-eda1-4940-8b7f-939ad559d922",
                "13a08a79-ac3f-407b-89fb-503ebcbf967a",
                "be99b661-7773-4fd8-92c9-0c9ca2d1526b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 70,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "57c9cabe-68c5-45e6-91d1-535e33d72032",
              "title": "/addConfirmedAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /addConfirmedAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/addConfirmedAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "4847df93-8188-4641-aee0-3bdd609d6bba",
                  "parentUUID": "57c9cabe-68c5-45e6-91d1-535e33d72032",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /addConfirmedAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addConfirmedAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "e2edb96f-3f88-479c-a1b1-81f625205c67",
                  "parentUUID": "57c9cabe-68c5-45e6-91d1-535e33d72032",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 addedd Successfully",
                  "fullTitle": "/api/appointments /addConfirmedAppointment Should respond 200 addedd Successfully",
                  "timedOut": false,
                  "duration": 55,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nconst userId = res.body.data.user_id;\n res = await request(server)\n.post(\"/api/appointments/addConfirmedAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":userId,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nexpect(res.body.data.appointment_status).to.equal(\"upcoming\");\nconst appID = res.body.data.appointment_id;\ndeleteUser(\"01590243399\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "e1b7e5fc-4b02-4a15-ab27-d8422006df70",
                  "parentUUID": "57c9cabe-68c5-45e6-91d1-535e33d72032",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4847df93-8188-4641-aee0-3bdd609d6bba",
                "e2edb96f-3f88-479c-a1b1-81f625205c67",
                "e1b7e5fc-4b02-4a15-ab27-d8422006df70"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 62,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1b92d358-03b7-49d3-b6a2-51c19d4fdabd",
              "title": "/getUserApps",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /getUserApps Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/getUserApps\")\n.expect(401);",
                  "err": {},
                  "uuid": "a04b0fea-5ae9-4b4c-9895-beec0c3f7eea",
                  "parentUUID": "1b92d358-03b7-49d3-b6a2-51c19d4fdabd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /getUserApps Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/getUserApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "bddb657c-4dd0-4ceb-9299-ff1c6db254fd",
                  "parentUUID": "1b92d358-03b7-49d3-b6a2-51c19d4fdabd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /getUserApps Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.post(\"/api/appointments/getUserApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"user_id\":1,\n    })\n.expect(200);\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "4710208e-705e-4407-834a-c10420b22050",
                  "parentUUID": "1b92d358-03b7-49d3-b6a2-51c19d4fdabd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a04b0fea-5ae9-4b4c-9895-beec0c3f7eea",
                "bddb657c-4dd0-4ceb-9299-ff1c6db254fd",
                "4710208e-705e-4407-834a-c10420b22050"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 25,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "39c636bf-6a27-436b-8433-a20fa3dbba11",
              "title": "/finishedAppointments",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /finishedAppointments Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/appointments/finishedAppointments\")\n.expect(401);",
                  "err": {},
                  "uuid": "b6ef0303-7607-4c51-ba34-7e5a8a7b4de5",
                  "parentUUID": "39c636bf-6a27-436b-8433-a20fa3dbba11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /finishedAppointments Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.get(\"/api/appointments/finishedAppointments\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);",
                  "err": {},
                  "uuid": "cbdb05b9-7061-49ab-8f6c-6c1873cb51ba",
                  "parentUUID": "39c636bf-6a27-436b-8433-a20fa3dbba11",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b6ef0303-7607-4c51-ba34-7e5a8a7b4de5",
                "cbdb05b9-7061-49ab-8f6c-6c1873cb51ba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "38c93bae-c765-4676-82df-6d446d4e19f3",
              "title": "/upcomingAppointments",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /upcomingAppointments Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/appointments/upcomingAppointments\")\n.expect(401);",
                  "err": {},
                  "uuid": "a43a2384-a4d6-4389-b57e-5e2719f16db9",
                  "parentUUID": "38c93bae-c765-4676-82df-6d446d4e19f3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /upcomingAppointments Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.get(\"/api/appointments/upcomingAppointments\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);",
                  "err": {},
                  "uuid": "62d0c87a-e384-4563-88c3-a50eef957f3f",
                  "parentUUID": "38c93bae-c765-4676-82df-6d446d4e19f3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a43a2384-a4d6-4389-b57e-5e2719f16db9",
                "62d0c87a-e384-4563-88c3-a50eef957f3f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6203ebad-2573-4f70-b15b-01ffe897382d",
              "title": "/doctorFinishedAppointments",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /doctorFinishedAppointments Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/appointments/doctorFinishedAppointments\")\n.expect(401);",
                  "err": {},
                  "uuid": "7a02d2cd-6849-4599-bd7d-4bd1ed1172da",
                  "parentUUID": "6203ebad-2573-4f70-b15b-01ffe897382d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /doctorFinishedAppointments Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"doctor\");\nlet res = await request(server)\n.get(\"/api/appointments/doctorFinishedAppointments\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);",
                  "err": {},
                  "uuid": "ac97f6f8-2164-44ec-a844-dd6da8d8cbf5",
                  "parentUUID": "6203ebad-2573-4f70-b15b-01ffe897382d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7a02d2cd-6849-4599-bd7d-4bd1ed1172da",
                "ac97f6f8-2164-44ec-a844-dd6da8d8cbf5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9e31eb2f-501e-46dd-8dcf-4497ab5b48bb",
              "title": "/doctorUpcomingAppointments",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /doctorUpcomingAppointments Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/appointments/doctorUpcomingAppointments\")\n.expect(401);",
                  "err": {},
                  "uuid": "a3f59183-6802-492b-b9ff-e173485860e1",
                  "parentUUID": "9e31eb2f-501e-46dd-8dcf-4497ab5b48bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /doctorUpcomingAppointments Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"doctor\");\nlet res = await request(server)\n.get(\"/api/appointments/doctorUpcomingAppointments\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);",
                  "err": {},
                  "uuid": "d2de7724-e291-40b4-979d-d98148518ea5",
                  "parentUUID": "9e31eb2f-501e-46dd-8dcf-4497ab5b48bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a3f59183-6802-492b-b9ff-e173485860e1",
                "d2de7724-e291-40b4-979d-d98148518ea5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fc86b986-397e-4f6c-bf99-94fac0bdf341",
              "title": "/getDocApps",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /getDocApps Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/getDocApps\")\n.expect(401);",
                  "err": {},
                  "uuid": "3264e8f3-cf76-426f-acca-d3d0167f654a",
                  "parentUUID": "fc86b986-397e-4f6c-bf99-94fac0bdf341",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /getDocApps Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/getDocApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"doctor_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "3b877599-53b2-41c7-b9c3-7ee347c2a47e",
                  "parentUUID": "fc86b986-397e-4f6c-bf99-94fac0bdf341",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /getDocApps Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.post(\"/api/appointments/getDocApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":1,\n    })\n.expect(200);\ndeleteUser(\"01595543366\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "4a3a6974-f89d-4607-95cc-9f5439158066",
                  "parentUUID": "fc86b986-397e-4f6c-bf99-94fac0bdf341",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3264e8f3-cf76-426f-acca-d3d0167f654a",
                "3b877599-53b2-41c7-b9c3-7ee347c2a47e",
                "4a3a6974-f89d-4607-95cc-9f5439158066"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4e503965-8f29-413f-971a-388f596a5cec",
              "title": "/cancelAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /cancelAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/appointments/cancelAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "16486c07-61be-49d5-af40-395a0b0622b7",
                  "parentUUID": "4e503965-8f29-413f-971a-388f596a5cec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /cancelAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/appointments/cancelAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"aapointment_id\":\"djdkj\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "8c6345b4-1d31-425a-b6b5-ae0d5366714b",
                  "parentUUID": "4e503965-8f29-413f-971a-388f596a5cec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 updated Successfully",
                  "fullTitle": "/api/appointments /cancelAppointment Should respond 200 updated Successfully",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.patch(\"/api/appointments/cancelAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"appointment_id\":appID,\n    })\n.expect(200);\nexpect(res.body.data.appointment_status).to.equal(\"canceled\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "64668f9b-35b3-4283-b51f-f6b8b153c9e3",
                  "parentUUID": "4e503965-8f29-413f-971a-388f596a5cec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "16486c07-61be-49d5-af40-395a0b0622b7",
                "8c6345b4-1d31-425a-b6b5-ae0d5366714b",
                "64668f9b-35b3-4283-b51f-f6b8b153c9e3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 20,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b80b3eee-0445-4ae0-8de6-eea476b52e6a",
              "title": "/confirmAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /confirmAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/appointments/confirmAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "d25a3a2e-35ec-439d-858a-51909fbabc41",
                  "parentUUID": "b80b3eee-0445-4ae0-8de6-eea476b52e6a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /confirmAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/appointments/confirmAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"aapointment_id\":\"djdkj\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "50192545-6fab-452d-936a-fd43e55d7d16",
                  "parentUUID": "b80b3eee-0445-4ae0-8de6-eea476b52e6a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 updated Successfully",
                  "fullTitle": "/api/appointments /confirmAppointment Should respond 200 updated Successfully",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.patch(\"/api/appointments/confirmAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"appointment_id\":appID,\n    })\n.expect(200);\nexpect(res.body.data.appointment_status).to.equal(\"upcoming\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "64c3c0d4-d388-414c-8135-c80d4cc6e462",
                  "parentUUID": "b80b3eee-0445-4ae0-8de6-eea476b52e6a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d25a3a2e-35ec-439d-858a-51909fbabc41",
                "50192545-6fab-452d-936a-fd43e55d7d16",
                "64c3c0d4-d388-414c-8135-c80d4cc6e462"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5ef4d8b0-cf7a-460f-a180-e9f7166fd01e",
              "title": "/docAppsByDate",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /docAppsByDate Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/docAppsByDate\")\n.expect(401);",
                  "err": {},
                  "uuid": "c4eb4647-9a85-4f9d-a1d5-fea9860bb81d",
                  "parentUUID": "5ef4d8b0-cf7a-460f-a180-e9f7166fd01e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /docAppsByDate Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"doctor\");\nlet res = await request(server)\n.post(\"/api/appointments/docAppsByDate\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"aapointment_id\":\"djdkj\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "e852d627-94e2-4a40-96fc-768f9296a976",
                  "parentUUID": "5ef4d8b0-cf7a-460f-a180-e9f7166fd01e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if we got the apps successfully",
                  "fullTitle": "/api/appointments /docAppsByDate Should respond with 200 if we got the apps successfully",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken('01090243795',1,\"doctor\");\nlet res = await request(server)\n.post(\"/api/appointments/docAppsByDate\")\n.set('Authorization',`Bearer ${token}`)\n.send({\n    \"date\":'2020-03-20'\n})\n.expect(200)\n// expect(res.body.data[0].date).to.equal(\"2020-03-20\");",
                  "err": {},
                  "uuid": "6a834bd3-18cf-412c-a946-e537efecc92a",
                  "parentUUID": "5ef4d8b0-cf7a-460f-a180-e9f7166fd01e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c4eb4647-9a85-4f9d-a1d5-fea9860bb81d",
                "e852d627-94e2-4a40-96fc-768f9296a976",
                "6a834bd3-18cf-412c-a946-e537efecc92a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b9d318a3-bfdc-4a94-8359-7db4a4136b75",
          "title": "/api/auth",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
          "file": "/test/auth.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/auth \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "a3b6fd1c-4ddd-46eb-853d-44269444191d",
              "parentUUID": "b9d318a3-bfdc-4a94-8359-7db4a4136b75",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/auth \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "cdcca707-4d30-4151-97af-a0e277db88e5",
              "parentUUID": "b9d318a3-bfdc-4a94-8359-7db4a4136b75",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "85502253-b2bd-4a07-afce-d0cbb231e43e",
              "title": "/signup",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if one of inputs is incorrect or missing (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /signup should respond with 400 if one of inputs is incorrect or missing (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\").expect(400);  \nres = await request(server)\n.post(\"/api/auth/signup\")\n.send({password:\"fawzi\"})\n.expect(400);",
                  "err": {},
                  "uuid": "e58547d0-a835-47a4-a6f5-8f211164c43c",
                  "parentUUID": "85502253-b2bd-4a07-afce-d0cbb231e43e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 201 if user succefully registered",
                  "fullTitle": "/api/auth /signup should respond with 201 if user succefully registered",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243399\");",
                  "err": {},
                  "uuid": "fe452bdf-3fc2-41ff-820c-57d77f2ddeea",
                  "parentUUID": "85502253-b2bd-4a07-afce-d0cbb231e43e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 403 if phone_number is already registered",
                  "fullTitle": "/api/auth /signup should respond with 403 if phone_number is already registered",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(403);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "9cbf909c-0b41-4832-838f-de74b8c3ccf2",
                  "parentUUID": "85502253-b2bd-4a07-afce-d0cbb231e43e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e58547d0-a835-47a4-a6f5-8f211164c43c",
                "fe452bdf-3fc2-41ff-820c-57d77f2ddeea",
                "9cbf909c-0b41-4832-838f-de74b8c3ccf2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e50e5882-0f7e-4640-940e-c1902125c3b6",
              "title": "/signin",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /signin should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signin\")\n.expect(400);",
                  "err": {},
                  "uuid": "0bbea52b-6645-47df-94e4-6670280eac14",
                  "parentUUID": "e50e5882-0f7e-4640-940e-c1902125c3b6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 when phone number notfound `backend side`",
                  "fullTitle": "/api/auth /signin should respond with 401 when phone number notfound `backend side`",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n .post(\"/api/auth/signin\")\n .send({\"phone_number\":\"01590243311\"})\n .expect(401);",
                  "err": {},
                  "uuid": "70e78ff5-ef24-468b-a739-826bceb7faef",
                  "parentUUID": "e50e5882-0f7e-4640-940e-c1902125c3b6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if user loged in successfully",
                  "fullTitle": "/api/auth /signin should respond with 200 if user loged in successfully",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243311\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n}).expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243311\");\nres = await request(server)\n.post(\"/api/auth/signin\")\n.send({\"phone_number\":\"01590243311\"})\n.expect(200);\ndeleteUser(\"01590243311\");",
                  "err": {},
                  "uuid": "358ae5b6-6cb1-41ca-8fb9-90f4b937ec8a",
                  "parentUUID": "e50e5882-0f7e-4640-940e-c1902125c3b6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0bbea52b-6645-47df-94e4-6670280eac14",
                "70e78ff5-ef24-468b-a739-826bceb7faef",
                "358ae5b6-6cb1-41ca-8fb9-90f4b937ec8a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "bbfcbc74-8ce4-4fae-acde-d1dc7f760ced",
              "title": "/updateFirebaseToken",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /updateFirebaseToken Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"notInTheSchema\":\"haka\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "923ca826-3337-4ef5-9ab1-439e3c96647a",
                  "parentUUID": "bbfcbc74-8ce4-4fae-acde-d1dc7f760ced",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if phone number not found `backend side`",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 401 if phone number not found `backend side`",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243788\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"djkdjkdjk\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(401);",
                  "err": {},
                  "uuid": "1ebd5fbe-d36b-4f5a-859b-81f798f523fc",
                  "parentUUID": "bbfcbc74-8ce4-4fae-acde-d1dc7f760ced",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if we updated the token_id successfully",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 200 if we updated the token_id successfully",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243388\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\"\n}).expect(201);\nconst token = genToken(\"01590243388\",1,\"user\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);\nexpect(res.body.data.updated_token).to.equal(\"123456789elhamdullah\");\ndeleteUser(\"01590243388\");",
                  "err": {},
                  "uuid": "be9edbf4-c961-4807-a423-f1a85fff6309",
                  "parentUUID": "bbfcbc74-8ce4-4fae-acde-d1dc7f760ced",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 403 if user is blocked",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 403 if user is blocked",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"01590243399\",1,\"user\");\nawait blockUser(\"01590243399\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "9518d1c6-1d81-410b-9ffc-5c9dd35980df",
                  "parentUUID": "bbfcbc74-8ce4-4fae-acde-d1dc7f760ced",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if user is not authorized ",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 401 if user is not authorized ",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243391\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\n// const token = genToken(\"01590243399\",\"user\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n// .set(\"Authorization\", `Bearer ${token}`)\n.expect(401);\ndeleteUser(\"01590243391\");",
                  "err": {},
                  "uuid": "189d3dbc-c8fc-405e-b6c2-fa693d9fcf6d",
                  "parentUUID": "bbfcbc74-8ce4-4fae-acde-d1dc7f760ced",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "923ca826-3337-4ef5-9ab1-439e3c96647a",
                "1ebd5fbe-d36b-4f5a-859b-81f798f523fc",
                "be9edbf4-c961-4807-a423-f1a85fff6309",
                "9518d1c6-1d81-410b-9ffc-5c9dd35980df",
                "189d3dbc-c8fc-405e-b6c2-fa693d9fcf6d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 45,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7372d52c-a351-48df-8ea2-df48157cc3cd",
              "title": "/signDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if any inputs are incorrect or missed (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /signDoctor should respond with 400 if any inputs are incorrect or missed (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signDoctor\")\n.send({phone_number:\"02903\"})\n.expect(400);",
                  "err": {},
                  "uuid": "cc7e22b9-9f69-42f0-a199-123d2f87e239",
                  "parentUUID": "7372d52c-a351-48df-8ea2-df48157cc3cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if phone number or password are incorrect `backend side`",
                  "fullTitle": "/api/auth /signDoctor should respond with 401 if phone number or password are incorrect `backend side`",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090243795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\":\"200\"\n})\n.expect(201);\nres = await request(server)\n.post(\"/api/auth/signDoctor\")\n.send({phone_number:\"01090243794\",password:\"01288\"})\n.expect(401);\ndeleteDoctor(\"01090243795\");",
                  "err": {},
                  "uuid": "30fa4f7e-8698-4def-8913-41a8cfe1860b",
                  "parentUUID": "7372d52c-a351-48df-8ea2-df48157cc3cd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc7e22b9-9f69-42f0-a199-123d2f87e239",
                "30fa4f7e-8698-4def-8913-41a8cfe1860b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "40726fe4-50b0-4f3f-8694-c2d788cfe960",
              "title": "/updateDoctorFirebaseToken",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"doctor\");\nlet res = await request(server)\n.patch(\"/api/auth/updateDoctorFirebaseToken\")\n.send({\"notInTheSchema\":\"haka\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "ac9acfb6-9327-4bf0-9f0e-05368271192e",
                  "parentUUID": "40726fe4-50b0-4f3f-8694-c2d788cfe960",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if phone number not found `backend side`",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken should respond with 401 if phone number not found `backend side`",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243788\",1,\"doctor\");\nlet res = await request(server)\n.patch(\"/api/auth/updateDoctorFirebaseToken\")\n.send({\"new_token\":\"djkdjkdjk\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(401);",
                  "err": {},
                  "uuid": "bed3dede-5383-49c5-931d-f4347875a310",
                  "parentUUID": "40726fe4-50b0-4f3f-8694-c2d788cfe960",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if we updated the Doctor token_id successfully",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken should respond with 200 if we updated the Doctor token_id successfully",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243788\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090243795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\":\"200\"\n})\n.expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01090243795\");\nconst token2 = genToken(\"01090243795\",1,\"doctor\");\nres = await request(server)\n.patch(\"/api/auth/updateDoctorFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n.set(\"Authorization\", `Bearer ${token2}`)\n.expect(200);\nexpect(res.body.data.updated_token).to.equal(\"123456789elhamdullah\");\ndeleteDoctor(\"01090243795\");",
                  "err": {},
                  "uuid": "29e1ea48-bf28-4c53-9e3a-c70490c311eb",
                  "parentUUID": "40726fe4-50b0-4f3f-8694-c2d788cfe960",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if Doctor is not authorized ",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken should respond with 401 if Doctor is not authorized ",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01010243795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\":\"200\"\n})\n.expect(201);\n// const token = genToken(\"01590243399\",\"doctor\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n// .set(\"Authorization\", `Bearer ${token}`)\n.expect(401);\ndeleteDoctor(\"01010243795\");",
                  "err": {},
                  "uuid": "810754bd-523a-4579-91da-d5d9d9b764c3",
                  "parentUUID": "40726fe4-50b0-4f3f-8694-c2d788cfe960",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ac9acfb6-9327-4bf0-9f0e-05368271192e",
                "bed3dede-5383-49c5-931d-f4347875a310",
                "29e1ea48-bf28-4c53-9e3a-c70490c311eb",
                "810754bd-523a-4579-91da-d5d9d9b764c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 28,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fa1f3236-576e-43fe-bf72-59d4b1ba07c6",
          "title": "/api/categories",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/categories.js",
          "file": "/test/categories.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/categories \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "0f8714b3-c68c-4a57-9361-07505b137c81",
              "parentUUID": "fa1f3236-576e-43fe-bf72-59d4b1ba07c6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/categories \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "5caca057-ae15-4bb7-b55b-61bb00150efb",
              "parentUUID": "fa1f3236-576e-43fe-bf72-59d4b1ba07c6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "523a8456-1d8d-4455-a086-5c4366a8fd8c",
              "title": "/getCategories",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/categories.js",
              "file": "/test/categories.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/categories /getCategories Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/categories/getCategories\")\n.expect(401);",
                  "err": {},
                  "uuid": "4b1e3820-9100-419b-b912-e0857e66ad6b",
                  "parentUUID": "523a8456-1d8d-4455-a086-5c4366a8fd8c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 if got categories successfully",
                  "fullTitle": "/api/categories /getCategories Should respond 200 if got categories successfully",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.get(\"/api/categories/getCategories\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);",
                  "err": {},
                  "uuid": "34abee20-e992-4be8-b41b-0c27739cc5d4",
                  "parentUUID": "523a8456-1d8d-4455-a086-5c4366a8fd8c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4b1e3820-9100-419b-b912-e0857e66ad6b",
                "34abee20-e992-4be8-b41b-0c27739cc5d4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eb0748b3-ad97-4784-bd73-bb53d7b5e7ee",
          "title": "/api/controlPanel",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
          "file": "/test/controlPanel.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/controlPanel \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "f4b54b13-45c5-42f9-9bdc-fb5e391a59ee",
              "parentUUID": "eb0748b3-ad97-4784-bd73-bb53d7b5e7ee",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/controlPanel \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "8dd6deb6-2384-4a65-9e29-13c0dd314b44",
              "parentUUID": "eb0748b3-ad97-4784-bd73-bb53d7b5e7ee",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "004ca9df-97a7-4326-b745-ca26a3ea271c",
              "title": "/addingDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION)",
                  "fullTitle": "/api/controlPanel /addingDoctor Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nconst res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(400);",
                  "err": {},
                  "uuid": "d2033636-316d-41b3-9110-3178fd12499a",
                  "parentUUID": "004ca9df-97a7-4326-b745-ca26a3ea271c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 201 if doctor created successfully",
                  "fullTitle": "/api/controlPanel /addingDoctor Should respond with 201 if doctor created successfully",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"11090243799\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"11090243799\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"11090243799\");\ndeleteDoctor(\"11090243799\");",
                  "err": {},
                  "uuid": "092f180d-f1a9-4de3-9e62-c0509c1387d1",
                  "parentUUID": "004ca9df-97a7-4326-b745-ca26a3ea271c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 403 if the phone number is already registered",
                  "fullTitle": "/api/controlPanel /addingDoctor Should respond with 403 if the phone number is already registered",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243798\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243798\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01090243798\");\nres = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243798\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(403);",
                  "err": {},
                  "uuid": "3ba66220-599c-45e5-9284-d4029503a1d0",
                  "parentUUID": "004ca9df-97a7-4326-b745-ca26a3ea271c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d2033636-316d-41b3-9110-3178fd12499a",
                "092f180d-f1a9-4de3-9e62-c0509c1387d1",
                "3ba66220-599c-45e5-9284-d4029503a1d0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3529257d-729e-4a2f-b895-9acaf16a94ce",
              "title": "/addingAdmin",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION",
                  "fullTitle": "/api/controlPanel /addingAdmin Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ name: \"fawzi\" })\n  .expect(400);",
                  "err": {},
                  "uuid": "afbd6032-ee28-426e-9781-18f3dc3bd881",
                  "parentUUID": "3529257d-729e-4a2f-b895-9acaf16a94ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 201 if created successfully",
                  "fullTitle": "/api/controlPanel /addingAdmin Should respond with 201 if created successfully",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"11090243799\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"11090243799\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"11090243799\");\ndeleteAdmin(\"11090243799\");",
                  "err": {},
                  "uuid": "812d5364-4b3e-4d2e-beec-efcb65d2eddb",
                  "parentUUID": "3529257d-729e-4a2f-b895-9acaf16a94ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should Respond with 403 if phone number is already Registered",
                  "fullTitle": "/api/controlPanel /addingAdmin Should Respond with 403 if phone number is already Registered",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243795\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(403);\ndeleteAdmin(\"01090243795\");",
                  "err": {},
                  "uuid": "7989435d-dc63-4560-a456-4e49c3192c02",
                  "parentUUID": "3529257d-729e-4a2f-b895-9acaf16a94ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "afbd6032-ee28-426e-9781-18f3dc3bd881",
                "812d5364-4b3e-4d2e-beec-efcb65d2eddb",
                "7989435d-dc63-4560-a456-4e49c3192c02"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d3b56371-3647-4e94-bcb6-d2f7833c27a4",
              "title": "/signAdmin",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "fullTitle": "/api/controlPanel /signAdmin should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .post(\"/api/controlPanel/signAdmin\")\n  .expect(400);",
                  "err": {},
                  "uuid": "53cd8d61-83d1-44bc-82c3-af3265bbe8c1",
                  "parentUUID": "d3b56371-3647-4e94-bcb6-d2f7833c27a4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 when phone number is not found `backend side`",
                  "fullTitle": "/api/controlPanel /signAdmin should respond with 401 when phone number is not found `backend side`",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .post(\"/api/controlPanel/signAdmin\")\n  .send({ phone_number: \"01090243795\", password: \"testest\" })\n  .expect(401);",
                  "err": {},
                  "uuid": "d77f0a34-07cb-4fba-bf88-2f17b4ab6542",
                  "parentUUID": "d3b56371-3647-4e94-bcb6-d2f7833c27a4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if admin loged in successfully",
                  "fullTitle": "/api/controlPanel /signAdmin should respond with 200 if admin loged in successfully",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243795\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01090243795\");\nres = await request(server)\n  .post(\"/api/controlPanel/signAdmin\")\n  .send({ phone_number: \"01090243795\", password: \"testtest\" })\n  .expect(200);\nexpect(res.body.data.phone_number).to.equal(\"01090243795\");\ndeleteAdmin(\"01090243795\");",
                  "err": {},
                  "uuid": "f0f2e68d-7134-45fb-99f8-6716a2c9615f",
                  "parentUUID": "d3b56371-3647-4e94-bcb6-d2f7833c27a4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "53cd8d61-83d1-44bc-82c3-af3265bbe8c1",
                "d77f0a34-07cb-4fba-bf88-2f17b4ab6542",
                "f0f2e68d-7134-45fb-99f8-6716a2c9615f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 23,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cdaa1af5-fbda-4b73-ba48-40f06e467ca5",
              "title": "/checkAdminByToken",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if admin is not authorized",
                  "fullTitle": "/api/controlPanel /checkAdminByToken Should respond with 401 if admin is not authorized",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109024379785\",1,\"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/checkAdminByToken\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(401);",
                  "err": {},
                  "uuid": "8dffdab6-ac20-4cec-89bb-a8287c826724",
                  "parentUUID": "cdaa1af5-fbda-4b73-ba48-40f06e467ca5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if token is valid and referanced to admin",
                  "fullTitle": "/api/controlPanel /checkAdminByToken Should respond with 200 if token is valid and referanced to admin",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243795\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(201);\nres = await request(server)\n  .post(\"/api/controlPanel/checkAdminByToken\")\n  .send({})\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(200);\ndeleteAdmin(\"01090243795\");",
                  "err": {},
                  "uuid": "0140f291-9fcb-4aaf-bb23-9290d0fa8d84",
                  "parentUUID": "cdaa1af5-fbda-4b73-ba48-40f06e467ca5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8dffdab6-ac20-4cec-89bb-a8287c826724",
                "0140f291-9fcb-4aaf-bb23-9290d0fa8d84"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "74b4ffd8-6dbd-44b3-a047-5fd04ee60635",
              "title": "/addImage",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should responed with 201 if uploaded",
                  "fullTitle": "/api/controlPanel /addImage Should responed with 201 if uploaded",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addImage\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n  .attach(\"file\", path.resolve(__dirname, \"../logo.png\"))\n  .expect(201);",
                  "err": {},
                  "uuid": "ccb23147-3150-41ac-b1df-05af4a7a9a07",
                  "parentUUID": "74b4ffd8-6dbd-44b3-a047-5fd04ee60635",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 403 if type not allowed",
                  "fullTitle": "/api/controlPanel /addImage Should responed with 403 if type not allowed",
                  "timedOut": false,
                  "duration": 41,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addImage\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n  .attach(\"file\", path.resolve(__dirname, \"../udemy-accs.txt\"))\n  .expect(403);",
                  "err": {},
                  "uuid": "64d391e2-a29c-465e-a8ce-fe5c4190e177",
                  "parentUUID": "74b4ffd8-6dbd-44b3-a047-5fd04ee60635",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ccb23147-3150-41ac-b1df-05af4a7a9a07",
                "64d391e2-a29c-465e-a8ce-fe5c4190e177"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 56,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "399d5396-2e35-4cea-938e-56815ccfdd2f",
              "title": "/getCategories",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /getCategories Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .expect(401);",
                  "err": {},
                  "uuid": "614cdab1-1f9d-4246-bc8c-47cd476b539b",
                  "parentUUID": "399d5396-2e35-4cea-938e-56815ccfdd2f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got categories successfully",
                  "fullTitle": "/api/controlPanel /getCategories Should respond with 200 if got categories successfully",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(200);",
                  "err": {},
                  "uuid": "0639a1f8-5da1-43e7-8b66-3bb08525d070",
                  "parentUUID": "399d5396-2e35-4cea-938e-56815ccfdd2f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "614cdab1-1f9d-4246-bc8c-47cd476b539b",
                "0639a1f8-5da1-43e7-8b66-3bb08525d070"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fb7caa95-cd5b-49ba-aa02-0f8e958ba8b7",
              "title": "/getDoctors",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /getDoctors Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .expect(401);",
                  "err": {},
                  "uuid": "13da97f0-0ca8-472e-ace3-c993dafa6204",
                  "parentUUID": "fb7caa95-cd5b-49ba-aa02-0f8e958ba8b7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got doctors successfully",
                  "fullTitle": "/api/controlPanel /getDoctors Should respond with 200 if got doctors successfully",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .get(\"/api/controlPanel/getDoctors\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(200);",
                  "err": {},
                  "uuid": "e954eff8-2031-472e-b8db-a57f73622f5d",
                  "parentUUID": "fb7caa95-cd5b-49ba-aa02-0f8e958ba8b7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "13da97f0-0ca8-472e-ace3-c993dafa6204",
                "e954eff8-2031-472e-b8db-a57f73622f5d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "394134be-d3f6-4131-a274-7ed28ac40803",
              "title": "/deleteDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /deleteDoctor Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .expect(401);",
                  "err": {},
                  "uuid": "17a8b1b2-14c4-404e-b2e0-41743fe04482",
                  "parentUUID": "394134be-d3f6-4131-a274-7ed28ac40803",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 404 if doctor not found",
                  "fullTitle": "/api/controlPanel /deleteDoctor Should respond with 404 if doctor not found",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .delete(\"/api/controlPanel/deleteDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"0109024371111212129511113\"})\n  .expect(404);",
                  "err": {},
                  "uuid": "3eba7d11-e804-49f3-85ff-444ab227ab9a",
                  "parentUUID": "394134be-d3f6-4131-a274-7ed28ac40803",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if doctor deleted successfully",
                  "fullTitle": "/api/controlPanel /deleteDoctor Should respond with 200 if doctor deleted successfully",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .delete(\"/api/controlPanel/deleteDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"01090243798\"}) // this tee number which registered above\n  .expect(200);",
                  "err": {},
                  "uuid": "80ac3bc2-e2ae-4b4c-916d-3f6e11acf348",
                  "parentUUID": "394134be-d3f6-4131-a274-7ed28ac40803",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "17a8b1b2-14c4-404e-b2e0-41743fe04482",
                "3eba7d11-e804-49f3-85ff-444ab227ab9a",
                "80ac3bc2-e2ae-4b4c-916d-3f6e11acf348"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1c752f2f-11d1-4234-83e2-487a2c2b953e",
              "title": "/toggleBlock",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /toggleBlock Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .patch(\"/api/controlPanel/toggleBlock\")\n  .expect(401);",
                  "err": {},
                  "uuid": "0ab44805-0361-4465-a425-0d3dc53d324a",
                  "parentUUID": "1c752f2f-11d1-4234-83e2-487a2c2b953e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 404 if user not found",
                  "fullTitle": "/api/controlPanel /toggleBlock Should respond with 404 if user not found",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .patch(\"/api/controlPanel/toggleBlock\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"0109024371111212129511113\"})\n  .expect(404);",
                  "err": {},
                  "uuid": "cb517472-99c2-4ab8-b068-23a2ccb5fa68",
                  "parentUUID": "1c752f2f-11d1-4234-83e2-487a2c2b953e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if toggle user's block successfully",
                  "fullTitle": "/api/controlPanel /toggleBlock Should respond with 200 if toggle user's block successfully",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"015902433199\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nconst token = genToken(\"01090243795\",1, \"admin\");\nres = await request(server)\n  .patch(\"/api/controlPanel/toggleBlock\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"015902433199\"})\n  .expect(200);\n  deleteUser(\"015902433199\");",
                  "err": {},
                  "uuid": "8c7478d8-690e-4b21-86e0-a3f093882d69",
                  "parentUUID": "1c752f2f-11d1-4234-83e2-487a2c2b953e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0ab44805-0361-4465-a425-0d3dc53d324a",
                "cb517472-99c2-4ab8-b068-23a2ccb5fa68",
                "8c7478d8-690e-4b21-86e0-a3f093882d69"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a32d1f08-9ce4-4416-bfa9-d7fc250824a0",
              "title": "/getDoctorSlots",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /getDoctorSlots Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .post(\"/api/controlPanel/getDoctorSlots\")\n  .expect(401);",
                  "err": {},
                  "uuid": "036a49ed-7d6b-43b8-9884-ed0f78d4a91c",
                  "parentUUID": "a32d1f08-9ce4-4416-bfa9-d7fc250824a0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 doctor_id is missing or incorrect",
                  "fullTitle": "/api/controlPanel /getDoctorSlots Should respond with 400 doctor_id is missing or incorrect",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/getDoctorSlots\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ doctor_id: \"ahmed\"})\n  .expect(400);",
                  "err": {},
                  "uuid": "dbc54f02-ffc4-402e-9e8d-b385f31c7ead",
                  "parentUUID": "a32d1f08-9ce4-4416-bfa9-d7fc250824a0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got doctor's slots successfully",
                  "fullTitle": "/api/controlPanel /getDoctorSlots Should respond with 200 if got doctor's slots successfully",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/getDoctorSlots\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ doctor_id: 11})\n  .expect(200);",
                  "err": {},
                  "uuid": "04a733fa-959e-408d-bb26-c45bdf25cb33",
                  "parentUUID": "a32d1f08-9ce4-4416-bfa9-d7fc250824a0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "036a49ed-7d6b-43b8-9884-ed0f78d4a91c",
                "dbc54f02-ffc4-402e-9e8d-b385f31c7ead",
                "04a733fa-959e-408d-bb26-c45bdf25cb33"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5f95781f-08b9-473b-9ab8-08934402f88c",
          "title": "/api/doctors",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
          "file": "/test/doctors.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/doctors \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "11da4697-4931-45a7-ab6e-ead0a33d9ee9",
              "parentUUID": "5f95781f-08b9-473b-9ab8-08934402f88c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/doctors \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "06857227-cb58-45d0-9de2-52463d691a9c",
              "parentUUID": "5f95781f-08b9-473b-9ab8-08934402f88c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "1e7a895c-5194-41e3-848c-30a9394ea118",
              "title": "/getDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
              "file": "/test/doctors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if phone doctor_id is missing (validation schema)",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 400 if phone doctor_id is missing (validation schema)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({})\n.expect(400);",
                  "err": {},
                  "uuid": "35388e6a-a365-4007-8284-1d39cddfc8db",
                  "parentUUID": "1e7a895c-5194-41e3-848c-30a9394ea118",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.send({doctor_id: \"1233\"})\n.expect(401)",
                  "err": {},
                  "uuid": "3e9c43c9-9266-4c04-8b66-b8bfe6bede58",
                  "parentUUID": "1e7a895c-5194-41e3-848c-30a9394ea118",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 404 if doctor not found",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 404 if doctor not found",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({doctor_id: 54878785})\n.expect(404);",
                  "err": {},
                  "uuid": "541c3af8-bd41-4411-b85d-73859f2b6946",
                  "parentUUID": "1e7a895c-5194-41e3-848c-30a9394ea118",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got doctor successfully",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 200 if got doctor successfully",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090113795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\": \"100\",\n})\n.expect(201);\nconst doctor_id = res.body.data.doctor_id;\nres = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({doctor_id: doctor_id})\n.expect(200);\ndeleteDoctor(\"01090113795\");",
                  "err": {},
                  "uuid": "5dbca3b2-cd75-46c8-a9e9-e4684c9144b7",
                  "parentUUID": "1e7a895c-5194-41e3-848c-30a9394ea118",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "35388e6a-a365-4007-8284-1d39cddfc8db",
                "3e9c43c9-9266-4c04-8b66-b8bfe6bede58",
                "541c3af8-bd41-4411-b85d-73859f2b6946",
                "5dbca3b2-cd75-46c8-a9e9-e4684c9144b7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ad124160-7f95-48b8-a94b-bc6e68b60593",
              "title": "/getDoctors",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
              "file": "/test/doctors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/doctors /getDoctors Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/doctors/getDoctors\")\n.expect(401)",
                  "err": {},
                  "uuid": "36ec7959-886b-4a1d-8638-ac1979f6a09f",
                  "parentUUID": "ad124160-7f95-48b8-a94b-bc6e68b60593",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got doctors successfully",
                  "fullTitle": "/api/doctors /getDoctors Should respond with 200 if got doctors successfully",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"user\");\n            let res = await request(server)\n            .post(\"/api/doctors/getDoctors\")\n            .set(\"Authorization\", `Bearer ${token}`)\n            .send({category_id: 42})\n            .expect(200);",
                  "err": {},
                  "uuid": "a968f6de-2312-4ac2-a9aa-8a08b9ecb763",
                  "parentUUID": "ad124160-7f95-48b8-a94b-bc6e68b60593",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "36ec7959-886b-4a1d-8638-ac1979f6a09f",
                "a968f6de-2312-4ac2-a9aa-8a08b9ecb763"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "af986558-b697-4e4c-b141-486e402d5a66",
              "title": "/updateDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
              "file": "/test/doctors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/doctors/updateDoctor\")\n.send({\"phone_number\":\"3487\"})\n.expect(401);",
                  "err": {},
                  "uuid": "99d2bfea-d12f-4020-878e-9a1b4cce2c56",
                  "parentUUID": "af986558-b697-4e4c-b141-486e402d5a66",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 if field is nor allowed",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 400 if field is nor allowed",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243311\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/doctors/updateDoctor\")\n.send({\"fb_token_id\":\"3487\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "f915e906-bb5f-4203-90b3-ba22e91e6473",
                  "parentUUID": "af986558-b697-4e4c-b141-486e402d5a66",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if successfully updated",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 200 if successfully updated",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"11090243799\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"11090243799\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(201);\n  const docId = res.body.data.doctor_id;\nres = await request(server)\n .patch(\"/api/doctors/updateDoctor\")\n.send({\n    doctor_id: docId,\n    phone_number: \"112345\",\n    password: \"t123\",\n    first_name: \"fawziiiii\",\n    last_name: \"ahmedddddd\",\n    category_id: 5,\n    picture: \"fkfjkfj\",\n    price: \"300\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);\nexpect(res.body.data.phone_number).to.equal(\"112345\");\nexpect(res.body.data.password).to.equal(\"t123\");\nexpect(res.body.data.first_name).to.equal(\"fawziiiii\");\nexpect(res.body.data.last_name).to.equal(\"ahmedddddd\");\nexpect(res.body.data.category_id).to.equal(5);\nexpect(res.body.data.picture).to.equal(\"fkfjkfj\");\nexpect(res.body.data.price).to.equal(\"300\");",
                  "err": {},
                  "uuid": "a31b782b-5eb4-4277-bd24-878fdded0859",
                  "parentUUID": "af986558-b697-4e4c-b141-486e402d5a66",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 403 if new phone number is already registered",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 403 if new phone number is already registered",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243313\",1,\"admin\");\n          let res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n  phone_number: \"110902411\",\n  password: \"testtest\",\n  first_name: \"fawzi\",\n  last_name: \"ahmed\",\n  category_id: 1,\n  picture: \"fkfjkfj\",\n  price: \"100\",\n})\n.expect(201);\nconst docId = res.body.data.doctor_id;\nres = await request(server)\n.patch(\"/api/doctors/updateDoctor\")\n.send({\n    doctor_id: docId,\n    phone_number: \"112345\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteDoctor(\"110902411\");\ndeleteDoctor(\"112345\");",
                  "err": {},
                  "uuid": "c2f06aef-93c4-40c3-a20e-c9646ba0ce85",
                  "parentUUID": "af986558-b697-4e4c-b141-486e402d5a66",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "99d2bfea-d12f-4020-878e-9a1b4cce2c56",
                "f915e906-bb5f-4203-90b3-ba22e91e6473",
                "a31b782b-5eb4-4277-bd24-878fdded0859",
                "c2f06aef-93c4-40c3-a20e-c9646ba0ce85"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 27,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "846a7cb1-00e4-4e6f-bc89-50812d8c269a",
          "title": "/api/messages",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/messages.test.js",
          "file": "/test/messages.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/messages \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "5422e040-64ed-4786-a770-ad6506988c23",
              "parentUUID": "846a7cb1-00e4-4e6f-bc89-50812d8c269a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/messages \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "ab33d045-e8da-4abd-914c-422fda628a63",
              "parentUUID": "846a7cb1-00e4-4e6f-bc89-50812d8c269a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "e5cc6d69-4158-4e00-a031-132813d16138",
              "title": "/getFinishedMessages",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/messages.test.js",
              "file": "/test/messages.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/messages /getFinishedMessages Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/messages/getFinishedMessages\")\n.expect(401);",
                  "err": {},
                  "uuid": "16f19ff2-4180-42e4-8586-50b73f4a4eb5",
                  "parentUUID": "e5cc6d69-4158-4e00-a031-132813d16138",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 if room_id is missed",
                  "fullTitle": "/api/messages /getFinishedMessages Should respond with 400 if room_id is missed",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/messages/getFinishedMessages\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({room_id: 1591470036382}) // should be a string not number\n.expect(400);",
                  "err": {},
                  "uuid": "a0a452f5-e1c2-4ff8-b6f5-94c266c5c376",
                  "parentUUID": "e5cc6d69-4158-4e00-a031-132813d16138",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 if got messages successfully",
                  "fullTitle": "/api/messages /getFinishedMessages Should respond 200 if got messages successfully",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/messages/getFinishedMessages\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({room_id: \"1591470036382\"}) \n.expect(200);",
                  "err": {},
                  "uuid": "657ed8d1-0f93-4ccf-8bf0-3047baf31587",
                  "parentUUID": "e5cc6d69-4158-4e00-a031-132813d16138",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "16f19ff2-4180-42e4-8586-50b73f4a4eb5",
                "a0a452f5-e1c2-4ff8-b6f5-94c266c5c376",
                "657ed8d1-0f93-4ccf-8bf0-3047baf31587"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "937e0c79-6e6a-4c0d-af78-9cb6cfb4818b",
              "title": "/uploadFile",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/messages.test.js",
              "file": "/test/messages.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should responed with 201 if uploaded",
                  "fullTitle": "/api/messages /uploadFile Should responed with 201 if uploaded",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"user\");\nlet res = await request(server)\n  .post(\"/api/messages/uploadFile\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"chatRoomId\", `589598958`)\n  .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n  .field('chatRoomId', '87478478874')\n  .attach(\"file\", path.resolve(__dirname, \"../logo.png\"))\n  .expect(200);",
                  "err": {},
                  "uuid": "9ff42691-fde3-46fb-85f4-10188b0cde5b",
                  "parentUUID": "937e0c79-6e6a-4c0d-af78-9cb6cfb4818b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 403 if type is not allowed",
                  "fullTitle": "/api/messages /uploadFile Should responed with 403 if type is not allowed",
                  "timedOut": false,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"user\");\nlet res = await request(server)\n.post(\"/api/messages/uploadFile\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"chatRoomId\", `589598958`)\n  .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n  .attach(\"file\", path.resolve(__dirname, \"../udemy-accs.txt\"))\n  .expect(403);",
                  "err": {},
                  "uuid": "2f4b2dbb-c4a9-4605-b37d-b63727807022",
                  "parentUUID": "937e0c79-6e6a-4c0d-af78-9cb6cfb4818b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9ff42691-fde3-46fb-85f4-10188b0cde5b",
                "2f4b2dbb-c4a9-4605-b37d-b63727807022"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 38,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f8337aaa-3b9c-4f5c-870b-264eaf4f9159",
          "title": "/api/prescriptions",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/prescriptions.js",
          "file": "/test/prescriptions.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/prescriptions \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "4d9cc978-28a3-4fed-8a2a-f565f2ae4a18",
              "parentUUID": "f8337aaa-3b9c-4f5c-870b-264eaf4f9159",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/prescriptions \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "f872bef0-581e-4f17-84e3-c61f5fa06ac3",
              "parentUUID": "f8337aaa-3b9c-4f5c-870b-264eaf4f9159",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "2d216aca-cf21-4288-b0c1-4c1c56643c9a",
              "title": "/addPrescription",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/prescriptions.js",
              "file": "/test/prescriptions.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/prescriptions /addPrescription Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/prescriptions/addPrescription\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(401);",
                  "err": {},
                  "uuid": "035519a6-47a6-41a5-b79b-f6945817b7d0",
                  "parentUUID": "2d216aca-cf21-4288-b0c1-4c1c56643c9a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 if inuputs is incorrect or missing",
                  "fullTitle": "/api/prescriptions /addPrescription Should respond with 400 if inuputs is incorrect or missing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"doctor\");\nlet res = await request(server)\n.post(\"/api/prescriptions/addPrescription\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"room_id\": \"1591389838616\", \n  }) \n.expect(400);",
                  "err": {},
                  "uuid": "473f8775-afa5-4230-9f9d-2b3079c74238",
                  "parentUUID": "2d216aca-cf21-4288-b0c1-4c1c56643c9a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 201 if created successfully",
                  "fullTitle": "/api/prescriptions /addPrescription Should respond 201 if created successfully",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"doctor\");\nlet res = await request(server)\n.post(\"/api/prescriptions/addPrescription\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"room_id\": \"1591389838616\", \n    \"diagnose\": \"dkkjdkjdkjdjkd\",\n    \"prescription\": \"kjdjkdjkdkjdkj\"\n  }) \n.expect(201);",
                  "err": {},
                  "uuid": "1b27829b-a160-4998-99db-c33e478ec077",
                  "parentUUID": "2d216aca-cf21-4288-b0c1-4c1c56643c9a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "035519a6-47a6-41a5-b79b-f6945817b7d0",
                "473f8775-afa5-4230-9f9d-2b3079c74238",
                "1b27829b-a160-4998-99db-c33e478ec077"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "48a10b7a-ef80-4cd1-8369-9f0e153fa448",
              "title": "/updatePrescription",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/prescriptions.js",
              "file": "/test/prescriptions.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/prescriptions /updatePrescription Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.put(\"/api/prescriptions/updatePrescription\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(401);",
                  "err": {},
                  "uuid": "05647816-17e7-4735-a2fd-7ae251af8ddd",
                  "parentUUID": "48a10b7a-ef80-4cd1-8369-9f0e153fa448",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 if inuputs is incorrect or missing",
                  "fullTitle": "/api/prescriptions /updatePrescription Should respond with 400 if inuputs is incorrect or missing",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"doctor\");\nlet res = await request(server)\n.put(\"/api/prescriptions/updatePrescription\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"room_id\": \"1591389838616\", \n  }) \n.expect(400);",
                  "err": {},
                  "uuid": "bbdd1d82-c94c-46bb-bab6-bd2660f85d0b",
                  "parentUUID": "48a10b7a-ef80-4cd1-8369-9f0e153fa448",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 201 if updated successfully",
                  "fullTitle": "/api/prescriptions /updatePrescription Should respond 201 if updated successfully",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"doctor\");\nlet res = await request(server)\n.put(\"/api/prescriptions/updatePrescription\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"room_id\": \"1591389838616\", \n    \"diagnose\": \"kjdjkdjkkjdjkdkj\",\n    \"prescription\": \"kjdjkdjkdkjdkj\"\n  }) \n.expect(200);",
                  "err": {},
                  "uuid": "f7b1dae3-d933-4e15-a20f-e775341984d6",
                  "parentUUID": "48a10b7a-ef80-4cd1-8369-9f0e153fa448",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 404 if not found",
                  "fullTitle": "/api/prescriptions /updatePrescription Should respond 404 if not found",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"doctor\");\nlet res = await request(server)\n.put(\"/api/prescriptions/updatePrescription\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"room_id\": \"15913898384984984616\", \n    \"diagnose\": \"dkkjdkjdkjdjkd\",\n    \"prescription\": \"kjdjkdjkdkjdkj\"\n  }) \n.expect(404);",
                  "err": {},
                  "uuid": "4d31f83b-7d7b-4b91-98a6-43f82d114061",
                  "parentUUID": "48a10b7a-ef80-4cd1-8369-9f0e153fa448",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "05647816-17e7-4735-a2fd-7ae251af8ddd",
                "bbdd1d82-c94c-46bb-bab6-bd2660f85d0b",
                "f7b1dae3-d933-4e15-a20f-e775341984d6",
                "4d31f83b-7d7b-4b91-98a6-43f82d114061"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8ee23235-1b66-4fc9-b561-eedc1d00d548",
              "title": "/getPrescription",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/prescriptions.js",
              "file": "/test/prescriptions.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/prescriptions /getPrescription Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/prescriptions/getPrescription\")\n.expect(401);",
                  "err": {},
                  "uuid": "835ca62c-468a-4e81-b7a2-7949457d5b5f",
                  "parentUUID": "8ee23235-1b66-4fc9-b561-eedc1d00d548",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 if room_id is missing or incorrect",
                  "fullTitle": "/api/prescriptions /getPrescription Should respond with 400 if room_id is missing or incorrect",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"doctor\");\nlet res = await request(server)\n.post(\"/api/prescriptions/getPrescription\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"room_i\": \"1591389838616\", \n  }) \n.expect(400);",
                  "err": {},
                  "uuid": "febf48fd-69da-46f7-850c-2797e5809121",
                  "parentUUID": "8ee23235-1b66-4fc9-b561-eedc1d00d548",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got prescription successfully",
                  "fullTitle": "/api/prescriptions /getPrescription Should respond with 200 if got prescription successfully",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"doctor\");\nlet res = await request(server)\n.post(\"/api/prescriptions/getPrescription\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"room_id\": \"1591389838616\", \n  }) \n.expect(200);",
                  "err": {},
                  "uuid": "727ae744-0c83-45b3-98b1-2c58fcd0c006",
                  "parentUUID": "8ee23235-1b66-4fc9-b561-eedc1d00d548",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "835ca62c-468a-4e81-b7a2-7949457d5b5f",
                "febf48fd-69da-46f7-850c-2797e5809121",
                "727ae744-0c83-45b3-98b1-2c58fcd0c006"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c90bff36-b59f-4571-85e7-f4dda72129b4",
          "title": "/api/slots",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
          "file": "/test/slots.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/slots \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "fc46c177-7ddf-44d0-a020-be3edb1e5e2f",
              "parentUUID": "c90bff36-b59f-4571-85e7-f4dda72129b4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/slots \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "ec2c130e-881a-4faa-bc07-df28542c5d93",
              "parentUUID": "c90bff36-b59f-4571-85e7-f4dda72129b4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "56d301a5-1369-4834-a911-619fb5666203",
              "title": "/addSlot",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
              "file": "/test/slots.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/slots /addSlot Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/slots/addSlot\")\n.expect(401);",
                  "err": {},
                  "uuid": "b8e26f90-2322-4772-8ef5-754bc9bd41f9",
                  "parentUUID": "56d301a5-1369-4834-a911-619fb5666203",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/slots /addSlot Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/slots/addSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"day\":\"mon\",\n    \"slot_time\":\"60:00\",\n    \"available\":false\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "716b27e6-71e2-46da-bc2e-9040f62b2710",
                  "parentUUID": "56d301a5-1369-4834-a911-619fb5666203",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 addedd Successfully",
                  "fullTitle": "/api/slots /addSlot Should respond 200 addedd Successfully",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090113795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\": \"100\",\n})\n.expect(201);\nconst docId = res.body.data.doctor_id;\nres = await request(server)\n.post(\"/api/slots/addSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":docId,\n    \"day\":\"mon\",\n    \"start_time\":\"23:00\",\n    \"slot_time\":\"3300\",\n    \"available\":false\n    })\n.expect(201);\nconst slotId = res.body.data.slot_id;\ndeleteDoctor(\"01090113795\");\n// deleteSlot(slotId);",
                  "err": {},
                  "uuid": "f9db607b-cf1a-49d8-a610-c16fe9702b5a",
                  "parentUUID": "56d301a5-1369-4834-a911-619fb5666203",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b8e26f90-2322-4772-8ef5-754bc9bd41f9",
                "716b27e6-71e2-46da-bc2e-9040f62b2710",
                "f9db607b-cf1a-49d8-a610-c16fe9702b5a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4b3dc8cf-a158-447e-bd7f-bba746c3df2a",
              "title": "/updateSlot",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
              "file": "/test/slots.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/slots /updateSlot Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/slots/updateSlot\")\n.expect(401);",
                  "err": {},
                  "uuid": "e612c114-3dd8-4714-911c-80a470c582a8",
                  "parentUUID": "4b3dc8cf-a158-447e-bd7f-bba746c3df2a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is incorrect",
                  "fullTitle": "/api/slots /updateSlot Should respond 400 if one of inputs is incorrect",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/slots/updateSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"ahmed\":\"mon\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "64849d71-3813-41de-a58d-9d4466c3b708",
                  "parentUUID": "4b3dc8cf-a158-447e-bd7f-bba746c3df2a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 updated Successfully",
                  "fullTitle": "/api/slots /updateSlot Should respond 200 updated Successfully",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/slots/updateSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\":1,\n    \"day\":\"wed\",\n    \"start_time\":\"21:00\",\n    \"slot_time\":\"30:00\",\n    \"available\":true\n    })\n.expect(200);\nexpect(res.body.data.day).to.equal(\"wed\");\nconst slotId = res.body.data.slot_id;\n// deleteSlot(slotId);",
                  "err": {},
                  "uuid": "7d79da4d-946f-4ae7-b2c1-d25b8191853c",
                  "parentUUID": "4b3dc8cf-a158-447e-bd7f-bba746c3df2a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e612c114-3dd8-4714-911c-80a470c582a8",
                "64849d71-3813-41de-a58d-9d4466c3b708",
                "7d79da4d-946f-4ae7-b2c1-d25b8191853c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4fe2310e-cd83-4063-9591-60b536db5eb4",
              "title": "/getOpenSlots",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
              "file": "/test/slots.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/slots /getOpenSlots Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/slots/getOpenSlots\")\n.expect(401);",
                  "err": {},
                  "uuid": "08a9b0f7-c3f1-427c-896e-b6b7ff11a6df",
                  "parentUUID": "4fe2310e-cd83-4063-9591-60b536db5eb4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/slots /getOpenSlots Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/slots/getOpenSlots\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "d9464b67-46a6-4702-882a-e0de890bc479",
                  "parentUUID": "4fe2310e-cd83-4063-9591-60b536db5eb4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got slots Successfully",
                  "fullTitle": "/api/slots /getOpenSlots Should respond 200 got slots Successfully",
                  "timedOut": false,
                  "duration": 47,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nconst userId = res.body.data.user_id;\n res = await request(server)\n.post(\"/api/slots/getOpenSlots\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\": 11,\n    \"searchIn\":30,\n    })\n.expect(200);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "5100a1e8-0cfb-49cf-bd3c-21f166475c1d",
                  "parentUUID": "4fe2310e-cd83-4063-9591-60b536db5eb4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "08a9b0f7-c3f1-427c-896e-b6b7ff11a6df",
                "d9464b67-46a6-4702-882a-e0de890bc479",
                "5100a1e8-0cfb-49cf-bd3c-21f166475c1d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 50,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "753231f1-478d-4a15-920a-e12862826f2f",
              "title": "/getDoctorDays",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
              "file": "/test/slots.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/slots /getDoctorDays Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\t\n            .post(\"/api/slots/addSlot\")\t\n            .expect(401);",
                  "err": {},
                  "uuid": "5a60b05c-2f5b-42e5-9624-da943e90d45f",
                  "parentUUID": "753231f1-478d-4a15-920a-e12862826f2f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 if got days susccessfully",
                  "fullTitle": "/api/slots /getDoctorDays Should respond 200 if got days susccessfully",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\t\n            let res = await request(server)\t\n            .post(\"/api/controlPanel/addDoctor\")\t\n            .set(\"Authorization\", `Bearer ${token}`)\t\n            .send({\t\n                \"phone_number\":\"01090113785\",\t\n                \"password\":\"testtest\",\t\n                \"first_name\":\"fawzi\",\t\n                \"last_name\": \"ahmed\",\t\n                \"category_id\":1,\t\n                \"picture\":\"fkfjkfj\",\t\n                \"price\": \"100\",\t\n            })\t\n            .expect(201);\t\n            const docId = res.body.data.doctor_id;\t\n            res = await request(server)\t\n            .post(\"/api/slots/addSlot\")\t\n            .set(\"Authorization\", `Bearer ${token}`)\t\n            .send({\t\n                \"doctor_id\":docId,\t\n                \"day\":\"mon\",\t\n                \"start_time\":\"23:00\",\t\n                \"slot_time\":\"60:00\",\t\n                \"available\":false\t\n                })\t\n            .expect(201);\t\n            const slotId = res.body.data.slot_id;\t\n            const doctorToken = genToken(\"01090113795\",1,\"doctor\");\t\n            res = await request(server)\t\n            .post(\"/api/slots/getDoctorDays\")\t\n            .set(\"Authorization\", `Bearer ${doctorToken}`)\t\n            .expect(200);\t\n            deleteDoctor(\"01090113785\");\t\n            // deleteSlot(slotId);",
                  "err": {},
                  "uuid": "c818abb7-35ea-4367-9f6e-2d34a3cb90e7",
                  "parentUUID": "753231f1-478d-4a15-920a-e12862826f2f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5a60b05c-2f5b-42e5-9624-da943e90d45f",
                "c818abb7-35ea-4367-9f6e-2d34a3cb90e7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 23,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "534ad29b-be71-4782-8952-07b4dce41b2d",
          "title": "/api/user",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
          "file": "/test/user.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/user \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "2f8b8114-0f3b-41a6-8f32-1c748fbdd8e8",
              "parentUUID": "534ad29b-be71-4782-8952-07b4dce41b2d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/user \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "a76d4354-f0e6-44d0-bcf7-e7a5e2e2239b",
              "parentUUID": "534ad29b-be71-4782-8952-07b4dce41b2d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "b7342a9e-a8e5-41de-8577-65d148438d2b",
              "title": "/updateInfo",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/user /updateInfo Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\"phone_number\":\"3487\"})\n.expect(401);",
                  "err": {},
                  "uuid": "edcc8207-0a83-49b3-bc21-99a4dbb3cad0",
                  "parentUUID": "b7342a9e-a8e5-41de-8577-65d148438d2b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 if field is nor allowed",
                  "fullTitle": "/api/user /updateInfo Should respond with 400 if field is nor allowed",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243311\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\"fb_token_id\":\"3487\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "4a9d96d4-1ba8-4861-9935-8dc62466bdc2",
                  "parentUUID": "b7342a9e-a8e5-41de-8577-65d148438d2b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if successfully updated",
                  "fullTitle": "/api/user /updateInfo Should respond with 200 if successfully updated",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243311\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n}).expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243311\");\nconst token = genToken(\"01590243311\",1,\"user\");\n res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\n    \"phone_number\": \"12345\",\n    \"first_name\": \"ahmed\",\n    \"last_name\":\"mohammed\",\n    \"birth_date\": \"1999-03-22\",\n    \"weight\": 200,\n    \"height\": 300,\n    \"bmi\": 50,\n    \"gender\": \"male\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);\nexpect(res.body.data.phone_number).to.equal(\"12345\");\nexpect(res.body.data.first_name).to.equal(\"ahmed\");\nexpect(res.body.data.last_name).to.equal(\"mohammed\");\nexpect(res.body.data.birth_date).to.equal(\"1999-03-22\");\nexpect(res.body.data.weight).to.equal(200);\nexpect(res.body.data.height).to.equal(300);\nexpect(res.body.data.bmi).to.equal(50);\nexpect(res.body.data.gender).to.equal(\"male\");",
                  "err": {},
                  "uuid": "ebfc1d6c-83b4-4c6e-9686-51a83e1e5b15",
                  "parentUUID": "b7342a9e-a8e5-41de-8577-65d148438d2b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 403 if phone number is already registered",
                  "fullTitle": "/api/user /updateInfo Should respond with 403 if phone number is already registered",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243313\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n}).expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243313\");\nconst token = genToken(\"01590243313\",1,\"user\");\n res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\n    \"phone_number\": \"12345\",\n    \"first_name\": \"ahmed\",\n    \"last_name\":\"mohammed\",\n    \"birth_date\": \"1999-03-22\",\n    \"weight\": 200,\n    \"height\": 300,\n    \"bmi\": 50,\n    \"gender\": \"male\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteUser(\"01590243313\");\ndeleteUser(\"12345\");",
                  "err": {},
                  "uuid": "2d6804cf-5592-4ec2-89c7-8146020b84b0",
                  "parentUUID": "b7342a9e-a8e5-41de-8577-65d148438d2b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "edcc8207-0a83-49b3-bc21-99a4dbb3cad0",
                "4a9d96d4-1ba8-4861-9935-8dc62466bdc2",
                "ebfc1d6c-83b4-4c6e-9686-51a83e1e5b15",
                "2d6804cf-5592-4ec2-89c7-8146020b84b0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 28,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2d8b4a26-624d-442a-bacb-8a49a46aec48",
              "title": "/notBlocked",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/user /notBlocked Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/user/notBlocked\")\n.expect(401);",
                  "err": {},
                  "uuid": "2dcb1979-e074-4d57-bc3c-9e25a684a1f7",
                  "parentUUID": "2d8b4a26-624d-442a-bacb-8a49a46aec48",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 403 if user is blocked",
                  "fullTitle": "/api/user /notBlocked should respond with 403 if user is blocked",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"01590243399\",1,\"user\");\nawait blockUser(\"01590243399\");\nres = await request(server)\n.get(\"/api/user/notBlocked\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "99665751-3aea-439c-bb08-1a3850f0017f",
                  "parentUUID": "2d8b4a26-624d-442a-bacb-8a49a46aec48",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2dcb1979-e074-4d57-bc3c-9e25a684a1f7",
                "99665751-3aea-439c-bb08-1a3850f0017f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2791f7ed-9d21-4e08-a968-8c452d1b605b",
              "title": "/api/user/updateImage",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should responed with 200 if updated",
                  "fullTitle": "/api/user /api/user/updateImage Should responed with 200 if updated",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"01590243399\",1,\"user\");\nres = await request(server)\n.patch(\"/api/user/updateImage\")\n.set(\"Authorization\", `Bearer ${token}`)\n.set('Content-Type', 'application/x-www-form-urlencoded')\n.attach('file',path.resolve(__dirname, \"../logo.png\"))\n.expect(200);",
                  "err": {},
                  "uuid": "3662f7d7-745f-4202-874c-e2be596ebc35",
                  "parentUUID": "2791f7ed-9d21-4e08-a968-8c452d1b605b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 403 if type not allowed",
                  "fullTitle": "/api/user /api/user/updateImage Should responed with 403 if type not allowed",
                  "timedOut": false,
                  "duration": 34,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/user/updateImage\")\n.set(\"Authorization\", `Bearer ${token}`)\n.set('Content-Type', 'application/x-www-form-urlencoded')\n.attach('file',path.resolve(__dirname, \"../udemy-accs.txt\"))\n.expect(403);",
                  "err": {},
                  "uuid": "3e28d497-d5b6-4aee-b177-0313ba3b5f7a",
                  "parentUUID": "2791f7ed-9d21-4e08-a968-8c452d1b605b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 401 not authorized",
                  "fullTitle": "/api/user /api/user/updateImage Should responed with 401 not authorized",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590241\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/user/updateImage\")\n.set(\"Authorization\", `Bearer ${token}`)\n.set('Content-Type', 'application/x-www-form-urlencoded')\n.attach('file',path.resolve(__dirname, \"../logo.png\"))\n.expect(401);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "98b447a7-dc13-415c-a35e-e80728e5aec6",
                  "parentUUID": "2791f7ed-9d21-4e08-a968-8c452d1b605b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3662f7d7-745f-4202-874c-e2be596ebc35",
                "3e28d497-d5b6-4aee-b177-0313ba3b5f7a",
                "98b447a7-dc13-415c-a35e-e80728e5aec6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 52,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0c402d76-b9a7-4495-b195-f52573a1b8a1",
              "title": "/getUser",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/user /getUser Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/user/getUser\")\n.expect(401);",
                  "err": {},
                  "uuid": "7ad3e5a0-cb8d-4eb3-93bb-4900b3792e2d",
                  "parentUUID": "0c402d76-b9a7-4495-b195-f52573a1b8a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 404 if user not found",
                  "fullTitle": "/api/user /getUser should respond with 404 if user not found",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/user/getUser\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({ \"phone_number\": \"9868956981256\", })\n.expect(404);",
                  "err": {},
                  "uuid": "10c52461-c942-40bc-aef3-0e4350f45399",
                  "parentUUID": "0c402d76-b9a7-4495-b195-f52573a1b8a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if got user successfully",
                  "fullTitle": "/api/user /getUser should respond with 200 if got user successfully",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"015902433399\",1,\"user\");\nres = await request(server)\n.post(\"/api/user/getUser\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({ \"phone_number\": \"01590243399\", })\n.expect(200);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "79093858-977d-400f-b29d-983fbb96265a",
                  "parentUUID": "0c402d76-b9a7-4495-b195-f52573a1b8a1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7ad3e5a0-cb8d-4eb3-93bb-4900b3792e2d",
                "10c52461-c942-40bc-aef3-0e4350f45399",
                "79093858-977d-400f-b29d-983fbb96265a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}
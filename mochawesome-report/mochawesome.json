{
  "stats": {
    "suites": 41,
    "tests": 100,
    "passes": 99,
    "pending": 0,
    "failures": 1,
    "start": "2020-06-01T13:45:21.571Z",
    "end": "2020-06-01T13:45:23.931Z",
    "duration": 2360,
    "testsRegistered": 100,
    "passPercent": 99,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fbf21233-6c5b-40c9-a9bd-c35691630597",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "36baa118-299c-4486-a90b-6a5723e1828d",
          "title": "/api/appointments",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
          "file": "/test/appointments.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/appointments \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "baaff9f3-4778-48a1-b5af-298a137d82b7",
              "parentUUID": "36baa118-299c-4486-a90b-6a5723e1828d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/appointments \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "03b4e8e5-11e9-487e-9324-faefccc3ab80",
              "parentUUID": "36baa118-299c-4486-a90b-6a5723e1828d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "8c162233-d1f8-4cad-9e9a-931793632127",
              "title": "/addAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /addAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "e88cd8c4-953c-4e14-bffb-db7359b67ced",
                  "parentUUID": "8c162233-d1f8-4cad-9e9a-931793632127",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /addAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "1ab25527-594f-4902-882b-9a97ef855f80",
                  "parentUUID": "8c162233-d1f8-4cad-9e9a-931793632127",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 addedd Successfully",
                  "fullTitle": "/api/appointments /addAppointment Should respond 200 addedd Successfully",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\ndeleteUser(\"01590243399\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "ecc3919e-188d-415b-ac27-0aecc7ce09ed",
                  "parentUUID": "8c162233-d1f8-4cad-9e9a-931793632127",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e88cd8c4-953c-4e14-bffb-db7359b67ced",
                "1ab25527-594f-4902-882b-9a97ef855f80",
                "ecc3919e-188d-415b-ac27-0aecc7ce09ed"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 67,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "414a48b6-c486-4dc5-9115-bfc1a6cc27b2",
              "title": "/addConfirmedAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /addConfirmedAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/addConfirmedAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "1e15b360-8a27-4ff4-853f-e9117a7e8c26",
                  "parentUUID": "414a48b6-c486-4dc5-9115-bfc1a6cc27b2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /addConfirmedAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addConfirmedAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "51615c65-181e-4f51-9f51-9bb5422b7e6e",
                  "parentUUID": "414a48b6-c486-4dc5-9115-bfc1a6cc27b2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 addedd Successfully",
                  "fullTitle": "/api/appointments /addConfirmedAppointment Should respond 200 addedd Successfully",
                  "timedOut": false,
                  "duration": 33,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nconst userId = res.body.data.user_id;\n res = await request(server)\n.post(\"/api/appointments/addConfirmedAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":userId,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nexpect(res.body.data.appointment_status).to.equal(\"upcoming\");\nconst appID = res.body.data.appointment_id;\ndeleteUser(\"01590243399\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "10e61913-a5c9-4f71-95d3-056de0b2a6f5",
                  "parentUUID": "414a48b6-c486-4dc5-9115-bfc1a6cc27b2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1e15b360-8a27-4ff4-853f-e9117a7e8c26",
                "51615c65-181e-4f51-9f51-9bb5422b7e6e",
                "10e61913-a5c9-4f71-95d3-056de0b2a6f5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 38,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "db928f07-00ac-4737-b2b7-cfebf6d51885",
              "title": "/getUserApps",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /getUserApps Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/getUserApps\")\n.expect(401);",
                  "err": {},
                  "uuid": "ce0bfa1b-f975-45ab-87bf-c05ed56027d0",
                  "parentUUID": "db928f07-00ac-4737-b2b7-cfebf6d51885",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /getUserApps Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/getUserApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "afddaf35-f80e-4c97-b1f2-6d711516ca18",
                  "parentUUID": "db928f07-00ac-4737-b2b7-cfebf6d51885",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /getUserApps Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.post(\"/api/appointments/getUserApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"user_id\":1,\n    })\n.expect(200);\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "75ff6e93-3686-45cb-805d-908e26a3a657",
                  "parentUUID": "db928f07-00ac-4737-b2b7-cfebf6d51885",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ce0bfa1b-f975-45ab-87bf-c05ed56027d0",
                "afddaf35-f80e-4c97-b1f2-6d711516ca18",
                "75ff6e93-3686-45cb-805d-908e26a3a657"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 30,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e0d911db-5f64-4fb8-a677-120b5f4b9094",
              "title": "/getDocApps",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /getDocApps Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/getDocApps\")\n.expect(401);",
                  "err": {},
                  "uuid": "5f2a8cf2-7883-4ee6-8c85-b9009366f7f3",
                  "parentUUID": "e0d911db-5f64-4fb8-a677-120b5f4b9094",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /getDocApps Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/getDocApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"doctor_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "86bfc768-c393-461e-a6eb-f6d1b7d36940",
                  "parentUUID": "e0d911db-5f64-4fb8-a677-120b5f4b9094",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /getDocApps Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.post(\"/api/appointments/getDocApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":1,\n    })\n.expect(200);\ndeleteUser(\"01595543366\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "976d75c6-5f7c-40c8-b3c3-ab19571ba076",
                  "parentUUID": "e0d911db-5f64-4fb8-a677-120b5f4b9094",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f2a8cf2-7883-4ee6-8c85-b9009366f7f3",
                "86bfc768-c393-461e-a6eb-f6d1b7d36940",
                "976d75c6-5f7c-40c8-b3c3-ab19571ba076"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 23,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c933d6af-4f7a-4cb5-8160-25f57a3f99c8",
              "title": "/cancelAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /cancelAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/appointments/cancelAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "5d534370-6dfb-401a-a6e8-184d6ba2a48d",
                  "parentUUID": "c933d6af-4f7a-4cb5-8160-25f57a3f99c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /cancelAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/appointments/cancelAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"aapointment_id\":\"djdkj\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "f0fe8a1b-943f-4f3f-9b16-73197bf6b7c9",
                  "parentUUID": "c933d6af-4f7a-4cb5-8160-25f57a3f99c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 updated Successfully",
                  "fullTitle": "/api/appointments /cancelAppointment Should respond 200 updated Successfully",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.patch(\"/api/appointments/cancelAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"appointment_id\":appID,\n    })\n.expect(200);\nexpect(res.body.data.appointment_status).to.equal(\"canceled\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "0ee12267-0a15-4d90-8af7-b6583f9e0d1c",
                  "parentUUID": "c933d6af-4f7a-4cb5-8160-25f57a3f99c8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5d534370-6dfb-401a-a6e8-184d6ba2a48d",
                "f0fe8a1b-943f-4f3f-9b16-73197bf6b7c9",
                "0ee12267-0a15-4d90-8af7-b6583f9e0d1c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "046ac0ba-7ab7-49a1-b251-93745a364a3c",
              "title": "/confirmAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /confirmAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/appointments/confirmAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "13fde8ea-eb1e-4683-921a-8666fadfec7c",
                  "parentUUID": "046ac0ba-7ab7-49a1-b251-93745a364a3c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /confirmAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/appointments/confirmAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"aapointment_id\":\"djdkj\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "ca72d58b-05ab-46d6-914d-c2eab21dcef9",
                  "parentUUID": "046ac0ba-7ab7-49a1-b251-93745a364a3c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 updated Successfully",
                  "fullTitle": "/api/appointments /confirmAppointment Should respond 200 updated Successfully",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.patch(\"/api/appointments/confirmAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"appointment_id\":appID,\n    })\n.expect(200);\nexpect(res.body.data.appointment_status).to.equal(\"upcoming\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "3bc77e84-2605-43b6-a59c-80bd5bef3951",
                  "parentUUID": "046ac0ba-7ab7-49a1-b251-93745a364a3c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "13fde8ea-eb1e-4683-921a-8666fadfec7c",
                "ca72d58b-05ab-46d6-914d-c2eab21dcef9",
                "3bc77e84-2605-43b6-a59c-80bd5bef3951"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3ada028a-6b8a-4e26-8e31-40ea9d7aeecf",
              "title": "/docAppsByDate",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /docAppsByDate Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/docAppsByDate\")\n.expect(401);",
                  "err": {},
                  "uuid": "882bee8f-013a-45c9-8595-2a0b46fefb1e",
                  "parentUUID": "3ada028a-6b8a-4e26-8e31-40ea9d7aeecf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /docAppsByDate Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"doctor\");\nlet res = await request(server)\n.post(\"/api/appointments/docAppsByDate\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"aapointment_id\":\"djdkj\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "bd1ba88a-af96-4735-adb6-1b291a7b71cc",
                  "parentUUID": "3ada028a-6b8a-4e26-8e31-40ea9d7aeecf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if we got the apps successfully",
                  "fullTitle": "/api/appointments /docAppsByDate Should respond with 200 if we got the apps successfully",
                  "timedOut": false,
                  "duration": 5,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken('01090243795',1,\"doctor\");\nlet res = await request(server)\n.post(\"/api/appointments/docAppsByDate\")\n.set('Authorization',`Bearer ${token}`)\n.send({\n    \"date\":'2020-03-20'\n})\n.expect(200)\n// expect(res.body.data[0].date).to.equal(\"2020-03-20\");",
                  "err": {
                    "message": "Error: expected 200 \"OK\", got 500 \"Internal Server Error\"",
                    "estack": "Error: expected 200 \"OK\", got 500 \"Internal Server Error\"\n    at Test._assertStatus (node_modules/supertest/lib/test.js:268:12)\n    at Test._assertFunction (node_modules/supertest/lib/test.js:283:11)\n    at Test.assert (node_modules/supertest/lib/test.js:173:18)\n    at localAssert (node_modules/supertest/lib/test.js:131:12)\n    at /Users/iifawzi/Desktop/current projects/Hospital/node_modules/supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:728:3)\n    at /Users/iifawzi/Desktop/current projects/Hospital/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1201:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)",
                    "diff": null
                  },
                  "uuid": "ec3d3d53-6552-4aa9-99c7-4bf483b695f6",
                  "parentUUID": "3ada028a-6b8a-4e26-8e31-40ea9d7aeecf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "882bee8f-013a-45c9-8595-2a0b46fefb1e",
                "bd1ba88a-af96-4735-adb6-1b291a7b71cc"
              ],
              "failures": [
                "ec3d3d53-6552-4aa9-99c7-4bf483b695f6"
              ],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "804fa4ba-4718-48fe-a81c-fcc5e1a4dd4c",
          "title": "/api/auth",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
          "file": "/test/auth.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/auth \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "671b64cc-25ce-4d45-8631-10374a4ef218",
              "parentUUID": "804fa4ba-4718-48fe-a81c-fcc5e1a4dd4c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/auth \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "8428d416-32a4-475e-8fd6-fb7964bb0b86",
              "parentUUID": "804fa4ba-4718-48fe-a81c-fcc5e1a4dd4c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "5598f95f-8fbb-40b4-a1c4-198cbc617cee",
              "title": "/signup",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if one of inputs is incorrect or missing (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /signup should respond with 400 if one of inputs is incorrect or missing (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\").expect(400);  \nres = await request(server)\n.post(\"/api/auth/signup\")\n.send({password:\"fawzi\"})\n.expect(400);",
                  "err": {},
                  "uuid": "65c73a51-2df1-4d69-be4f-db75e45c92f1",
                  "parentUUID": "5598f95f-8fbb-40b4-a1c4-198cbc617cee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 201 if user succefully registered",
                  "fullTitle": "/api/auth /signup should respond with 201 if user succefully registered",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243399\");",
                  "err": {},
                  "uuid": "8ccacf6b-d15a-46fd-b62d-4978e6edb748",
                  "parentUUID": "5598f95f-8fbb-40b4-a1c4-198cbc617cee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 403 if phone_number is already registered",
                  "fullTitle": "/api/auth /signup should respond with 403 if phone_number is already registered",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(403);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "d61ea9d3-5071-46df-b70b-f7d0e07f4719",
                  "parentUUID": "5598f95f-8fbb-40b4-a1c4-198cbc617cee",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "65c73a51-2df1-4d69-be4f-db75e45c92f1",
                "8ccacf6b-d15a-46fd-b62d-4978e6edb748",
                "d61ea9d3-5071-46df-b70b-f7d0e07f4719"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "10ba0eab-4b89-4502-975f-815c5ac5cbd1",
              "title": "/signin",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /signin should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signin\")\n.expect(400);",
                  "err": {},
                  "uuid": "c5fc65c0-df44-4d84-bfc2-a109ba5f9713",
                  "parentUUID": "10ba0eab-4b89-4502-975f-815c5ac5cbd1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 when phone number notfound `backend side`",
                  "fullTitle": "/api/auth /signin should respond with 401 when phone number notfound `backend side`",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n .post(\"/api/auth/signin\")\n .send({\"phone_number\":\"01590243311\"})\n .expect(401);",
                  "err": {},
                  "uuid": "72e2c97c-77d6-4481-8363-0370043815b7",
                  "parentUUID": "10ba0eab-4b89-4502-975f-815c5ac5cbd1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if user loged in successfully",
                  "fullTitle": "/api/auth /signin should respond with 200 if user loged in successfully",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243311\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n}).expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243311\");\nres = await request(server)\n.post(\"/api/auth/signin\")\n.send({\"phone_number\":\"01590243311\"})\n.expect(200);\ndeleteUser(\"01590243311\");",
                  "err": {},
                  "uuid": "dfbc2696-9e7e-40a1-92af-472e95a6f682",
                  "parentUUID": "10ba0eab-4b89-4502-975f-815c5ac5cbd1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c5fc65c0-df44-4d84-bfc2-a109ba5f9713",
                "72e2c97c-77d6-4481-8363-0370043815b7",
                "dfbc2696-9e7e-40a1-92af-472e95a6f682"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b88d4796-374b-4e0d-a627-b59835403007",
              "title": "/updateFirebaseToken",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /updateFirebaseToken Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"notInTheSchema\":\"haka\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "a8819373-4ff5-4c9c-9aaf-4f88a829c56b",
                  "parentUUID": "b88d4796-374b-4e0d-a627-b59835403007",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if phone number not found `backend side`",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 401 if phone number not found `backend side`",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243788\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"djkdjkdjk\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(401);",
                  "err": {},
                  "uuid": "145a9070-3c1f-4cf6-9502-07978f7af52d",
                  "parentUUID": "b88d4796-374b-4e0d-a627-b59835403007",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if we updated the token_id successfully",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 200 if we updated the token_id successfully",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243388\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\"\n}).expect(201);\nconst token = genToken(\"01590243388\",1,\"user\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);\nexpect(res.body.data.updated_token).to.equal(\"123456789elhamdullah\");\ndeleteUser(\"01590243388\");",
                  "err": {},
                  "uuid": "345befd2-bee6-43f5-8a62-b21d60b58392",
                  "parentUUID": "b88d4796-374b-4e0d-a627-b59835403007",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 403 if user is blocked",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 403 if user is blocked",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"01590243399\",1,\"user\");\nawait blockUser(\"01590243399\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "92388f8a-9fcc-4b70-b2ac-f9f0098a6ad5",
                  "parentUUID": "b88d4796-374b-4e0d-a627-b59835403007",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if user is not authorized ",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 401 if user is not authorized ",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243391\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\n// const token = genToken(\"01590243399\",\"user\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n// .set(\"Authorization\", `Bearer ${token}`)\n.expect(401);\ndeleteUser(\"01590243391\");",
                  "err": {},
                  "uuid": "2a5cc79c-2ab5-4008-bed3-574ff4e6a8bd",
                  "parentUUID": "b88d4796-374b-4e0d-a627-b59835403007",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a8819373-4ff5-4c9c-9aaf-4f88a829c56b",
                "145a9070-3c1f-4cf6-9502-07978f7af52d",
                "345befd2-bee6-43f5-8a62-b21d60b58392",
                "92388f8a-9fcc-4b70-b2ac-f9f0098a6ad5",
                "2a5cc79c-2ab5-4008-bed3-574ff4e6a8bd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 54,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f1ef1574-45b2-43cd-b9cd-8d9f82c1486e",
              "title": "/signDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if any inputs are incorrect or missed (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /signDoctor should respond with 400 if any inputs are incorrect or missed (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signDoctor\")\n.send({phone_number:\"02903\"})\n.expect(400);",
                  "err": {},
                  "uuid": "b776cada-8a69-4dff-9068-c6bd04c94a94",
                  "parentUUID": "f1ef1574-45b2-43cd-b9cd-8d9f82c1486e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if phone number or password are incorrect `backend side`",
                  "fullTitle": "/api/auth /signDoctor should respond with 401 if phone number or password are incorrect `backend side`",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090243795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\":\"200\"\n})\n.expect(201);\nres = await request(server)\n.post(\"/api/auth/signDoctor\")\n.send({phone_number:\"01090243794\",password:\"01288\"})\n.expect(401);\ndeleteDoctor(\"01090243795\");",
                  "err": {},
                  "uuid": "36f8cab4-58e2-447b-aa6e-271895a38a58",
                  "parentUUID": "f1ef1574-45b2-43cd-b9cd-8d9f82c1486e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b776cada-8a69-4dff-9068-c6bd04c94a94",
                "36f8cab4-58e2-447b-aa6e-271895a38a58"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1c6b848b-87c8-45cd-bc00-148680f74d86",
              "title": "/updateDoctorFirebaseToken",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"doctor\");\nlet res = await request(server)\n.patch(\"/api/auth/updateDoctorFirebaseToken\")\n.send({\"notInTheSchema\":\"haka\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "7b341570-6893-40ca-856f-5950b73a8ebe",
                  "parentUUID": "1c6b848b-87c8-45cd-bc00-148680f74d86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if phone number not found `backend side`",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken should respond with 401 if phone number not found `backend side`",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243788\",1,\"doctor\");\nlet res = await request(server)\n.patch(\"/api/auth/updateDoctorFirebaseToken\")\n.send({\"new_token\":\"djkdjkdjk\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(401);",
                  "err": {},
                  "uuid": "dcf99f18-3d2a-4281-8fe1-e891dcb100a9",
                  "parentUUID": "1c6b848b-87c8-45cd-bc00-148680f74d86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if we updated the Doctor token_id successfully",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken should respond with 200 if we updated the Doctor token_id successfully",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243788\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090243795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\":\"200\"\n})\n.expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01090243795\");\nconst token2 = genToken(\"01090243795\",1,\"doctor\");\nres = await request(server)\n.patch(\"/api/auth/updateDoctorFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n.set(\"Authorization\", `Bearer ${token2}`)\n.expect(200);\nexpect(res.body.data.updated_token).to.equal(\"123456789elhamdullah\");\ndeleteDoctor(\"01090243795\");",
                  "err": {},
                  "uuid": "efb40411-684c-4486-a9be-5b348ac3232e",
                  "parentUUID": "1c6b848b-87c8-45cd-bc00-148680f74d86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if Doctor is not authorized ",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken should respond with 401 if Doctor is not authorized ",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01010243795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\":\"200\"\n})\n.expect(201);\n// const token = genToken(\"01590243399\",\"doctor\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n// .set(\"Authorization\", `Bearer ${token}`)\n.expect(401);\ndeleteDoctor(\"01010243795\");",
                  "err": {},
                  "uuid": "ddf140f4-f796-49c4-8cba-51632a99b94e",
                  "parentUUID": "1c6b848b-87c8-45cd-bc00-148680f74d86",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b341570-6893-40ca-856f-5950b73a8ebe",
                "dcf99f18-3d2a-4281-8fe1-e891dcb100a9",
                "efb40411-684c-4486-a9be-5b348ac3232e",
                "ddf140f4-f796-49c4-8cba-51632a99b94e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 34,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cbc5149d-bc66-417d-9e8e-137adc5253d7",
          "title": "/api/categories",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/categories.js",
          "file": "/test/categories.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/categories \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "1be8995b-18f2-4722-a5ac-ba8bd76eec11",
              "parentUUID": "cbc5149d-bc66-417d-9e8e-137adc5253d7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/categories \"after each\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "29b35839-7616-4520-aaf0-b6f0e2c13d93",
              "parentUUID": "cbc5149d-bc66-417d-9e8e-137adc5253d7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "a3c6d014-0234-4a61-9f2e-532aef30ef89",
              "title": "/getCategories",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/categories.js",
              "file": "/test/categories.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/categories /getCategories Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/categories/getCategories\")\n.expect(401);",
                  "err": {},
                  "uuid": "673beb96-55c6-466a-8a68-87d75e0fb075",
                  "parentUUID": "a3c6d014-0234-4a61-9f2e-532aef30ef89",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 if got categories successfully",
                  "fullTitle": "/api/categories /getCategories Should respond 200 if got categories successfully",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.get(\"/api/categories/getCategories\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);",
                  "err": {},
                  "uuid": "7318eb03-3bac-48e2-9172-687926930542",
                  "parentUUID": "a3c6d014-0234-4a61-9f2e-532aef30ef89",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "673beb96-55c6-466a-8a68-87d75e0fb075",
                "7318eb03-3bac-48e2-9172-687926930542"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c53cbade-3be8-4c3c-84ad-fd648721ca20",
          "title": "/api/controlPanel",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
          "file": "/test/controlPanel.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/controlPanel \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "9c1446ce-64ea-4fea-8ebd-f209847c4094",
              "parentUUID": "c53cbade-3be8-4c3c-84ad-fd648721ca20",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/controlPanel \"after each\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "0141a5b6-3184-4f83-8d9d-5eb6ffd60782",
              "parentUUID": "c53cbade-3be8-4c3c-84ad-fd648721ca20",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "21a872ff-fa84-46af-91f3-a76b68c22167",
              "title": "/addingDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION)",
                  "fullTitle": "/api/controlPanel /addingDoctor Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nconst res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(400);",
                  "err": {},
                  "uuid": "8302b267-7e5c-4cc6-aec5-535621241710",
                  "parentUUID": "21a872ff-fa84-46af-91f3-a76b68c22167",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 201 if doctor created successfully",
                  "fullTitle": "/api/controlPanel /addingDoctor Should respond with 201 if doctor created successfully",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"11090243799\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"11090243799\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"11090243799\");\ndeleteDoctor(\"11090243799\");",
                  "err": {},
                  "uuid": "f0020f11-af4c-495d-bd85-9f9e730d785d",
                  "parentUUID": "21a872ff-fa84-46af-91f3-a76b68c22167",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 403 if the phone number is already registered",
                  "fullTitle": "/api/controlPanel /addingDoctor Should respond with 403 if the phone number is already registered",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243798\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243798\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01090243798\");\nres = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243798\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(403);",
                  "err": {},
                  "uuid": "aec05f76-0717-4877-8698-ac53988cc4a1",
                  "parentUUID": "21a872ff-fa84-46af-91f3-a76b68c22167",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8302b267-7e5c-4cc6-aec5-535621241710",
                "f0020f11-af4c-495d-bd85-9f9e730d785d",
                "aec05f76-0717-4877-8698-ac53988cc4a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b59e28a8-40a2-4897-ab79-98cbde4cbc65",
              "title": "/addingAdmin",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION",
                  "fullTitle": "/api/controlPanel /addingAdmin Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ name: \"fawzi\" })\n  .expect(400);",
                  "err": {},
                  "uuid": "0037188e-7a6c-4ed3-93f9-f63da00db441",
                  "parentUUID": "b59e28a8-40a2-4897-ab79-98cbde4cbc65",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 201 if created successfully",
                  "fullTitle": "/api/controlPanel /addingAdmin Should respond with 201 if created successfully",
                  "timedOut": false,
                  "duration": 264,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"11090243799\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"11090243799\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"11090243799\");\ndeleteAdmin(\"11090243799\");",
                  "err": {},
                  "uuid": "d38adb79-02f7-4940-a98b-f0ed45a65630",
                  "parentUUID": "b59e28a8-40a2-4897-ab79-98cbde4cbc65",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should Respond with 403 if phone number is already Registered",
                  "fullTitle": "/api/controlPanel /addingAdmin Should Respond with 403 if phone number is already Registered",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243795\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(403);\ndeleteAdmin(\"01090243795\");",
                  "err": {},
                  "uuid": "50286821-9f4a-4890-a625-1fb49d81e75e",
                  "parentUUID": "b59e28a8-40a2-4897-ab79-98cbde4cbc65",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0037188e-7a6c-4ed3-93f9-f63da00db441",
                "d38adb79-02f7-4940-a98b-f0ed45a65630",
                "50286821-9f4a-4890-a625-1fb49d81e75e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 270,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e5b60126-5145-4360-8a37-ff7137df2f2c",
              "title": "/signAdmin",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "fullTitle": "/api/controlPanel /signAdmin should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .post(\"/api/controlPanel/signAdmin\")\n  .expect(400);",
                  "err": {},
                  "uuid": "e6d2b5a2-9f0f-4614-9841-467311da6d1e",
                  "parentUUID": "e5b60126-5145-4360-8a37-ff7137df2f2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 when phone number is not found `backend side`",
                  "fullTitle": "/api/controlPanel /signAdmin should respond with 401 when phone number is not found `backend side`",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .post(\"/api/controlPanel/signAdmin\")\n  .send({ phone_number: \"01090243795\", password: \"testest\" })\n  .expect(401);",
                  "err": {},
                  "uuid": "0226982e-8d89-4f6c-872e-6220887e9fd6",
                  "parentUUID": "e5b60126-5145-4360-8a37-ff7137df2f2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if admin loged in successfully",
                  "fullTitle": "/api/controlPanel /signAdmin should respond with 200 if admin loged in successfully",
                  "timedOut": false,
                  "duration": 530,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243795\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01090243795\");\nres = await request(server)\n  .post(\"/api/controlPanel/signAdmin\")\n  .send({ phone_number: \"01090243795\", password: \"testtest\" })\n  .expect(200);\nexpect(res.body.data.phone_number).to.equal(\"01090243795\");\ndeleteAdmin(\"01090243795\");",
                  "err": {},
                  "uuid": "8253bec8-d6a8-4c5f-ac3f-5c7a91984991",
                  "parentUUID": "e5b60126-5145-4360-8a37-ff7137df2f2c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e6d2b5a2-9f0f-4614-9841-467311da6d1e",
                "0226982e-8d89-4f6c-872e-6220887e9fd6",
                "8253bec8-d6a8-4c5f-ac3f-5c7a91984991"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 537,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "790e7143-dd40-4adb-b433-5dc6ff13d593",
              "title": "/checkAdminByToken",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if admin is not authorized",
                  "fullTitle": "/api/controlPanel /checkAdminByToken Should respond with 401 if admin is not authorized",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109024379785\",1,\"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/checkAdminByToken\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(401);",
                  "err": {},
                  "uuid": "a33c9975-5fdd-45d5-b5b1-96b185a1c69b",
                  "parentUUID": "790e7143-dd40-4adb-b433-5dc6ff13d593",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if token is valid and referanced to admin",
                  "fullTitle": "/api/controlPanel /checkAdminByToken Should respond with 200 if token is valid and referanced to admin",
                  "timedOut": false,
                  "duration": 270,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243795\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(201);\nres = await request(server)\n  .post(\"/api/controlPanel/checkAdminByToken\")\n  .send({})\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(200);\ndeleteAdmin(\"01090243795\");",
                  "err": {},
                  "uuid": "ee5db174-8fa2-4c5d-b75b-a1953b47556a",
                  "parentUUID": "790e7143-dd40-4adb-b433-5dc6ff13d593",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a33c9975-5fdd-45d5-b5b1-96b185a1c69b",
                "ee5db174-8fa2-4c5d-b75b-a1953b47556a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 274,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "dac8f8d9-3bda-49dd-b9f6-f920e928d91f",
              "title": "/addImage",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should responed with 201 if uploaded",
                  "fullTitle": "/api/controlPanel /addImage Should responed with 201 if uploaded",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addImage\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n  .attach(\"file\", path.resolve(__dirname, \"../logo.png\"))\n  .expect(201);",
                  "err": {},
                  "uuid": "26a596af-5655-4a29-a4d9-1c909a1225ed",
                  "parentUUID": "dac8f8d9-3bda-49dd-b9f6-f920e928d91f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 403 if type not allowed",
                  "fullTitle": "/api/controlPanel /addImage Should responed with 403 if type not allowed",
                  "timedOut": false,
                  "duration": 48,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addImage\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n  .attach(\"file\", path.resolve(__dirname, \"../udemy-accs.txt\"))\n  .expect(403);",
                  "err": {},
                  "uuid": "15e715e0-0f37-43b7-8b74-c561a09e5663",
                  "parentUUID": "dac8f8d9-3bda-49dd-b9f6-f920e928d91f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "26a596af-5655-4a29-a4d9-1c909a1225ed",
                "15e715e0-0f37-43b7-8b74-c561a09e5663"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 66,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "bbac8689-dcfa-431d-b802-a3e897c0024c",
              "title": "/getCategories",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /getCategories Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .expect(401);",
                  "err": {},
                  "uuid": "36cd8787-0f4b-4cbd-988d-9e62332812bf",
                  "parentUUID": "bbac8689-dcfa-431d-b802-a3e897c0024c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got categories successfully",
                  "fullTitle": "/api/controlPanel /getCategories Should respond with 200 if got categories successfully",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(200);",
                  "err": {},
                  "uuid": "3e3bccf5-2097-45b1-8ae0-a139330759ca",
                  "parentUUID": "bbac8689-dcfa-431d-b802-a3e897c0024c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "36cd8787-0f4b-4cbd-988d-9e62332812bf",
                "3e3bccf5-2097-45b1-8ae0-a139330759ca"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "76bc061c-642c-423c-b8eb-e048a4d9ff35",
              "title": "/getDoctors",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /getDoctors Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .expect(401);",
                  "err": {},
                  "uuid": "124bcf7a-56c6-4a04-ab75-99d90b9d73fb",
                  "parentUUID": "76bc061c-642c-423c-b8eb-e048a4d9ff35",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got categories successfully",
                  "fullTitle": "/api/controlPanel /getDoctors Should respond with 200 if got categories successfully",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .get(\"/api/controlPanel/getDoctors\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(200);",
                  "err": {},
                  "uuid": "2208d8c2-597d-4ac6-a6fa-f49bd8643a58",
                  "parentUUID": "76bc061c-642c-423c-b8eb-e048a4d9ff35",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "124bcf7a-56c6-4a04-ab75-99d90b9d73fb",
                "2208d8c2-597d-4ac6-a6fa-f49bd8643a58"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "25049bfe-7fda-449d-9f91-93893b371fb5",
              "title": "/deleteDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /deleteDoctor Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .expect(401);",
                  "err": {},
                  "uuid": "e46cb7c9-8984-4b32-98c5-01c00c4b6361",
                  "parentUUID": "25049bfe-7fda-449d-9f91-93893b371fb5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 404 if doctor not found",
                  "fullTitle": "/api/controlPanel /deleteDoctor Should respond with 404 if doctor not found",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .delete(\"/api/controlPanel/deleteDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"0109024371111212129511113\"})\n  .expect(404);",
                  "err": {},
                  "uuid": "38439ef2-0ee2-41ac-9f78-7649fb03ebbe",
                  "parentUUID": "25049bfe-7fda-449d-9f91-93893b371fb5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if doctor deleted successfully",
                  "fullTitle": "/api/controlPanel /deleteDoctor Should respond with 200 if doctor deleted successfully",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .delete(\"/api/controlPanel/deleteDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"01090243798\"}) // this tee number which registered above\n  .expect(200);",
                  "err": {},
                  "uuid": "dca5ba8b-7599-48ec-b3fe-a5e758b5e76f",
                  "parentUUID": "25049bfe-7fda-449d-9f91-93893b371fb5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e46cb7c9-8984-4b32-98c5-01c00c4b6361",
                "38439ef2-0ee2-41ac-9f78-7649fb03ebbe",
                "dca5ba8b-7599-48ec-b3fe-a5e758b5e76f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "08ec0dcd-9ad7-4b9b-8bf3-45a47a1e612a",
              "title": "/toggleBlock",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /toggleBlock Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .patch(\"/api/controlPanel/toggleBlock\")\n  .expect(401);",
                  "err": {},
                  "uuid": "32669674-db1a-4a01-aafa-5ad18dcf22dd",
                  "parentUUID": "08ec0dcd-9ad7-4b9b-8bf3-45a47a1e612a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 404 if user not found",
                  "fullTitle": "/api/controlPanel /toggleBlock Should respond with 404 if user not found",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .patch(\"/api/controlPanel/toggleBlock\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"0109024371111212129511113\"})\n  .expect(404);",
                  "err": {},
                  "uuid": "67e89fc3-b3c2-45bf-b34f-44b5cd5b329b",
                  "parentUUID": "08ec0dcd-9ad7-4b9b-8bf3-45a47a1e612a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if toggle user's block successfully",
                  "fullTitle": "/api/controlPanel /toggleBlock Should respond with 200 if toggle user's block successfully",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"015902433199\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nconst token = genToken(\"01090243795\",1, \"admin\");\nres = await request(server)\n  .patch(\"/api/controlPanel/toggleBlock\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"015902433199\"})\n  .expect(200);\n  deleteUser(\"015902433199\");",
                  "err": {},
                  "uuid": "ca8ff9e0-2ba1-46ad-9057-9ab77d97a5cb",
                  "parentUUID": "08ec0dcd-9ad7-4b9b-8bf3-45a47a1e612a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "32669674-db1a-4a01-aafa-5ad18dcf22dd",
                "67e89fc3-b3c2-45bf-b34f-44b5cd5b329b",
                "ca8ff9e0-2ba1-46ad-9057-9ab77d97a5cb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6920348f-d05c-4c45-9206-37e4c346759e",
              "title": "/getDoctorSlots",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /getDoctorSlots Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .post(\"/api/controlPanel/getDoctorSlots\")\n  .expect(401);",
                  "err": {},
                  "uuid": "d449fc6a-c065-48a3-88a8-3c191d6d7080",
                  "parentUUID": "6920348f-d05c-4c45-9206-37e4c346759e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 doctor_id is missing or incorrect",
                  "fullTitle": "/api/controlPanel /getDoctorSlots Should respond with 400 doctor_id is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/getDoctorSlots\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ doctor_id: \"ahmed\"})\n  .expect(400);",
                  "err": {},
                  "uuid": "301f5e20-ae0a-4c1d-8b6a-6916bd4efd01",
                  "parentUUID": "6920348f-d05c-4c45-9206-37e4c346759e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got doctor's slots successfully",
                  "fullTitle": "/api/controlPanel /getDoctorSlots Should respond with 200 if got doctor's slots successfully",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/getDoctorSlots\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ doctor_id: 11})\n  .expect(200);",
                  "err": {},
                  "uuid": "69d25966-8c00-4342-9311-96a4b11283a1",
                  "parentUUID": "6920348f-d05c-4c45-9206-37e4c346759e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d449fc6a-c065-48a3-88a8-3c191d6d7080",
                "301f5e20-ae0a-4c1d-8b6a-6916bd4efd01",
                "69d25966-8c00-4342-9311-96a4b11283a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a50831e5-4c09-441d-aaeb-b65b19c7b6f9",
          "title": "/api/doctors",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
          "file": "/test/doctors.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/doctors \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "f0574c17-7cd7-4636-a8ed-4d094413feb4",
              "parentUUID": "a50831e5-4c09-441d-aaeb-b65b19c7b6f9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/doctors \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "bbbd6bd5-229b-4ad8-b9b6-97798c86fb0e",
              "parentUUID": "a50831e5-4c09-441d-aaeb-b65b19c7b6f9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "6fd31aef-a669-498c-92b1-fad35a89d762",
              "title": "/getDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
              "file": "/test/doctors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if phone doctor_id is missing (validation schema)",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 400 if phone doctor_id is missing (validation schema)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({})\n.expect(400);",
                  "err": {},
                  "uuid": "c4c8346b-f28c-412d-affb-90bdd133842e",
                  "parentUUID": "6fd31aef-a669-498c-92b1-fad35a89d762",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.send({doctor_id: \"1233\"})\n.expect(401)",
                  "err": {},
                  "uuid": "6c45ffe7-0b55-4eb9-97c0-fb17ac8df4ea",
                  "parentUUID": "6fd31aef-a669-498c-92b1-fad35a89d762",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 404 if doctor not found",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 404 if doctor not found",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({doctor_id: 54878785})\n.expect(404);",
                  "err": {},
                  "uuid": "b6881357-d48d-4df6-831c-78ec921a9e14",
                  "parentUUID": "6fd31aef-a669-498c-92b1-fad35a89d762",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got doctor successfully",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 200 if got doctor successfully",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090113795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\": \"100\",\n})\n.expect(201);\nconst doctor_id = res.body.data.doctor_id;\nres = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({doctor_id: doctor_id})\n.expect(200);\ndeleteDoctor(\"01090113795\");",
                  "err": {},
                  "uuid": "b550fed2-292f-4bfa-9b63-ed6e9cd052eb",
                  "parentUUID": "6fd31aef-a669-498c-92b1-fad35a89d762",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c4c8346b-f28c-412d-affb-90bdd133842e",
                "6c45ffe7-0b55-4eb9-97c0-fb17ac8df4ea",
                "b6881357-d48d-4df6-831c-78ec921a9e14",
                "b550fed2-292f-4bfa-9b63-ed6e9cd052eb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5ff50136-72d5-4fcb-bb90-3213bfba95ba",
              "title": "/getDoctors",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
              "file": "/test/doctors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/doctors /getDoctors Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/doctors/getDoctors\")\n.expect(401)",
                  "err": {},
                  "uuid": "266cd2f9-f38f-40c6-a258-272d47cabea3",
                  "parentUUID": "5ff50136-72d5-4fcb-bb90-3213bfba95ba",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got doctors successfully",
                  "fullTitle": "/api/doctors /getDoctors Should respond with 200 if got doctors successfully",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"user\");\n            let res = await request(server)\n            .post(\"/api/doctors/getDoctors\")\n            .set(\"Authorization\", `Bearer ${token}`)\n            .send({category_id: 42})\n            .expect(200);",
                  "err": {},
                  "uuid": "638c084f-4856-4c84-899f-94e33fce0234",
                  "parentUUID": "5ff50136-72d5-4fcb-bb90-3213bfba95ba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "266cd2f9-f38f-40c6-a258-272d47cabea3",
                "638c084f-4856-4c84-899f-94e33fce0234"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "501a78bf-4199-49bf-86e2-cf05d7961035",
              "title": "/updateDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
              "file": "/test/doctors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/doctors/updateDoctor\")\n.send({\"phone_number\":\"3487\"})\n.expect(401);",
                  "err": {},
                  "uuid": "506feed6-6499-45db-9a7c-0ac76fff7e7e",
                  "parentUUID": "501a78bf-4199-49bf-86e2-cf05d7961035",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 if field is nor allowed",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 400 if field is nor allowed",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243311\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/doctors/updateDoctor\")\n.send({\"fb_token_id\":\"3487\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "55631a67-9dae-4465-beda-c7a457ae4061",
                  "parentUUID": "501a78bf-4199-49bf-86e2-cf05d7961035",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if successfully updated",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 200 if successfully updated",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"11090243799\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"11090243799\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(201);\n  const docId = res.body.data.doctor_id;\nres = await request(server)\n .patch(\"/api/doctors/updateDoctor\")\n.send({\n    doctor_id: docId,\n    phone_number: \"112345\",\n    password: \"t123\",\n    first_name: \"fawziiiii\",\n    last_name: \"ahmedddddd\",\n    country: \"saudiarabia\",\n    category_id: 5,\n    picture: \"fkfjkfj\",\n    price: \"300\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);\nexpect(res.body.data.phone_number).to.equal(\"112345\");\nexpect(res.body.data.password).to.equal(\"t123\");\nexpect(res.body.data.first_name).to.equal(\"fawziiiii\");\nexpect(res.body.data.last_name).to.equal(\"ahmedddddd\");\nexpect(res.body.data.country).to.equal(\"saudiarabia\");\nexpect(res.body.data.category_id).to.equal(5);\nexpect(res.body.data.picture).to.equal(\"fkfjkfj\");\nexpect(res.body.data.price).to.equal(\"300\");",
                  "err": {},
                  "uuid": "4f66cfa2-7160-4904-889b-32b40a23a6ee",
                  "parentUUID": "501a78bf-4199-49bf-86e2-cf05d7961035",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 403 if new phone number is already registered",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 403 if new phone number is already registered",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243313\",1,\"admin\");\n          let res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n  phone_number: \"110902411\",\n  password: \"testtest\",\n  first_name: \"fawzi\",\n  last_name: \"ahmed\",\n  country: \"egypt\",\n  category_id: 1,\n  picture: \"fkfjkfj\",\n  price: \"100\",\n})\n.expect(201);\nconst docId = res.body.data.doctor_id;\nres = await request(server)\n.patch(\"/api/doctors/updateDoctor\")\n.send({\n    doctor_id: docId,\n    phone_number: \"112345\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteDoctor(\"110902411\");\ndeleteDoctor(\"112345\");",
                  "err": {},
                  "uuid": "92f65bfe-6bd5-4585-b763-b3f6853e7557",
                  "parentUUID": "501a78bf-4199-49bf-86e2-cf05d7961035",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "506feed6-6499-45db-9a7c-0ac76fff7e7e",
                "55631a67-9dae-4465-beda-c7a457ae4061",
                "4f66cfa2-7160-4904-889b-32b40a23a6ee",
                "92f65bfe-6bd5-4585-b763-b3f6853e7557"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 32,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c300630f-0fb0-48e8-a000-0f14e794bda4",
          "title": "/api/slots",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
          "file": "/test/slots.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/slots \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "1153d038-1013-4aff-8fb7-313960eba688",
              "parentUUID": "c300630f-0fb0-48e8-a000-0f14e794bda4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/slots \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "663a5c62-76db-4394-9795-027e2142287b",
              "parentUUID": "c300630f-0fb0-48e8-a000-0f14e794bda4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "15f939ef-127c-4981-bc94-83fb6e7cdc0f",
              "title": "/addSlot",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
              "file": "/test/slots.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/slots /addSlot Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/slots/addSlot\")\n.expect(401);",
                  "err": {},
                  "uuid": "b3a37772-e6e0-417c-b5d0-fbd51e722993",
                  "parentUUID": "15f939ef-127c-4981-bc94-83fb6e7cdc0f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/slots /addSlot Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/slots/addSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"day\":\"mon\",\n    \"slot_time\":\"60:00\",\n    \"available\":false\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "48ad6828-47c6-46c0-ac11-c7546c6a07c0",
                  "parentUUID": "15f939ef-127c-4981-bc94-83fb6e7cdc0f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 addedd Successfully",
                  "fullTitle": "/api/slots /addSlot Should respond 200 addedd Successfully",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090113795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\": \"100\",\n})\n.expect(201);\nconst docId = res.body.data.doctor_id;\nres = await request(server)\n.post(\"/api/slots/addSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":docId,\n    \"day\":\"mon\",\n    \"start_time\":\"23:00\",\n    \"end_time\":\"24:00\",\n    \"slot_time\":\"60:00\",\n    \"available\":false\n    })\n.expect(201);\nconst slotId = res.body.data.slot_id;\ndeleteDoctor(\"01090113795\");\ndeleteSlot(slotId);",
                  "err": {},
                  "uuid": "16c792c9-c7ef-4b47-bc4b-40a5958ee266",
                  "parentUUID": "15f939ef-127c-4981-bc94-83fb6e7cdc0f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b3a37772-e6e0-417c-b5d0-fbd51e722993",
                "48ad6828-47c6-46c0-ac11-c7546c6a07c0",
                "16c792c9-c7ef-4b47-bc4b-40a5958ee266"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ad06a923-9719-4166-aa83-dbaa221ba360",
              "title": "/updateSlot",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
              "file": "/test/slots.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/slots /updateSlot Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/slots/updateSlot\")\n.expect(401);",
                  "err": {},
                  "uuid": "604211d4-016d-42a5-bfa5-4164f896dcbf",
                  "parentUUID": "ad06a923-9719-4166-aa83-dbaa221ba360",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is incorrect",
                  "fullTitle": "/api/slots /updateSlot Should respond 400 if one of inputs is incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/slots/updateSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"ahmed\":\"mon\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "1601f1c4-1bc3-4dba-bb4f-d058f30c176a",
                  "parentUUID": "ad06a923-9719-4166-aa83-dbaa221ba360",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 updated Successfully",
                  "fullTitle": "/api/slots /updateSlot Should respond 200 updated Successfully",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/slots/updateSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\":1,\n    \"day\":\"wed\",\n    \"start_time\":\"21:00\",\n    \"end_time\":\"22:30\",\n    \"slot_time\":\"30:00\",\n    \"available\":true\n    })\n.expect(200);\nexpect(res.body.data.day).to.equal(\"wed\");\nconst slotId = res.body.data.slot_id;\ndeleteSlot(slotId);",
                  "err": {},
                  "uuid": "3f06c5df-1670-4aae-9fb4-7011809cb741",
                  "parentUUID": "ad06a923-9719-4166-aa83-dbaa221ba360",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "604211d4-016d-42a5-bfa5-4164f896dcbf",
                "1601f1c4-1bc3-4dba-bb4f-d058f30c176a",
                "3f06c5df-1670-4aae-9fb4-7011809cb741"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b46e10ac-5f27-4fde-b564-22770532d38c",
              "title": "/getOpenSlots",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
              "file": "/test/slots.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/slots /getOpenSlots Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/slots/getOpenSlots\")\n.expect(401);",
                  "err": {},
                  "uuid": "1270a382-2538-4e12-bf6f-612b920f0965",
                  "parentUUID": "b46e10ac-5f27-4fde-b564-22770532d38c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/slots /getOpenSlots Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/slots/getOpenSlots\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "40896eae-6d4f-4094-8463-f8646afa6fb9",
                  "parentUUID": "b46e10ac-5f27-4fde-b564-22770532d38c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 addedd Successfully",
                  "fullTitle": "/api/slots /getOpenSlots Should respond 200 addedd Successfully",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nconst userId = res.body.data.user_id;\n res = await request(server)\n.post(\"/api/slots/getOpenSlots\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\": 11,\n    \"day\": \"wed\",\n    \"date\":\"2020-05-27\"\n    })\n.expect(200);\nconst appId = res.body.data.slot_id;\ndeleteAppointment(1);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "971c6261-eb0f-4f71-8be7-c6ffffae1618",
                  "parentUUID": "b46e10ac-5f27-4fde-b564-22770532d38c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1270a382-2538-4e12-bf6f-612b920f0965",
                "40896eae-6d4f-4094-8463-f8646afa6fb9",
                "971c6261-eb0f-4f71-8be7-c6ffffae1618"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "82248a5b-36d9-47b1-a0ac-2459075e26d8",
              "title": "/getDoctorDays",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
              "file": "/test/slots.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/slots /getDoctorDays Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/slots/addSlot\")\n.expect(401);",
                  "err": {},
                  "uuid": "12459be4-4a50-43a7-9eeb-9fb40d8e09f5",
                  "parentUUID": "82248a5b-36d9-47b1-a0ac-2459075e26d8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/slots /getDoctorDays Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/slots/addSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n\"doctor_id\":\"kjdkjdk\"\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "cd404447-e220-463e-bc94-6cf33f465d21",
                  "parentUUID": "82248a5b-36d9-47b1-a0ac-2459075e26d8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 if got days susccessfully",
                  "fullTitle": "/api/slots /getDoctorDays Should respond 200 if got days susccessfully",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090113795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\": \"100\",\n})\n.expect(201);\nconst docId = res.body.data.doctor_id;\nres = await request(server)\n.post(\"/api/slots/addSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":docId,\n    \"day\":\"mon\",\n    \"start_time\":\"23:00\",\n    \"end_time\":\"24:00\",\n    \"slot_time\":\"60:00\",\n    \"available\":false\n    })\n.expect(201);\nres = await request(server)\n.post(\"/api/slots/getDoctorDays\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":docId,\n    })\n.expect(200);\nconst slotId = res.body.data.slot_id;\ndeleteDoctor(\"01090113795\");\ndeleteSlot(slotId);",
                  "err": {},
                  "uuid": "05a77184-3b76-4eed-8250-e438caa8634f",
                  "parentUUID": "82248a5b-36d9-47b1-a0ac-2459075e26d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "12459be4-4a50-43a7-9eeb-9fb40d8e09f5",
                "cd404447-e220-463e-bc94-6cf33f465d21",
                "05a77184-3b76-4eed-8250-e438caa8634f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5e393cf1-568c-4727-880f-9f586119e6ab",
          "title": "/api/user",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
          "file": "/test/user.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/user \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "f1f82539-7739-4368-8b45-9995e8c26a3d",
              "parentUUID": "5e393cf1-568c-4727-880f-9f586119e6ab",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/user \"after each\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "29dc2140-ec19-4fdf-9db7-cb99b0c7f08c",
              "parentUUID": "5e393cf1-568c-4727-880f-9f586119e6ab",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "e852fcd1-f261-4d1d-8694-6672477c861f",
              "title": "/updateInfo",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/user /updateInfo Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\"phone_number\":\"3487\"})\n.expect(401);",
                  "err": {},
                  "uuid": "68d16f3b-27f0-4a79-ba7a-d0979f32d1be",
                  "parentUUID": "e852fcd1-f261-4d1d-8694-6672477c861f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 if field is nor allowed",
                  "fullTitle": "/api/user /updateInfo Should respond with 400 if field is nor allowed",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243311\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\"fb_token_id\":\"3487\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "4a18145f-c333-41a1-903c-b6cccbb6393e",
                  "parentUUID": "e852fcd1-f261-4d1d-8694-6672477c861f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if successfully updated",
                  "fullTitle": "/api/user /updateInfo Should respond with 200 if successfully updated",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243311\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n}).expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243311\");\nconst token = genToken(\"01590243311\",1,\"user\");\n res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\n    \"phone_number\": \"12345\",\n    \"first_name\": \"ahmed\",\n    \"last_name\":\"mohammed\",\n    \"birth_date\": \"1999-03-22\",\n    \"weight\": 200,\n    \"height\": 300,\n    \"bmi\": 50,\n    \"gender\": \"male\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);\nexpect(res.body.data.phone_number).to.equal(\"12345\");\nexpect(res.body.data.first_name).to.equal(\"ahmed\");\nexpect(res.body.data.last_name).to.equal(\"mohammed\");\nexpect(res.body.data.birth_date).to.equal(\"1999-03-22\");\nexpect(res.body.data.weight).to.equal(200);\nexpect(res.body.data.height).to.equal(300);\nexpect(res.body.data.bmi).to.equal(50);\nexpect(res.body.data.gender).to.equal(\"male\");",
                  "err": {},
                  "uuid": "499050eb-ea93-4193-afaf-ad272845eb33",
                  "parentUUID": "e852fcd1-f261-4d1d-8694-6672477c861f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 403 if phone number is already registered",
                  "fullTitle": "/api/user /updateInfo Should respond with 403 if phone number is already registered",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243313\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n}).expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243313\");\nconst token = genToken(\"01590243313\",1,\"user\");\n res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\n    \"phone_number\": \"12345\",\n    \"first_name\": \"ahmed\",\n    \"last_name\":\"mohammed\",\n    \"birth_date\": \"1999-03-22\",\n    \"weight\": 200,\n    \"height\": 300,\n    \"bmi\": 50,\n    \"gender\": \"male\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteUser(\"01590243313\");\ndeleteUser(\"12345\");",
                  "err": {},
                  "uuid": "a0efac0e-22d7-4e66-91fc-0584f13aaa61",
                  "parentUUID": "e852fcd1-f261-4d1d-8694-6672477c861f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "68d16f3b-27f0-4a79-ba7a-d0979f32d1be",
                "4a18145f-c333-41a1-903c-b6cccbb6393e",
                "499050eb-ea93-4193-afaf-ad272845eb33",
                "a0efac0e-22d7-4e66-91fc-0584f13aaa61"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 32,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6798eed2-57ae-482a-abce-5108baed8299",
              "title": "/notBlocked",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/user /notBlocked Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/user/notBlocked\")\n.expect(401);",
                  "err": {},
                  "uuid": "71dd4368-2506-4fb3-b289-bb6b93a6328b",
                  "parentUUID": "6798eed2-57ae-482a-abce-5108baed8299",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 403 if user is blocked",
                  "fullTitle": "/api/user /notBlocked should respond with 403 if user is blocked",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"01590243399\",1,\"user\");\nawait blockUser(\"01590243399\");\nres = await request(server)\n.get(\"/api/user/notBlocked\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "32f88a06-4e7e-4105-ae75-87272a85bd81",
                  "parentUUID": "6798eed2-57ae-482a-abce-5108baed8299",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "71dd4368-2506-4fb3-b289-bb6b93a6328b",
                "32f88a06-4e7e-4105-ae75-87272a85bd81"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "26bc7084-fc1b-41b3-9bfc-8cd594eb5228",
              "title": "/api/user/updateImage",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should responed with 200 if updated",
                  "fullTitle": "/api/user /api/user/updateImage Should responed with 200 if updated",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"01590243399\",1,\"user\");\nres = await request(server)\n.patch(\"/api/user/updateImage\")\n.set(\"Authorization\", `Bearer ${token}`)\n.set('Content-Type', 'application/x-www-form-urlencoded')\n.attach('file',path.resolve(__dirname, \"../logo.png\"))\n.expect(200);",
                  "err": {},
                  "uuid": "baa65466-632d-47ae-af24-dd2486911aa1",
                  "parentUUID": "26bc7084-fc1b-41b3-9bfc-8cd594eb5228",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 403 if type not allowed",
                  "fullTitle": "/api/user /api/user/updateImage Should responed with 403 if type not allowed",
                  "timedOut": false,
                  "duration": 40,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/user/updateImage\")\n.set(\"Authorization\", `Bearer ${token}`)\n.set('Content-Type', 'application/x-www-form-urlencoded')\n.attach('file',path.resolve(__dirname, \"../udemy-accs.txt\"))\n.expect(403);",
                  "err": {},
                  "uuid": "5b7e84a9-6c32-460c-b3f5-1a14f49978e0",
                  "parentUUID": "26bc7084-fc1b-41b3-9bfc-8cd594eb5228",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 401 not authorized",
                  "fullTitle": "/api/user /api/user/updateImage Should responed with 401 not authorized",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590241\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/user/updateImage\")\n.set(\"Authorization\", `Bearer ${token}`)\n.set('Content-Type', 'application/x-www-form-urlencoded')\n.attach('file',path.resolve(__dirname, \"../logo.png\"))\n.expect(401);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "2ecb1f56-9308-4ce7-bfd9-cad91ee56ad1",
                  "parentUUID": "26bc7084-fc1b-41b3-9bfc-8cd594eb5228",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "baa65466-632d-47ae-af24-dd2486911aa1",
                "5b7e84a9-6c32-460c-b3f5-1a14f49978e0",
                "2ecb1f56-9308-4ce7-bfd9-cad91ee56ad1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "36b79fb9-1c6c-46b2-b61a-755e23084581",
              "title": "/getUser",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/user /getUser Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/user/getUser\")\n.expect(401);",
                  "err": {},
                  "uuid": "28d6bf3c-e3a9-4b63-8502-dae9bc2881f3",
                  "parentUUID": "36b79fb9-1c6c-46b2-b61a-755e23084581",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 404 if user not found",
                  "fullTitle": "/api/user /getUser should respond with 404 if user not found",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/user/getUser\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({ \"phone_number\": \"9868956981256\", })\n.expect(404);",
                  "err": {},
                  "uuid": "c2c1a201-83cf-4a15-9e0b-0895334dfafe",
                  "parentUUID": "36b79fb9-1c6c-46b2-b61a-755e23084581",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if got user successfully",
                  "fullTitle": "/api/user /getUser should respond with 200 if got user successfully",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"015902433399\",1,\"user\");\nres = await request(server)\n.post(\"/api/user/getUser\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({ \"phone_number\": \"01590243399\", })\n.expect(200);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "84a264a1-3c90-4493-9950-07cc17fa0a68",
                  "parentUUID": "36b79fb9-1c6c-46b2-b61a-755e23084581",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "28d6bf3c-e3a9-4b63-8502-dae9bc2881f3",
                "c2c1a201-83cf-4a15-9e0b-0895334dfafe",
                "84a264a1-3c90-4493-9950-07cc17fa0a68"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}
{
  "stats": {
    "suites": 44,
    "tests": 105,
    "passes": 105,
    "pending": 0,
    "failures": 0,
    "start": "2020-06-03T00:46:05.240Z",
    "end": "2020-06-03T00:46:06.601Z",
    "duration": 1361,
    "testsRegistered": 105,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6df2d935-29be-4b0c-b4ba-93f1342f05fc",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aae52a64-59c5-4f16-af40-526aa11a7e9a",
          "title": "/api/appointments",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
          "file": "/test/appointments.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/appointments \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "f79bed32-fbd5-49ed-bd70-7c5e071abba6",
              "parentUUID": "aae52a64-59c5-4f16-af40-526aa11a7e9a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/appointments \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "9ed20b67-8fbe-457c-b61f-51065ab4f0a7",
              "parentUUID": "aae52a64-59c5-4f16-af40-526aa11a7e9a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "bc378e4a-d893-44aa-830f-ab4639c879cb",
              "title": "/addAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /addAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "6dbcd9ae-e2d1-4c6f-8488-fd05dc23ee2d",
                  "parentUUID": "bc378e4a-d893-44aa-830f-ab4639c879cb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /addAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "fe5faa5c-b704-4824-955b-2c6855185dfb",
                  "parentUUID": "bc378e4a-d893-44aa-830f-ab4639c879cb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 addedd Successfully",
                  "fullTitle": "/api/appointments /addAppointment Should respond 200 addedd Successfully",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\ndeleteUser(\"01590243399\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "dfbdafcb-4195-4917-96c0-fb4b74761c9d",
                  "parentUUID": "bc378e4a-d893-44aa-830f-ab4639c879cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6dbcd9ae-e2d1-4c6f-8488-fd05dc23ee2d",
                "fe5faa5c-b704-4824-955b-2c6855185dfb",
                "dfbdafcb-4195-4917-96c0-fb4b74761c9d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 58,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "300c47a6-7bcd-4846-bfa8-e4a9f9bbb75b",
              "title": "/addConfirmedAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /addConfirmedAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/addConfirmedAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "d2d2e7ec-5189-43b2-81b5-c421056f55c1",
                  "parentUUID": "300c47a6-7bcd-4846-bfa8-e4a9f9bbb75b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /addConfirmedAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addConfirmedAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "832b6209-edc5-491f-ad42-c86386bf6a58",
                  "parentUUID": "300c47a6-7bcd-4846-bfa8-e4a9f9bbb75b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 addedd Successfully",
                  "fullTitle": "/api/appointments /addConfirmedAppointment Should respond 200 addedd Successfully",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nconst userId = res.body.data.user_id;\n res = await request(server)\n.post(\"/api/appointments/addConfirmedAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":userId,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nexpect(res.body.data.appointment_status).to.equal(\"upcoming\");\nconst appID = res.body.data.appointment_id;\ndeleteUser(\"01590243399\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "6b350584-7946-4ba8-a0fe-1d9d4201d5d7",
                  "parentUUID": "300c47a6-7bcd-4846-bfa8-e4a9f9bbb75b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d2d2e7ec-5189-43b2-81b5-c421056f55c1",
                "832b6209-edc5-491f-ad42-c86386bf6a58",
                "6b350584-7946-4ba8-a0fe-1d9d4201d5d7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 31,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "45735030-6723-407b-b95b-bb62649a597c",
              "title": "/getUserApps",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /getUserApps Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/getUserApps\")\n.expect(401);",
                  "err": {},
                  "uuid": "b99bd6df-19dd-4365-8dd4-59f7d0b344fd",
                  "parentUUID": "45735030-6723-407b-b95b-bb62649a597c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /getUserApps Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/getUserApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "5f71bfc9-278e-438f-a591-37b2be167e0f",
                  "parentUUID": "45735030-6723-407b-b95b-bb62649a597c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /getUserApps Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.post(\"/api/appointments/getUserApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"user_id\":1,\n    })\n.expect(200);\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "514a0c9f-039c-4698-94e3-06bc3648d937",
                  "parentUUID": "45735030-6723-407b-b95b-bb62649a597c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b99bd6df-19dd-4365-8dd4-59f7d0b344fd",
                "5f71bfc9-278e-438f-a591-37b2be167e0f",
                "514a0c9f-039c-4698-94e3-06bc3648d937"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fdbe438b-d483-49db-88d8-3660fd62ab36",
              "title": "/finishedAppointments",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /finishedAppointments Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/appointments/finishedAppointments\")\n.expect(401);",
                  "err": {},
                  "uuid": "f73f7e17-b3c7-4338-b445-c2dc0588dceb",
                  "parentUUID": "fdbe438b-d483-49db-88d8-3660fd62ab36",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /finishedAppointments Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.get(\"/api/appointments/finishedAppointments\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);",
                  "err": {},
                  "uuid": "3c73363d-1e36-4be2-93dc-63ce9af55c64",
                  "parentUUID": "fdbe438b-d483-49db-88d8-3660fd62ab36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f73f7e17-b3c7-4338-b445-c2dc0588dceb",
                "3c73363d-1e36-4be2-93dc-63ce9af55c64"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9f9a3c75-325c-4176-9eb2-6d942aa0f1f5",
              "title": "/upcomingAppointments",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /upcomingAppointments Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/appointments/upcomingAppointments\")\n.expect(401);",
                  "err": {},
                  "uuid": "18b1751a-eed2-4da6-a6c4-bfb0611f7445",
                  "parentUUID": "9f9a3c75-325c-4176-9eb2-6d942aa0f1f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /upcomingAppointments Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.get(\"/api/appointments/upcomingAppointments\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);",
                  "err": {},
                  "uuid": "d04c8df5-7da5-4b9c-bdd9-fc2e12026f8d",
                  "parentUUID": "9f9a3c75-325c-4176-9eb2-6d942aa0f1f5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "18b1751a-eed2-4da6-a6c4-bfb0611f7445",
                "d04c8df5-7da5-4b9c-bdd9-fc2e12026f8d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f8f15ca9-ee4e-4c3a-88d1-7b5aff065e43",
              "title": "/doctorFinishedAppointments",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /doctorFinishedAppointments Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/appointments/doctorFinishedAppointments\")\n.expect(401);",
                  "err": {},
                  "uuid": "ab5daad1-5d0e-4ecd-880b-aaa2141ee1c5",
                  "parentUUID": "f8f15ca9-ee4e-4c3a-88d1-7b5aff065e43",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /doctorFinishedAppointments Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"doctor\");\nlet res = await request(server)\n.get(\"/api/appointments/doctorFinishedAppointments\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);",
                  "err": {},
                  "uuid": "94f27b0a-b1f7-4f8c-92e0-0d6e577c16a0",
                  "parentUUID": "f8f15ca9-ee4e-4c3a-88d1-7b5aff065e43",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ab5daad1-5d0e-4ecd-880b-aaa2141ee1c5",
                "94f27b0a-b1f7-4f8c-92e0-0d6e577c16a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e08fc4a5-add8-4a5a-ab02-3dad7b6bda0d",
              "title": "/doctorUpcomingAppointments",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /doctorUpcomingAppointments Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/appointments/doctorUpcomingAppointments\")\n.expect(401);",
                  "err": {},
                  "uuid": "f74feb3c-b36b-4db3-a1db-f87256e20500",
                  "parentUUID": "e08fc4a5-add8-4a5a-ab02-3dad7b6bda0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /doctorUpcomingAppointments Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"doctor\");\nlet res = await request(server)\n.get(\"/api/appointments/doctorUpcomingAppointments\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);",
                  "err": {},
                  "uuid": "2e86bd37-4681-4f08-92fa-7b54c434d319",
                  "parentUUID": "e08fc4a5-add8-4a5a-ab02-3dad7b6bda0d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f74feb3c-b36b-4db3-a1db-f87256e20500",
                "2e86bd37-4681-4f08-92fa-7b54c434d319"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d2f73e56-b414-4eaa-b47e-cda18a6efe66",
              "title": "/getDocApps",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /getDocApps Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/getDocApps\")\n.expect(401);",
                  "err": {},
                  "uuid": "d7b40068-49a6-4a75-8008-e9bbd6b62529",
                  "parentUUID": "d2f73e56-b414-4eaa-b47e-cda18a6efe66",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /getDocApps Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/getDocApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"doctor_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "e553bee8-e84a-484d-ada9-69e1887f3d88",
                  "parentUUID": "d2f73e56-b414-4eaa-b47e-cda18a6efe66",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /getDocApps Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.post(\"/api/appointments/getDocApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":1,\n    })\n.expect(200);\ndeleteUser(\"01595543366\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "d3a72aa5-682c-4264-903a-984b2b4c2fe5",
                  "parentUUID": "d2f73e56-b414-4eaa-b47e-cda18a6efe66",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d7b40068-49a6-4a75-8008-e9bbd6b62529",
                "e553bee8-e84a-484d-ada9-69e1887f3d88",
                "d3a72aa5-682c-4264-903a-984b2b4c2fe5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "19fe936f-9a65-48d4-9d6a-128ffc69fbde",
              "title": "/cancelAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /cancelAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/appointments/cancelAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "bc1d9b2e-e94d-462f-9736-620118f9a091",
                  "parentUUID": "19fe936f-9a65-48d4-9d6a-128ffc69fbde",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /cancelAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/appointments/cancelAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"aapointment_id\":\"djdkj\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "2e019a56-65b6-41f1-b6fc-7f7373521337",
                  "parentUUID": "19fe936f-9a65-48d4-9d6a-128ffc69fbde",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 updated Successfully",
                  "fullTitle": "/api/appointments /cancelAppointment Should respond 200 updated Successfully",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.patch(\"/api/appointments/cancelAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"appointment_id\":appID,\n    })\n.expect(200);\nexpect(res.body.data.appointment_status).to.equal(\"canceled\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "5fb202dd-b7bb-4ed4-b3b4-d41eb870e272",
                  "parentUUID": "19fe936f-9a65-48d4-9d6a-128ffc69fbde",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bc1d9b2e-e94d-462f-9736-620118f9a091",
                "2e019a56-65b6-41f1-b6fc-7f7373521337",
                "5fb202dd-b7bb-4ed4-b3b4-d41eb870e272"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9b083a69-dd6b-403c-92d0-1d36e6ef98a5",
              "title": "/confirmAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /confirmAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/appointments/confirmAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "2149ba40-be17-48ae-95ba-8adb16c2f0b2",
                  "parentUUID": "9b083a69-dd6b-403c-92d0-1d36e6ef98a5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /confirmAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/appointments/confirmAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"aapointment_id\":\"djdkj\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "7f176ba9-05d1-4e7f-966c-5558f7630932",
                  "parentUUID": "9b083a69-dd6b-403c-92d0-1d36e6ef98a5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 updated Successfully",
                  "fullTitle": "/api/appointments /confirmAppointment Should respond 200 updated Successfully",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.patch(\"/api/appointments/confirmAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"appointment_id\":appID,\n    })\n.expect(200);\nexpect(res.body.data.appointment_status).to.equal(\"upcoming\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "a79fa151-ae93-4318-9d6a-49286d7e589b",
                  "parentUUID": "9b083a69-dd6b-403c-92d0-1d36e6ef98a5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2149ba40-be17-48ae-95ba-8adb16c2f0b2",
                "7f176ba9-05d1-4e7f-966c-5558f7630932",
                "a79fa151-ae93-4318-9d6a-49286d7e589b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0b2ac720-49a0-4078-b7eb-86b4ec09d27e",
              "title": "/docAppsByDate",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /docAppsByDate Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/docAppsByDate\")\n.expect(401);",
                  "err": {},
                  "uuid": "89c93d28-4008-48a2-b3f0-9eb5496a5d9a",
                  "parentUUID": "0b2ac720-49a0-4078-b7eb-86b4ec09d27e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /docAppsByDate Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"doctor\");\nlet res = await request(server)\n.post(\"/api/appointments/docAppsByDate\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"aapointment_id\":\"djdkj\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "35a5148f-f93d-4e38-ab65-bf873a28246f",
                  "parentUUID": "0b2ac720-49a0-4078-b7eb-86b4ec09d27e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if we got the apps successfully",
                  "fullTitle": "/api/appointments /docAppsByDate Should respond with 200 if we got the apps successfully",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken('01090243795',1,\"doctor\");\nlet res = await request(server)\n.post(\"/api/appointments/docAppsByDate\")\n.set('Authorization',`Bearer ${token}`)\n.send({\n    \"date\":'2020-03-20'\n})\n.expect(200)\n// expect(res.body.data[0].date).to.equal(\"2020-03-20\");",
                  "err": {},
                  "uuid": "88961f01-c568-4406-b62c-d4c635689f6b",
                  "parentUUID": "0b2ac720-49a0-4078-b7eb-86b4ec09d27e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "89c93d28-4008-48a2-b3f0-9eb5496a5d9a",
                "35a5148f-f93d-4e38-ab65-bf873a28246f",
                "88961f01-c568-4406-b62c-d4c635689f6b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "59a36b6d-c4b4-4b87-bc83-fff865ad26f8",
          "title": "/api/auth",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
          "file": "/test/auth.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/auth \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "185393dc-004a-402b-934f-78b7aabda74d",
              "parentUUID": "59a36b6d-c4b4-4b87-bc83-fff865ad26f8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/auth \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "4e88b698-7a49-48d4-9945-58fe37f615a2",
              "parentUUID": "59a36b6d-c4b4-4b87-bc83-fff865ad26f8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "3964d341-de17-4dad-8a78-b7eaf93581d7",
              "title": "/signup",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if one of inputs is incorrect or missing (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /signup should respond with 400 if one of inputs is incorrect or missing (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\").expect(400);  \nres = await request(server)\n.post(\"/api/auth/signup\")\n.send({password:\"fawzi\"})\n.expect(400);",
                  "err": {},
                  "uuid": "46a5a5d3-4662-477e-9018-2f9c12c447db",
                  "parentUUID": "3964d341-de17-4dad-8a78-b7eaf93581d7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 201 if user succefully registered",
                  "fullTitle": "/api/auth /signup should respond with 201 if user succefully registered",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243399\");",
                  "err": {},
                  "uuid": "a5d7986a-e12d-45d4-b6f3-3c7703a1fe3e",
                  "parentUUID": "3964d341-de17-4dad-8a78-b7eaf93581d7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 403 if phone_number is already registered",
                  "fullTitle": "/api/auth /signup should respond with 403 if phone_number is already registered",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(403);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "d23ada79-ce75-43ee-b7b5-0f5a35d72929",
                  "parentUUID": "3964d341-de17-4dad-8a78-b7eaf93581d7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "46a5a5d3-4662-477e-9018-2f9c12c447db",
                "a5d7986a-e12d-45d4-b6f3-3c7703a1fe3e",
                "d23ada79-ce75-43ee-b7b5-0f5a35d72929"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f639bd8b-ebdb-44e5-a224-08bcecfb81ce",
              "title": "/signin",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /signin should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signin\")\n.expect(400);",
                  "err": {},
                  "uuid": "b0be4a6e-23ac-4fed-9092-018c08e1c2e7",
                  "parentUUID": "f639bd8b-ebdb-44e5-a224-08bcecfb81ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 when phone number notfound `backend side`",
                  "fullTitle": "/api/auth /signin should respond with 401 when phone number notfound `backend side`",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n .post(\"/api/auth/signin\")\n .send({\"phone_number\":\"01590243311\"})\n .expect(401);",
                  "err": {},
                  "uuid": "12e761d2-2c18-49d8-be4d-eeb7d6a52868",
                  "parentUUID": "f639bd8b-ebdb-44e5-a224-08bcecfb81ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if user loged in successfully",
                  "fullTitle": "/api/auth /signin should respond with 200 if user loged in successfully",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243311\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n}).expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243311\");\nres = await request(server)\n.post(\"/api/auth/signin\")\n.send({\"phone_number\":\"01590243311\"})\n.expect(200);\ndeleteUser(\"01590243311\");",
                  "err": {},
                  "uuid": "7be0bcbf-d6a9-44dd-9b05-6e1b1228286e",
                  "parentUUID": "f639bd8b-ebdb-44e5-a224-08bcecfb81ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b0be4a6e-23ac-4fed-9092-018c08e1c2e7",
                "12e761d2-2c18-49d8-be4d-eeb7d6a52868",
                "7be0bcbf-d6a9-44dd-9b05-6e1b1228286e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6cbc2ee1-668a-4ef0-a298-9a6edbdc83c1",
              "title": "/updateFirebaseToken",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /updateFirebaseToken Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"notInTheSchema\":\"haka\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "e2b987d1-f04d-4bb8-8b3f-ee73b2301e08",
                  "parentUUID": "6cbc2ee1-668a-4ef0-a298-9a6edbdc83c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if phone number not found `backend side`",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 401 if phone number not found `backend side`",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243788\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"djkdjkdjk\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(401);",
                  "err": {},
                  "uuid": "c073bd00-7081-4168-adb8-0e8818962a46",
                  "parentUUID": "6cbc2ee1-668a-4ef0-a298-9a6edbdc83c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if we updated the token_id successfully",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 200 if we updated the token_id successfully",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243388\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\"\n}).expect(201);\nconst token = genToken(\"01590243388\",1,\"user\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);\nexpect(res.body.data.updated_token).to.equal(\"123456789elhamdullah\");\ndeleteUser(\"01590243388\");",
                  "err": {},
                  "uuid": "8ea6108b-b23f-40df-a6a5-050cde0092a4",
                  "parentUUID": "6cbc2ee1-668a-4ef0-a298-9a6edbdc83c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 403 if user is blocked",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 403 if user is blocked",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"01590243399\",1,\"user\");\nawait blockUser(\"01590243399\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "0179aae9-e206-41cd-806a-1703e8a7f4ce",
                  "parentUUID": "6cbc2ee1-668a-4ef0-a298-9a6edbdc83c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if user is not authorized ",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 401 if user is not authorized ",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243391\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\n// const token = genToken(\"01590243399\",\"user\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n// .set(\"Authorization\", `Bearer ${token}`)\n.expect(401);\ndeleteUser(\"01590243391\");",
                  "err": {},
                  "uuid": "6e398fc0-0013-4f1b-a65d-b1dfa6081634",
                  "parentUUID": "6cbc2ee1-668a-4ef0-a298-9a6edbdc83c1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e2b987d1-f04d-4bb8-8b3f-ee73b2301e08",
                "c073bd00-7081-4168-adb8-0e8818962a46",
                "8ea6108b-b23f-40df-a6a5-050cde0092a4",
                "0179aae9-e206-41cd-806a-1703e8a7f4ce",
                "6e398fc0-0013-4f1b-a65d-b1dfa6081634"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 42,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7b9deeef-0846-472d-a358-c9f6b65d08d7",
              "title": "/signDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if any inputs are incorrect or missed (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /signDoctor should respond with 400 if any inputs are incorrect or missed (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signDoctor\")\n.send({phone_number:\"02903\"})\n.expect(400);",
                  "err": {},
                  "uuid": "a9bb7519-1f5e-4c39-860b-65f23ac6af96",
                  "parentUUID": "7b9deeef-0846-472d-a358-c9f6b65d08d7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if phone number or password are incorrect `backend side`",
                  "fullTitle": "/api/auth /signDoctor should respond with 401 if phone number or password are incorrect `backend side`",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090243795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\":\"200\"\n})\n.expect(201);\nres = await request(server)\n.post(\"/api/auth/signDoctor\")\n.send({phone_number:\"01090243794\",password:\"01288\"})\n.expect(401);\ndeleteDoctor(\"01090243795\");",
                  "err": {},
                  "uuid": "c068c999-ff38-48c4-9a81-2351a3dd8dbf",
                  "parentUUID": "7b9deeef-0846-472d-a358-c9f6b65d08d7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a9bb7519-1f5e-4c39-860b-65f23ac6af96",
                "c068c999-ff38-48c4-9a81-2351a3dd8dbf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "839cb669-1682-48e7-b55a-a4ab67748c69",
              "title": "/updateDoctorFirebaseToken",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"doctor\");\nlet res = await request(server)\n.patch(\"/api/auth/updateDoctorFirebaseToken\")\n.send({\"notInTheSchema\":\"haka\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "d6a4b618-e5c9-46e8-9f8b-d5f84d91b853",
                  "parentUUID": "839cb669-1682-48e7-b55a-a4ab67748c69",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if phone number not found `backend side`",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken should respond with 401 if phone number not found `backend side`",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243788\",1,\"doctor\");\nlet res = await request(server)\n.patch(\"/api/auth/updateDoctorFirebaseToken\")\n.send({\"new_token\":\"djkdjkdjk\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(401);",
                  "err": {},
                  "uuid": "fc060a08-b921-43dc-a6c3-cba3ed7a3d7e",
                  "parentUUID": "839cb669-1682-48e7-b55a-a4ab67748c69",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if we updated the Doctor token_id successfully",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken should respond with 200 if we updated the Doctor token_id successfully",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243788\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090243795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\":\"200\"\n})\n.expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01090243795\");\nconst token2 = genToken(\"01090243795\",1,\"doctor\");\nres = await request(server)\n.patch(\"/api/auth/updateDoctorFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n.set(\"Authorization\", `Bearer ${token2}`)\n.expect(200);\nexpect(res.body.data.updated_token).to.equal(\"123456789elhamdullah\");\ndeleteDoctor(\"01090243795\");",
                  "err": {},
                  "uuid": "ba77528f-9c04-4018-8824-58246b1c8300",
                  "parentUUID": "839cb669-1682-48e7-b55a-a4ab67748c69",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if Doctor is not authorized ",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken should respond with 401 if Doctor is not authorized ",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01010243795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\":\"200\"\n})\n.expect(201);\n// const token = genToken(\"01590243399\",\"doctor\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n// .set(\"Authorization\", `Bearer ${token}`)\n.expect(401);\ndeleteDoctor(\"01010243795\");",
                  "err": {},
                  "uuid": "2eb50170-4773-4ec8-ba5a-dc9e5d6a1cc4",
                  "parentUUID": "839cb669-1682-48e7-b55a-a4ab67748c69",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d6a4b618-e5c9-46e8-9f8b-d5f84d91b853",
                "fc060a08-b921-43dc-a6c3-cba3ed7a3d7e",
                "ba77528f-9c04-4018-8824-58246b1c8300",
                "2eb50170-4773-4ec8-ba5a-dc9e5d6a1cc4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 28,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2bd89d64-7021-46ed-8ad9-e2e59f360410",
          "title": "/api/categories",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/categories.js",
          "file": "/test/categories.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/categories \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "79c8b0a9-131e-4d10-a50c-b560b25d7355",
              "parentUUID": "2bd89d64-7021-46ed-8ad9-e2e59f360410",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/categories \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "7a2a0a24-9912-4388-af1e-3763c504c955",
              "parentUUID": "2bd89d64-7021-46ed-8ad9-e2e59f360410",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "9ea75ec5-e92c-42f3-b3ef-d950ba4e1111",
              "title": "/getCategories",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/categories.js",
              "file": "/test/categories.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/categories /getCategories Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/categories/getCategories\")\n.expect(401);",
                  "err": {},
                  "uuid": "a029b428-1ac0-4420-b0cb-a0722a4ec523",
                  "parentUUID": "9ea75ec5-e92c-42f3-b3ef-d950ba4e1111",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 if got categories successfully",
                  "fullTitle": "/api/categories /getCategories Should respond 200 if got categories successfully",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.get(\"/api/categories/getCategories\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);",
                  "err": {},
                  "uuid": "185e421a-e506-4a50-b26e-c3835f362f36",
                  "parentUUID": "9ea75ec5-e92c-42f3-b3ef-d950ba4e1111",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a029b428-1ac0-4420-b0cb-a0722a4ec523",
                "185e421a-e506-4a50-b26e-c3835f362f36"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "37db9008-b71c-44d8-abb0-f4746e5a5db0",
          "title": "/api/controlPanel",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
          "file": "/test/controlPanel.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/controlPanel \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "fc927ace-6316-4f82-936e-16bde988e07c",
              "parentUUID": "37db9008-b71c-44d8-abb0-f4746e5a5db0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/controlPanel \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "1b989c03-7860-4e94-b73c-b56d1cf07de1",
              "parentUUID": "37db9008-b71c-44d8-abb0-f4746e5a5db0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "43a24b69-ad43-4d5a-8077-513fb85f4e03",
              "title": "/addingDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION)",
                  "fullTitle": "/api/controlPanel /addingDoctor Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nconst res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(400);",
                  "err": {},
                  "uuid": "90e10792-ef0e-4134-80cd-9a48e5e8d096",
                  "parentUUID": "43a24b69-ad43-4d5a-8077-513fb85f4e03",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 201 if doctor created successfully",
                  "fullTitle": "/api/controlPanel /addingDoctor Should respond with 201 if doctor created successfully",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"11090243799\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"11090243799\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"11090243799\");\ndeleteDoctor(\"11090243799\");",
                  "err": {},
                  "uuid": "0373fbde-b1c0-4955-94fa-fb7122668d70",
                  "parentUUID": "43a24b69-ad43-4d5a-8077-513fb85f4e03",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 403 if the phone number is already registered",
                  "fullTitle": "/api/controlPanel /addingDoctor Should respond with 403 if the phone number is already registered",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243798\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243798\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01090243798\");\nres = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243798\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(403);",
                  "err": {},
                  "uuid": "6997acc0-03ba-4f28-b76b-11c62e17ee31",
                  "parentUUID": "43a24b69-ad43-4d5a-8077-513fb85f4e03",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "90e10792-ef0e-4134-80cd-9a48e5e8d096",
                "0373fbde-b1c0-4955-94fa-fb7122668d70",
                "6997acc0-03ba-4f28-b76b-11c62e17ee31"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8ce0659e-4a26-4173-8954-f92a77ae9a16",
              "title": "/addingAdmin",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION",
                  "fullTitle": "/api/controlPanel /addingAdmin Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ name: \"fawzi\" })\n  .expect(400);",
                  "err": {},
                  "uuid": "61fa102a-62ae-4274-8085-da355c9d1ebb",
                  "parentUUID": "8ce0659e-4a26-4173-8954-f92a77ae9a16",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 201 if created successfully",
                  "fullTitle": "/api/controlPanel /addingAdmin Should respond with 201 if created successfully",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"11090243799\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"11090243799\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"11090243799\");\ndeleteAdmin(\"11090243799\");",
                  "err": {},
                  "uuid": "782064f2-bc5e-45fb-8a2e-6e07f4fac9e6",
                  "parentUUID": "8ce0659e-4a26-4173-8954-f92a77ae9a16",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should Respond with 403 if phone number is already Registered",
                  "fullTitle": "/api/controlPanel /addingAdmin Should Respond with 403 if phone number is already Registered",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243795\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(403);\ndeleteAdmin(\"01090243795\");",
                  "err": {},
                  "uuid": "db5110cd-8894-4d91-91b2-d8631900a42b",
                  "parentUUID": "8ce0659e-4a26-4173-8954-f92a77ae9a16",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "61fa102a-62ae-4274-8085-da355c9d1ebb",
                "782064f2-bc5e-45fb-8a2e-6e07f4fac9e6",
                "db5110cd-8894-4d91-91b2-d8631900a42b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "47f4eb40-2eb0-4966-a8cb-7884fefdce62",
              "title": "/signAdmin",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "fullTitle": "/api/controlPanel /signAdmin should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .post(\"/api/controlPanel/signAdmin\")\n  .expect(400);",
                  "err": {},
                  "uuid": "a144279c-701c-4e0e-adb5-576e4d4f34fc",
                  "parentUUID": "47f4eb40-2eb0-4966-a8cb-7884fefdce62",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 when phone number is not found `backend side`",
                  "fullTitle": "/api/controlPanel /signAdmin should respond with 401 when phone number is not found `backend side`",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .post(\"/api/controlPanel/signAdmin\")\n  .send({ phone_number: \"01090243795\", password: \"testest\" })\n  .expect(401);",
                  "err": {},
                  "uuid": "d11f0859-ac59-41e0-9fae-1ae665c13f9a",
                  "parentUUID": "47f4eb40-2eb0-4966-a8cb-7884fefdce62",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if admin loged in successfully",
                  "fullTitle": "/api/controlPanel /signAdmin should respond with 200 if admin loged in successfully",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243795\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01090243795\");\nres = await request(server)\n  .post(\"/api/controlPanel/signAdmin\")\n  .send({ phone_number: \"01090243795\", password: \"testtest\" })\n  .expect(200);\nexpect(res.body.data.phone_number).to.equal(\"01090243795\");\ndeleteAdmin(\"01090243795\");",
                  "err": {},
                  "uuid": "035efc88-65cd-4efc-a600-8e5fcb40efaa",
                  "parentUUID": "47f4eb40-2eb0-4966-a8cb-7884fefdce62",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a144279c-701c-4e0e-adb5-576e4d4f34fc",
                "d11f0859-ac59-41e0-9fae-1ae665c13f9a",
                "035efc88-65cd-4efc-a600-8e5fcb40efaa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b862dde6-f7d6-48e0-91ca-4a516f3e93bf",
              "title": "/checkAdminByToken",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if admin is not authorized",
                  "fullTitle": "/api/controlPanel /checkAdminByToken Should respond with 401 if admin is not authorized",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109024379785\",1,\"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/checkAdminByToken\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(401);",
                  "err": {},
                  "uuid": "3873e808-ef7d-4655-b405-e37749244aba",
                  "parentUUID": "b862dde6-f7d6-48e0-91ca-4a516f3e93bf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if token is valid and referanced to admin",
                  "fullTitle": "/api/controlPanel /checkAdminByToken Should respond with 200 if token is valid and referanced to admin",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243795\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(201);\nres = await request(server)\n  .post(\"/api/controlPanel/checkAdminByToken\")\n  .send({})\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(200);\ndeleteAdmin(\"01090243795\");",
                  "err": {},
                  "uuid": "b7a1e2a7-385b-4acb-a589-74ba2910e35d",
                  "parentUUID": "b862dde6-f7d6-48e0-91ca-4a516f3e93bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3873e808-ef7d-4655-b405-e37749244aba",
                "b7a1e2a7-385b-4acb-a589-74ba2910e35d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c0baf68f-299c-400d-a4d8-1d01cadfa15c",
              "title": "/addImage",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should responed with 201 if uploaded",
                  "fullTitle": "/api/controlPanel /addImage Should responed with 201 if uploaded",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addImage\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n  .attach(\"file\", path.resolve(__dirname, \"../logo.png\"))\n  .expect(201);",
                  "err": {},
                  "uuid": "d7539b1c-df41-4022-a853-e4091aeb9eb4",
                  "parentUUID": "c0baf68f-299c-400d-a4d8-1d01cadfa15c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 403 if type not allowed",
                  "fullTitle": "/api/controlPanel /addImage Should responed with 403 if type not allowed",
                  "timedOut": false,
                  "duration": 58,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addImage\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n  .attach(\"file\", path.resolve(__dirname, \"../udemy-accs.txt\"))\n  .expect(403);",
                  "err": {},
                  "uuid": "58f1ab09-d66e-4636-9be6-56b71f5baa08",
                  "parentUUID": "c0baf68f-299c-400d-a4d8-1d01cadfa15c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d7539b1c-df41-4022-a853-e4091aeb9eb4",
                "58f1ab09-d66e-4636-9be6-56b71f5baa08"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 73,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "259712f5-bc52-4944-b1c9-893a797fc7e9",
              "title": "/getCategories",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /getCategories Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .expect(401);",
                  "err": {},
                  "uuid": "f10393ea-a824-47ed-9eee-61ebd54748a2",
                  "parentUUID": "259712f5-bc52-4944-b1c9-893a797fc7e9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got categories successfully",
                  "fullTitle": "/api/controlPanel /getCategories Should respond with 200 if got categories successfully",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(200);",
                  "err": {},
                  "uuid": "71892fc2-773e-4dcd-85b7-ad6a45fd193b",
                  "parentUUID": "259712f5-bc52-4944-b1c9-893a797fc7e9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f10393ea-a824-47ed-9eee-61ebd54748a2",
                "71892fc2-773e-4dcd-85b7-ad6a45fd193b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5dc10dde-418b-41be-83e2-7b7b5e40b8be",
              "title": "/getDoctors",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /getDoctors Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .expect(401);",
                  "err": {},
                  "uuid": "c737a397-8e02-45b8-a7e3-0535bac8a63b",
                  "parentUUID": "5dc10dde-418b-41be-83e2-7b7b5e40b8be",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got categories successfully",
                  "fullTitle": "/api/controlPanel /getDoctors Should respond with 200 if got categories successfully",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .get(\"/api/controlPanel/getDoctors\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(200);",
                  "err": {},
                  "uuid": "38bd0fc6-5ff0-4206-8dcb-ee93ed30d222",
                  "parentUUID": "5dc10dde-418b-41be-83e2-7b7b5e40b8be",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c737a397-8e02-45b8-a7e3-0535bac8a63b",
                "38bd0fc6-5ff0-4206-8dcb-ee93ed30d222"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "33def0ab-8544-45ed-80d2-f15354007ca8",
              "title": "/deleteDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /deleteDoctor Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .expect(401);",
                  "err": {},
                  "uuid": "de2b9daa-39ee-42b1-a4c4-678b24073b0f",
                  "parentUUID": "33def0ab-8544-45ed-80d2-f15354007ca8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 404 if doctor not found",
                  "fullTitle": "/api/controlPanel /deleteDoctor Should respond with 404 if doctor not found",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .delete(\"/api/controlPanel/deleteDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"0109024371111212129511113\"})\n  .expect(404);",
                  "err": {},
                  "uuid": "34a8d674-5bbb-430f-8577-60b084e12294",
                  "parentUUID": "33def0ab-8544-45ed-80d2-f15354007ca8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if doctor deleted successfully",
                  "fullTitle": "/api/controlPanel /deleteDoctor Should respond with 200 if doctor deleted successfully",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .delete(\"/api/controlPanel/deleteDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"01090243798\"}) // this tee number which registered above\n  .expect(200);",
                  "err": {},
                  "uuid": "32aed83d-a09a-4899-a44a-97d3d797fb32",
                  "parentUUID": "33def0ab-8544-45ed-80d2-f15354007ca8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "de2b9daa-39ee-42b1-a4c4-678b24073b0f",
                "34a8d674-5bbb-430f-8577-60b084e12294",
                "32aed83d-a09a-4899-a44a-97d3d797fb32"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "417aa1ca-3302-43e4-b24c-fd147e691403",
              "title": "/toggleBlock",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /toggleBlock Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .patch(\"/api/controlPanel/toggleBlock\")\n  .expect(401);",
                  "err": {},
                  "uuid": "936ec63c-e51d-4e51-b39e-0db4c869b85d",
                  "parentUUID": "417aa1ca-3302-43e4-b24c-fd147e691403",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 404 if user not found",
                  "fullTitle": "/api/controlPanel /toggleBlock Should respond with 404 if user not found",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .patch(\"/api/controlPanel/toggleBlock\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"0109024371111212129511113\"})\n  .expect(404);",
                  "err": {},
                  "uuid": "2373ce5f-d903-4c68-9a59-dc4133ab455b",
                  "parentUUID": "417aa1ca-3302-43e4-b24c-fd147e691403",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if toggle user's block successfully",
                  "fullTitle": "/api/controlPanel /toggleBlock Should respond with 200 if toggle user's block successfully",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"015902433199\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nconst token = genToken(\"01090243795\",1, \"admin\");\nres = await request(server)\n  .patch(\"/api/controlPanel/toggleBlock\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"015902433199\"})\n  .expect(200);\n  deleteUser(\"015902433199\");",
                  "err": {},
                  "uuid": "e99a5289-cc57-451a-a8b0-bb126df5d526",
                  "parentUUID": "417aa1ca-3302-43e4-b24c-fd147e691403",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "936ec63c-e51d-4e51-b39e-0db4c869b85d",
                "2373ce5f-d903-4c68-9a59-dc4133ab455b",
                "e99a5289-cc57-451a-a8b0-bb126df5d526"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e11d1b70-e55b-4973-92e8-81a2a056e3d2",
              "title": "/getDoctorSlots",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /getDoctorSlots Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .post(\"/api/controlPanel/getDoctorSlots\")\n  .expect(401);",
                  "err": {},
                  "uuid": "ef5ce8db-0814-4c39-92fc-f3ec1a48b714",
                  "parentUUID": "e11d1b70-e55b-4973-92e8-81a2a056e3d2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 doctor_id is missing or incorrect",
                  "fullTitle": "/api/controlPanel /getDoctorSlots Should respond with 400 doctor_id is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/getDoctorSlots\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ doctor_id: \"ahmed\"})\n  .expect(400);",
                  "err": {},
                  "uuid": "0a8decc8-74ed-4424-91c1-86cc66278b84",
                  "parentUUID": "e11d1b70-e55b-4973-92e8-81a2a056e3d2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got doctor's slots successfully",
                  "fullTitle": "/api/controlPanel /getDoctorSlots Should respond with 200 if got doctor's slots successfully",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/getDoctorSlots\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ doctor_id: 11})\n  .expect(200);",
                  "err": {},
                  "uuid": "418665f6-6c73-47b2-bd0e-45b76579cb96",
                  "parentUUID": "e11d1b70-e55b-4973-92e8-81a2a056e3d2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ef5ce8db-0814-4c39-92fc-f3ec1a48b714",
                "0a8decc8-74ed-4424-91c1-86cc66278b84",
                "418665f6-6c73-47b2-bd0e-45b76579cb96"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "61b0a277-3071-4b1d-8445-ba3ca3ca6ae7",
          "title": "/api/doctors",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
          "file": "/test/doctors.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/doctors \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "0f006183-9059-43ef-8921-cac280522822",
              "parentUUID": "61b0a277-3071-4b1d-8445-ba3ca3ca6ae7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/doctors \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "80f98d0d-8e00-4ae6-9bee-1813c288e249",
              "parentUUID": "61b0a277-3071-4b1d-8445-ba3ca3ca6ae7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "95abb4a3-3455-46e4-b0db-812d0a2341a0",
              "title": "/getDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
              "file": "/test/doctors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if phone doctor_id is missing (validation schema)",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 400 if phone doctor_id is missing (validation schema)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({})\n.expect(400);",
                  "err": {},
                  "uuid": "540ca9b3-1b75-466b-9c33-66c2425586a7",
                  "parentUUID": "95abb4a3-3455-46e4-b0db-812d0a2341a0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.send({doctor_id: \"1233\"})\n.expect(401)",
                  "err": {},
                  "uuid": "0def4e79-b2e5-4689-b6e5-bca924cdad8d",
                  "parentUUID": "95abb4a3-3455-46e4-b0db-812d0a2341a0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 404 if doctor not found",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 404 if doctor not found",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({doctor_id: 54878785})\n.expect(404);",
                  "err": {},
                  "uuid": "533f34d4-57b9-4d67-8b8a-5cf02b502653",
                  "parentUUID": "95abb4a3-3455-46e4-b0db-812d0a2341a0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got doctor successfully",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 200 if got doctor successfully",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090113795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\": \"100\",\n})\n.expect(201);\nconst doctor_id = res.body.data.doctor_id;\nres = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({doctor_id: doctor_id})\n.expect(200);\ndeleteDoctor(\"01090113795\");",
                  "err": {},
                  "uuid": "4c853d38-b120-462e-a2e1-bf68d55d4d9b",
                  "parentUUID": "95abb4a3-3455-46e4-b0db-812d0a2341a0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "540ca9b3-1b75-466b-9c33-66c2425586a7",
                "0def4e79-b2e5-4689-b6e5-bca924cdad8d",
                "533f34d4-57b9-4d67-8b8a-5cf02b502653",
                "4c853d38-b120-462e-a2e1-bf68d55d4d9b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cec13a17-fbef-46c2-8a07-78bbcb6fd35a",
              "title": "/getDoctors",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
              "file": "/test/doctors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/doctors /getDoctors Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/doctors/getDoctors\")\n.expect(401)",
                  "err": {},
                  "uuid": "a5a5443d-981b-42ce-bd51-5ed150254c16",
                  "parentUUID": "cec13a17-fbef-46c2-8a07-78bbcb6fd35a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got doctors successfully",
                  "fullTitle": "/api/doctors /getDoctors Should respond with 200 if got doctors successfully",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"user\");\n            let res = await request(server)\n            .post(\"/api/doctors/getDoctors\")\n            .set(\"Authorization\", `Bearer ${token}`)\n            .send({category_id: 42})\n            .expect(200);",
                  "err": {},
                  "uuid": "4d5d7ec7-57ad-4a61-b550-09ec10183961",
                  "parentUUID": "cec13a17-fbef-46c2-8a07-78bbcb6fd35a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a5a5443d-981b-42ce-bd51-5ed150254c16",
                "4d5d7ec7-57ad-4a61-b550-09ec10183961"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1823aa98-5688-481b-9ee6-ccc1ab8bc036",
              "title": "/updateDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
              "file": "/test/doctors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/doctors/updateDoctor\")\n.send({\"phone_number\":\"3487\"})\n.expect(401);",
                  "err": {},
                  "uuid": "e5dcb39e-4392-4409-b6c2-03f77ca4ca64",
                  "parentUUID": "1823aa98-5688-481b-9ee6-ccc1ab8bc036",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 if field is nor allowed",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 400 if field is nor allowed",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243311\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/doctors/updateDoctor\")\n.send({\"fb_token_id\":\"3487\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "e125bc04-073d-41ea-a896-920480447b28",
                  "parentUUID": "1823aa98-5688-481b-9ee6-ccc1ab8bc036",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if successfully updated",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 200 if successfully updated",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"11090243799\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"11090243799\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(201);\n  const docId = res.body.data.doctor_id;\nres = await request(server)\n .patch(\"/api/doctors/updateDoctor\")\n.send({\n    doctor_id: docId,\n    phone_number: \"112345\",\n    password: \"t123\",\n    first_name: \"fawziiiii\",\n    last_name: \"ahmedddddd\",\n    country: \"saudiarabia\",\n    category_id: 5,\n    picture: \"fkfjkfj\",\n    price: \"300\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);\nexpect(res.body.data.phone_number).to.equal(\"112345\");\nexpect(res.body.data.password).to.equal(\"t123\");\nexpect(res.body.data.first_name).to.equal(\"fawziiiii\");\nexpect(res.body.data.last_name).to.equal(\"ahmedddddd\");\nexpect(res.body.data.country).to.equal(\"saudiarabia\");\nexpect(res.body.data.category_id).to.equal(5);\nexpect(res.body.data.picture).to.equal(\"fkfjkfj\");\nexpect(res.body.data.price).to.equal(\"300\");",
                  "err": {},
                  "uuid": "4e7a0a2f-dc7a-4575-bf1f-c59a864b0090",
                  "parentUUID": "1823aa98-5688-481b-9ee6-ccc1ab8bc036",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 403 if new phone number is already registered",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 403 if new phone number is already registered",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243313\",1,\"admin\");\n          let res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n  phone_number: \"110902411\",\n  password: \"testtest\",\n  first_name: \"fawzi\",\n  last_name: \"ahmed\",\n  country: \"egypt\",\n  category_id: 1,\n  picture: \"fkfjkfj\",\n  price: \"100\",\n})\n.expect(201);\nconst docId = res.body.data.doctor_id;\nres = await request(server)\n.patch(\"/api/doctors/updateDoctor\")\n.send({\n    doctor_id: docId,\n    phone_number: \"112345\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteDoctor(\"110902411\");\ndeleteDoctor(\"112345\");",
                  "err": {},
                  "uuid": "4c15ba11-2264-454f-946e-b278ee354282",
                  "parentUUID": "1823aa98-5688-481b-9ee6-ccc1ab8bc036",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e5dcb39e-4392-4409-b6c2-03f77ca4ca64",
                "e125bc04-073d-41ea-a896-920480447b28",
                "4e7a0a2f-dc7a-4575-bf1f-c59a864b0090",
                "4c15ba11-2264-454f-946e-b278ee354282"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 27,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "46d752f0-3123-4925-8360-91b6f63a7468",
          "title": "/api/slots",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
          "file": "/test/slots.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/slots \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "80a5cf04-10c6-4da6-af0f-18b1afa20d23",
              "parentUUID": "46d752f0-3123-4925-8360-91b6f63a7468",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/slots \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "03b8da8b-8686-4a70-b2b3-ea6c731c7c42",
              "parentUUID": "46d752f0-3123-4925-8360-91b6f63a7468",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "ecccbf90-92d4-423d-9147-11f322d4289b",
              "title": "/addSlot",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
              "file": "/test/slots.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/slots /addSlot Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/slots/addSlot\")\n.expect(401);",
                  "err": {},
                  "uuid": "b89807b4-5011-4427-bcf4-f845f450b93d",
                  "parentUUID": "ecccbf90-92d4-423d-9147-11f322d4289b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/slots /addSlot Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/slots/addSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"day\":\"mon\",\n    \"slot_time\":\"60:00\",\n    \"available\":false\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "12e7f708-507c-4ff4-9109-c9314382f061",
                  "parentUUID": "ecccbf90-92d4-423d-9147-11f322d4289b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 addedd Successfully",
                  "fullTitle": "/api/slots /addSlot Should respond 200 addedd Successfully",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090113795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\": \"100\",\n})\n.expect(201);\nconst docId = res.body.data.doctor_id;\nres = await request(server)\n.post(\"/api/slots/addSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":docId,\n    \"day\":\"mon\",\n    \"start_time\":\"23:00\",\n    \"end_time\":\"24:00\",\n    \"slot_time\":\"60:00\",\n    \"available\":false\n    })\n.expect(201);\nconst slotId = res.body.data.slot_id;\ndeleteDoctor(\"01090113795\");\ndeleteSlot(slotId);",
                  "err": {},
                  "uuid": "8e620734-665e-4519-b9d0-2cc7e7a6fd7d",
                  "parentUUID": "ecccbf90-92d4-423d-9147-11f322d4289b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b89807b4-5011-4427-bcf4-f845f450b93d",
                "12e7f708-507c-4ff4-9109-c9314382f061",
                "8e620734-665e-4519-b9d0-2cc7e7a6fd7d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b723f2b3-2d48-46e9-82be-f98bc4ae4301",
              "title": "/updateSlot",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
              "file": "/test/slots.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/slots /updateSlot Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/slots/updateSlot\")\n.expect(401);",
                  "err": {},
                  "uuid": "f4d489ff-132e-487b-95cb-92fd60be9286",
                  "parentUUID": "b723f2b3-2d48-46e9-82be-f98bc4ae4301",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is incorrect",
                  "fullTitle": "/api/slots /updateSlot Should respond 400 if one of inputs is incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/slots/updateSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"ahmed\":\"mon\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "78c3a48d-e782-456a-ba10-277930257f0a",
                  "parentUUID": "b723f2b3-2d48-46e9-82be-f98bc4ae4301",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 updated Successfully",
                  "fullTitle": "/api/slots /updateSlot Should respond 200 updated Successfully",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/slots/updateSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\":1,\n    \"day\":\"wed\",\n    \"start_time\":\"21:00\",\n    \"end_time\":\"22:30\",\n    \"slot_time\":\"30:00\",\n    \"available\":true\n    })\n.expect(200);\nexpect(res.body.data.day).to.equal(\"wed\");\nconst slotId = res.body.data.slot_id;\ndeleteSlot(slotId);",
                  "err": {},
                  "uuid": "deb10ca8-e946-4466-a7e5-cbe55ecdaa74",
                  "parentUUID": "b723f2b3-2d48-46e9-82be-f98bc4ae4301",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f4d489ff-132e-487b-95cb-92fd60be9286",
                "78c3a48d-e782-456a-ba10-277930257f0a",
                "deb10ca8-e946-4466-a7e5-cbe55ecdaa74"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "11aababf-52a3-412c-8f43-1b01e5588bb9",
              "title": "/getOpenSlots",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
              "file": "/test/slots.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/slots /getOpenSlots Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/slots/getOpenSlots\")\n.expect(401);",
                  "err": {},
                  "uuid": "32571e0b-a72b-45c6-84ed-dcd136b5c2b8",
                  "parentUUID": "11aababf-52a3-412c-8f43-1b01e5588bb9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/slots /getOpenSlots Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/slots/getOpenSlots\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "bd14bda9-976e-4522-af10-58ce4f3d7546",
                  "parentUUID": "11aababf-52a3-412c-8f43-1b01e5588bb9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got slots Successfully",
                  "fullTitle": "/api/slots /getOpenSlots Should respond 200 got slots Successfully",
                  "timedOut": false,
                  "duration": 86,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nconst userId = res.body.data.user_id;\n res = await request(server)\n.post(\"/api/slots/getOpenSlots\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\": 11,\n    \"searchIn\":30,\n    })\n.expect(200);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "c47c3a9b-cb25-40e2-96f0-2094dc4c9ca7",
                  "parentUUID": "11aababf-52a3-412c-8f43-1b01e5588bb9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "32571e0b-a72b-45c6-84ed-dcd136b5c2b8",
                "bd14bda9-976e-4522-af10-58ce4f3d7546",
                "c47c3a9b-cb25-40e2-96f0-2094dc4c9ca7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 90,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ebce3bd1-accd-4da1-9e4c-28a8e3556cad",
          "title": "/api/user",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
          "file": "/test/user.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/user \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "2d953ea1-4f85-47cb-818a-7c7c2585338b",
              "parentUUID": "ebce3bd1-accd-4da1-9e4c-28a8e3556cad",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/user \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "a94faa6f-deb1-468d-8e8d-d386afd6b705",
              "parentUUID": "ebce3bd1-accd-4da1-9e4c-28a8e3556cad",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "5be803cc-7976-4d16-8782-121a04017c94",
              "title": "/updateInfo",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/user /updateInfo Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\"phone_number\":\"3487\"})\n.expect(401);",
                  "err": {},
                  "uuid": "86a9e96b-6c32-4faa-8466-d8d770b3fe96",
                  "parentUUID": "5be803cc-7976-4d16-8782-121a04017c94",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 if field is nor allowed",
                  "fullTitle": "/api/user /updateInfo Should respond with 400 if field is nor allowed",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243311\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\"fb_token_id\":\"3487\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "7ca02237-4a67-420f-9048-293c7f17884f",
                  "parentUUID": "5be803cc-7976-4d16-8782-121a04017c94",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if successfully updated",
                  "fullTitle": "/api/user /updateInfo Should respond with 200 if successfully updated",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243311\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n}).expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243311\");\nconst token = genToken(\"01590243311\",1,\"user\");\n res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\n    \"phone_number\": \"12345\",\n    \"first_name\": \"ahmed\",\n    \"last_name\":\"mohammed\",\n    \"birth_date\": \"1999-03-22\",\n    \"weight\": 200,\n    \"height\": 300,\n    \"bmi\": 50,\n    \"gender\": \"male\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);\nexpect(res.body.data.phone_number).to.equal(\"12345\");\nexpect(res.body.data.first_name).to.equal(\"ahmed\");\nexpect(res.body.data.last_name).to.equal(\"mohammed\");\nexpect(res.body.data.birth_date).to.equal(\"1999-03-22\");\nexpect(res.body.data.weight).to.equal(200);\nexpect(res.body.data.height).to.equal(300);\nexpect(res.body.data.bmi).to.equal(50);\nexpect(res.body.data.gender).to.equal(\"male\");",
                  "err": {},
                  "uuid": "d2cc7b1e-6664-4606-8ebe-572a7067f898",
                  "parentUUID": "5be803cc-7976-4d16-8782-121a04017c94",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 403 if phone number is already registered",
                  "fullTitle": "/api/user /updateInfo Should respond with 403 if phone number is already registered",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243313\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n}).expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243313\");\nconst token = genToken(\"01590243313\",1,\"user\");\n res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\n    \"phone_number\": \"12345\",\n    \"first_name\": \"ahmed\",\n    \"last_name\":\"mohammed\",\n    \"birth_date\": \"1999-03-22\",\n    \"weight\": 200,\n    \"height\": 300,\n    \"bmi\": 50,\n    \"gender\": \"male\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteUser(\"01590243313\");\ndeleteUser(\"12345\");",
                  "err": {},
                  "uuid": "d85494e6-7f5a-47b4-a8d4-3681e75edefc",
                  "parentUUID": "5be803cc-7976-4d16-8782-121a04017c94",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "86a9e96b-6c32-4faa-8466-d8d770b3fe96",
                "7ca02237-4a67-420f-9048-293c7f17884f",
                "d2cc7b1e-6664-4606-8ebe-572a7067f898",
                "d85494e6-7f5a-47b4-a8d4-3681e75edefc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 49,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "59a177b1-77ad-4995-a6af-fcec2c980d93",
              "title": "/notBlocked",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/user /notBlocked Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/user/notBlocked\")\n.expect(401);",
                  "err": {},
                  "uuid": "ca554abe-974c-4501-bebc-ab8877201673",
                  "parentUUID": "59a177b1-77ad-4995-a6af-fcec2c980d93",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 403 if user is blocked",
                  "fullTitle": "/api/user /notBlocked should respond with 403 if user is blocked",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"01590243399\",1,\"user\");\nawait blockUser(\"01590243399\");\nres = await request(server)\n.get(\"/api/user/notBlocked\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "8f88cd1c-f47d-46d1-832d-72826b29c6f7",
                  "parentUUID": "59a177b1-77ad-4995-a6af-fcec2c980d93",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ca554abe-974c-4501-bebc-ab8877201673",
                "8f88cd1c-f47d-46d1-832d-72826b29c6f7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c5135436-df38-49cb-b07c-0f0bbdd446b3",
              "title": "/api/user/updateImage",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should responed with 200 if updated",
                  "fullTitle": "/api/user /api/user/updateImage Should responed with 200 if updated",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"01590243399\",1,\"user\");\nres = await request(server)\n.patch(\"/api/user/updateImage\")\n.set(\"Authorization\", `Bearer ${token}`)\n.set('Content-Type', 'application/x-www-form-urlencoded')\n.attach('file',path.resolve(__dirname, \"../logo.png\"))\n.expect(200);",
                  "err": {},
                  "uuid": "0171a2e1-eec7-46b8-8d6c-0a75ef2acf1a",
                  "parentUUID": "c5135436-df38-49cb-b07c-0f0bbdd446b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 403 if type not allowed",
                  "fullTitle": "/api/user /api/user/updateImage Should responed with 403 if type not allowed",
                  "timedOut": false,
                  "duration": 43,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/user/updateImage\")\n.set(\"Authorization\", `Bearer ${token}`)\n.set('Content-Type', 'application/x-www-form-urlencoded')\n.attach('file',path.resolve(__dirname, \"../udemy-accs.txt\"))\n.expect(403);",
                  "err": {},
                  "uuid": "6e50f53a-7146-46bc-809d-9d85b55ab025",
                  "parentUUID": "c5135436-df38-49cb-b07c-0f0bbdd446b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 401 not authorized",
                  "fullTitle": "/api/user /api/user/updateImage Should responed with 401 not authorized",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590241\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/user/updateImage\")\n.set(\"Authorization\", `Bearer ${token}`)\n.set('Content-Type', 'application/x-www-form-urlencoded')\n.attach('file',path.resolve(__dirname, \"../logo.png\"))\n.expect(401);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "93e12afe-bbeb-4a20-8e6b-71892e084e05",
                  "parentUUID": "c5135436-df38-49cb-b07c-0f0bbdd446b3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0171a2e1-eec7-46b8-8d6c-0a75ef2acf1a",
                "6e50f53a-7146-46bc-809d-9d85b55ab025",
                "93e12afe-bbeb-4a20-8e6b-71892e084e05"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 64,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e514ec0a-793c-430b-ac3a-0777668a905b",
              "title": "/getUser",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/user /getUser Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/user/getUser\")\n.expect(401);",
                  "err": {},
                  "uuid": "7ee17476-259c-4832-acb5-0333558d8710",
                  "parentUUID": "e514ec0a-793c-430b-ac3a-0777668a905b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 404 if user not found",
                  "fullTitle": "/api/user /getUser should respond with 404 if user not found",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/user/getUser\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({ \"phone_number\": \"9868956981256\", })\n.expect(404);",
                  "err": {},
                  "uuid": "257959d3-ad3c-4bd2-b76f-38110b82749c",
                  "parentUUID": "e514ec0a-793c-430b-ac3a-0777668a905b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if got user successfully",
                  "fullTitle": "/api/user /getUser should respond with 200 if got user successfully",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"015902433399\",1,\"user\");\nres = await request(server)\n.post(\"/api/user/getUser\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({ \"phone_number\": \"01590243399\", })\n.expect(200);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "b2fdf3ac-cc82-4592-b2f5-c469328cadaa",
                  "parentUUID": "e514ec0a-793c-430b-ac3a-0777668a905b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7ee17476-259c-4832-acb5-0333558d8710",
                "257959d3-ad3c-4bd2-b76f-38110b82749c",
                "b2fdf3ac-cc82-4592-b2f5-c469328cadaa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}
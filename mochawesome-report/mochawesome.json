{
  "stats": {
    "suites": 43,
    "tests": 104,
    "passes": 104,
    "pending": 0,
    "failures": 0,
    "start": "2020-06-01T15:16:20.749Z",
    "end": "2020-06-01T15:16:22.808Z",
    "duration": 2059,
    "testsRegistered": 104,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5d6bb014-387d-483a-befc-3bfb3ed4bc79",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a2881f7b-21d0-489b-afb4-4d65950513de",
          "title": "/api/appointments",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
          "file": "/test/appointments.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/appointments \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "1515af26-1baf-4211-859d-fc13b3bac41a",
              "parentUUID": "a2881f7b-21d0-489b-afb4-4d65950513de",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/appointments \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "e9e1823a-de4d-48d6-9b0f-fe13497f6bd5",
              "parentUUID": "a2881f7b-21d0-489b-afb4-4d65950513de",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "a9acc467-5920-400a-a488-69db456aa011",
              "title": "/addAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /addAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "2e4d9e0d-3e7e-4886-92e6-8dfa441128c4",
                  "parentUUID": "a9acc467-5920-400a-a488-69db456aa011",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /addAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "498b4ad7-6735-4dc3-bc6c-335ee068a335",
                  "parentUUID": "a9acc467-5920-400a-a488-69db456aa011",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 addedd Successfully",
                  "fullTitle": "/api/appointments /addAppointment Should respond 200 addedd Successfully",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\ndeleteUser(\"01590243399\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "11044400-3664-4dc1-b7ea-7bbe23e33448",
                  "parentUUID": "a9acc467-5920-400a-a488-69db456aa011",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2e4d9e0d-3e7e-4886-92e6-8dfa441128c4",
                "498b4ad7-6735-4dc3-bc6c-335ee068a335",
                "11044400-3664-4dc1-b7ea-7bbe23e33448"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 67,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "faacf3e1-9838-45b9-be28-edfefda03288",
              "title": "/addConfirmedAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /addConfirmedAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/addConfirmedAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "60e08610-4ddd-429b-af53-9a58d6db90e9",
                  "parentUUID": "faacf3e1-9838-45b9-be28-edfefda03288",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /addConfirmedAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addConfirmedAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "6b11af7a-5d24-41d3-8ee2-2852184da4be",
                  "parentUUID": "faacf3e1-9838-45b9-be28-edfefda03288",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 addedd Successfully",
                  "fullTitle": "/api/appointments /addConfirmedAppointment Should respond 200 addedd Successfully",
                  "timedOut": false,
                  "duration": 22,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nconst userId = res.body.data.user_id;\n res = await request(server)\n.post(\"/api/appointments/addConfirmedAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":userId,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nexpect(res.body.data.appointment_status).to.equal(\"upcoming\");\nconst appID = res.body.data.appointment_id;\ndeleteUser(\"01590243399\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "397a6b8f-3e89-4251-8551-cfc1f1cc4eec",
                  "parentUUID": "faacf3e1-9838-45b9-be28-edfefda03288",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "60e08610-4ddd-429b-af53-9a58d6db90e9",
                "6b11af7a-5d24-41d3-8ee2-2852184da4be",
                "397a6b8f-3e89-4251-8551-cfc1f1cc4eec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 31,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a484d190-03db-4ff8-a1ce-d1a379bfa330",
              "title": "/getUserApps",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /getUserApps Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/getUserApps\")\n.expect(401);",
                  "err": {},
                  "uuid": "5bc6463d-3911-4439-bf68-aeba7d4d25cc",
                  "parentUUID": "a484d190-03db-4ff8-a1ce-d1a379bfa330",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /getUserApps Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/getUserApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"user_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "23e5b9b5-e59c-48e3-83ce-bd6ab65d87ee",
                  "parentUUID": "a484d190-03db-4ff8-a1ce-d1a379bfa330",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /getUserApps Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.post(\"/api/appointments/getUserApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"user_id\":1,\n    })\n.expect(200);\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "e613f468-139e-4927-938b-623364e6ea31",
                  "parentUUID": "a484d190-03db-4ff8-a1ce-d1a379bfa330",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5bc6463d-3911-4439-bf68-aeba7d4d25cc",
                "23e5b9b5-e59c-48e3-83ce-bd6ab65d87ee",
                "e613f468-139e-4927-938b-623364e6ea31"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 25,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8b9ad5ce-7037-4d38-89e4-d959b8eeaa63",
              "title": "/finishedAppointments",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /finishedAppointments Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/appointments/finishedAppointments\")\n.expect(401);",
                  "err": {},
                  "uuid": "ca2078d5-99c3-4058-9a65-54ce2d5e8ff8",
                  "parentUUID": "8b9ad5ce-7037-4d38-89e4-d959b8eeaa63",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /finishedAppointments Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.get(\"/api/appointments/finishedAppointments\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);",
                  "err": {},
                  "uuid": "ad4e338a-ab86-4d68-b223-75f033143ee5",
                  "parentUUID": "8b9ad5ce-7037-4d38-89e4-d959b8eeaa63",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ca2078d5-99c3-4058-9a65-54ce2d5e8ff8",
                "ad4e338a-ab86-4d68-b223-75f033143ee5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b5b2acb2-0246-4a30-9a87-318750e7ef96",
              "title": "/upcomingAppointments",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /upcomingAppointments Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/appointments/upcomingAppointments\")\n.expect(401);",
                  "err": {},
                  "uuid": "1727dbd0-068a-41ed-9c17-84a5a6396e8d",
                  "parentUUID": "b5b2acb2-0246-4a30-9a87-318750e7ef96",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /upcomingAppointments Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.get(\"/api/appointments/upcomingAppointments\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);",
                  "err": {},
                  "uuid": "83357653-2ce3-442a-82d9-78072008cdf2",
                  "parentUUID": "b5b2acb2-0246-4a30-9a87-318750e7ef96",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1727dbd0-068a-41ed-9c17-84a5a6396e8d",
                "83357653-2ce3-442a-82d9-78072008cdf2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f86021ca-ae55-4f04-9d24-9c4bbad19215",
              "title": "/getDocApps",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /getDocApps Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/getDocApps\")\n.expect(401);",
                  "err": {},
                  "uuid": "5aa8368f-3492-415a-b41e-48233d70fbdf",
                  "parentUUID": "f86021ca-ae55-4f04-9d24-9c4bbad19215",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /getDocApps Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/getDocApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"doctor_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "9dc8af12-b302-42bb-94f2-5ced55756afe",
                  "parentUUID": "f86021ca-ae55-4f04-9d24-9c4bbad19215",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 got Successfully",
                  "fullTitle": "/api/appointments /getDocApps Should respond 200 got Successfully",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.post(\"/api/appointments/getDocApps\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":1,\n    })\n.expect(200);\ndeleteUser(\"01595543366\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "8803434a-d227-4c01-b526-c48262b08b53",
                  "parentUUID": "f86021ca-ae55-4f04-9d24-9c4bbad19215",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5aa8368f-3492-415a-b41e-48233d70fbdf",
                "9dc8af12-b302-42bb-94f2-5ced55756afe",
                "8803434a-d227-4c01-b526-c48262b08b53"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "94bc6bfe-df0e-4474-b0e2-ccf35bbe7139",
              "title": "/cancelAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /cancelAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/appointments/cancelAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "0892bc88-e2d3-4819-8227-26b68431ff05",
                  "parentUUID": "94bc6bfe-df0e-4474-b0e2-ccf35bbe7139",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /cancelAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/appointments/cancelAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"aapointment_id\":\"djdkj\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "41d2b402-0824-47c6-a987-b4abdda9f8d8",
                  "parentUUID": "94bc6bfe-df0e-4474-b0e2-ccf35bbe7139",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 updated Successfully",
                  "fullTitle": "/api/appointments /cancelAppointment Should respond 200 updated Successfully",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.patch(\"/api/appointments/cancelAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"appointment_id\":appID,\n    })\n.expect(200);\nexpect(res.body.data.appointment_status).to.equal(\"canceled\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "0eb27aad-d927-4152-bfb9-44060abb0488",
                  "parentUUID": "94bc6bfe-df0e-4474-b0e2-ccf35bbe7139",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0892bc88-e2d3-4819-8227-26b68431ff05",
                "41d2b402-0824-47c6-a987-b4abdda9f8d8",
                "0eb27aad-d927-4152-bfb9-44060abb0488"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7dbe4ee1-8555-4480-b749-3affb8d81a5c",
              "title": "/confirmAppointment",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /confirmAppointment Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/appointments/confirmAppointment\")\n.expect(401);",
                  "err": {},
                  "uuid": "95103374-77cc-4c4a-9ff2-7ccb183c85b6",
                  "parentUUID": "7dbe4ee1-8555-4480-b749-3affb8d81a5c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /confirmAppointment Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/appointments/confirmAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"aapointment_id\":\"djdkj\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "e750c8ad-50da-47c7-a00f-6dbcf23f3121",
                  "parentUUID": "7dbe4ee1-8555-4480-b749-3affb8d81a5c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 updated Successfully",
                  "fullTitle": "/api/appointments /confirmAppointment Should respond 200 updated Successfully",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/appointments/addAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\": 1,\n    \"date\":\"2020-05-28\"\n    })\n.expect(201);\nconst appID = res.body.data.appointment_id;\nres = await request(server)\n.patch(\"/api/appointments/confirmAppointment\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"appointment_id\":appID,\n    })\n.expect(200);\nexpect(res.body.data.appointment_status).to.equal(\"upcoming\");\ndeleteAppointment(appID);",
                  "err": {},
                  "uuid": "b0424b73-5262-4979-ac77-142f987a41ce",
                  "parentUUID": "7dbe4ee1-8555-4480-b749-3affb8d81a5c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "95103374-77cc-4c4a-9ff2-7ccb183c85b6",
                "e750c8ad-50da-47c7-a00f-6dbcf23f3121",
                "b0424b73-5262-4979-ac77-142f987a41ce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0ee2273b-3906-4822-a9d1-b646aee527f7",
              "title": "/docAppsByDate",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/appointments.test.js",
              "file": "/test/appointments.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/appointments /docAppsByDate Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/appointments/docAppsByDate\")\n.expect(401);",
                  "err": {},
                  "uuid": "3dca9a53-b815-4394-a9c8-e671491950e8",
                  "parentUUID": "0ee2273b-3906-4822-a9d1-b646aee527f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/appointments /docAppsByDate Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"doctor\");\nlet res = await request(server)\n.post(\"/api/appointments/docAppsByDate\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"aapointment_id\":\"djdkj\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "7b2085ee-0b3a-424d-a0a2-2f0fe43de724",
                  "parentUUID": "0ee2273b-3906-4822-a9d1-b646aee527f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if we got the apps successfully",
                  "fullTitle": "/api/appointments /docAppsByDate Should respond with 200 if we got the apps successfully",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken('01090243795',1,\"doctor\");\nlet res = await request(server)\n.post(\"/api/appointments/docAppsByDate\")\n.set('Authorization',`Bearer ${token}`)\n.send({\n    \"date\":'2020-03-20'\n})\n.expect(200)\n// expect(res.body.data[0].date).to.equal(\"2020-03-20\");",
                  "err": {},
                  "uuid": "e46663d7-fd0f-43f6-94c3-f37ed998f596",
                  "parentUUID": "0ee2273b-3906-4822-a9d1-b646aee527f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3dca9a53-b815-4394-a9c8-e671491950e8",
                "7b2085ee-0b3a-424d-a0a2-2f0fe43de724",
                "e46663d7-fd0f-43f6-94c3-f37ed998f596"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f320be45-c857-43f3-b2c2-7d846b9e1a68",
          "title": "/api/auth",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
          "file": "/test/auth.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/auth \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "9597872a-1650-4343-b7d0-7b0e78487e17",
              "parentUUID": "f320be45-c857-43f3-b2c2-7d846b9e1a68",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/auth \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "c27dd5ae-a60c-4762-af36-06b57ba2f963",
              "parentUUID": "f320be45-c857-43f3-b2c2-7d846b9e1a68",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "7bd40bd4-3c3c-4de0-8b22-2afd8be4d0b1",
              "title": "/signup",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if one of inputs is incorrect or missing (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /signup should respond with 400 if one of inputs is incorrect or missing (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\").expect(400);  \nres = await request(server)\n.post(\"/api/auth/signup\")\n.send({password:\"fawzi\"})\n.expect(400);",
                  "err": {},
                  "uuid": "188fc115-70a8-4abb-a755-e83ad8a35f8e",
                  "parentUUID": "7bd40bd4-3c3c-4de0-8b22-2afd8be4d0b1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 201 if user succefully registered",
                  "fullTitle": "/api/auth /signup should respond with 201 if user succefully registered",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243399\");",
                  "err": {},
                  "uuid": "f33b8b57-88a1-4b0c-838b-f6f79ce0ac6e",
                  "parentUUID": "7bd40bd4-3c3c-4de0-8b22-2afd8be4d0b1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 403 if phone_number is already registered",
                  "fullTitle": "/api/auth /signup should respond with 403 if phone_number is already registered",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(403);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "3d486288-c70f-473d-9393-d73bc929a4a0",
                  "parentUUID": "7bd40bd4-3c3c-4de0-8b22-2afd8be4d0b1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "188fc115-70a8-4abb-a755-e83ad8a35f8e",
                "f33b8b57-88a1-4b0c-838b-f6f79ce0ac6e",
                "3d486288-c70f-473d-9393-d73bc929a4a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "66b99cd4-8563-4a4a-a401-9beae4fb7bdb",
              "title": "/signin",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /signin should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signin\")\n.expect(400);",
                  "err": {},
                  "uuid": "cbc996c6-a11d-4103-92d9-4d28af851711",
                  "parentUUID": "66b99cd4-8563-4a4a-a401-9beae4fb7bdb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 when phone number notfound `backend side`",
                  "fullTitle": "/api/auth /signin should respond with 401 when phone number notfound `backend side`",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n .post(\"/api/auth/signin\")\n .send({\"phone_number\":\"01590243311\"})\n .expect(401);",
                  "err": {},
                  "uuid": "65687c56-6027-4520-8c0a-60c7dfad498f",
                  "parentUUID": "66b99cd4-8563-4a4a-a401-9beae4fb7bdb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if user loged in successfully",
                  "fullTitle": "/api/auth /signin should respond with 200 if user loged in successfully",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243311\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n}).expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243311\");\nres = await request(server)\n.post(\"/api/auth/signin\")\n.send({\"phone_number\":\"01590243311\"})\n.expect(200);\ndeleteUser(\"01590243311\");",
                  "err": {},
                  "uuid": "542620e0-2472-4320-bac3-b9e8ac637fab",
                  "parentUUID": "66b99cd4-8563-4a4a-a401-9beae4fb7bdb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cbc996c6-a11d-4103-92d9-4d28af851711",
                "65687c56-6027-4520-8c0a-60c7dfad498f",
                "542620e0-2472-4320-bac3-b9e8ac637fab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2d21f220-d255-4b4a-8025-f32936454322",
              "title": "/updateFirebaseToken",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /updateFirebaseToken Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"notInTheSchema\":\"haka\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "1decb6ed-bd2f-4781-a07a-668570497175",
                  "parentUUID": "2d21f220-d255-4b4a-8025-f32936454322",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if phone number not found `backend side`",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 401 if phone number not found `backend side`",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243788\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"djkdjkdjk\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(401);",
                  "err": {},
                  "uuid": "815f087f-049f-43bf-9fc0-e7811507fe38",
                  "parentUUID": "2d21f220-d255-4b4a-8025-f32936454322",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if we updated the token_id successfully",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 200 if we updated the token_id successfully",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243388\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\"\n}).expect(201);\nconst token = genToken(\"01590243388\",1,\"user\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);\nexpect(res.body.data.updated_token).to.equal(\"123456789elhamdullah\");\ndeleteUser(\"01590243388\");",
                  "err": {},
                  "uuid": "c79559d6-119b-4f10-a00b-0fde55d4c7a0",
                  "parentUUID": "2d21f220-d255-4b4a-8025-f32936454322",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 403 if user is blocked",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 403 if user is blocked",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"01590243399\",1,\"user\");\nawait blockUser(\"01590243399\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "739ff205-98d9-4531-89a7-f8ec65fbd719",
                  "parentUUID": "2d21f220-d255-4b4a-8025-f32936454322",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if user is not authorized ",
                  "fullTitle": "/api/auth /updateFirebaseToken should respond with 401 if user is not authorized ",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243391\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\n// const token = genToken(\"01590243399\",\"user\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n// .set(\"Authorization\", `Bearer ${token}`)\n.expect(401);\ndeleteUser(\"01590243391\");",
                  "err": {},
                  "uuid": "2ea56ff1-5460-467d-a57b-267bc0eaad18",
                  "parentUUID": "2d21f220-d255-4b4a-8025-f32936454322",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1decb6ed-bd2f-4781-a07a-668570497175",
                "815f087f-049f-43bf-9fc0-e7811507fe38",
                "c79559d6-119b-4f10-a00b-0fde55d4c7a0",
                "739ff205-98d9-4531-89a7-f8ec65fbd719",
                "2ea56ff1-5460-467d-a57b-267bc0eaad18"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 44,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "bb18726c-8abb-464b-9c57-22ea06324995",
              "title": "/signDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if any inputs are incorrect or missed (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /signDoctor should respond with 400 if any inputs are incorrect or missed (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signDoctor\")\n.send({phone_number:\"02903\"})\n.expect(400);",
                  "err": {},
                  "uuid": "be3d3e35-dfa0-4b94-927e-34ad8d3c71ce",
                  "parentUUID": "bb18726c-8abb-464b-9c57-22ea06324995",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if phone number or password are incorrect `backend side`",
                  "fullTitle": "/api/auth /signDoctor should respond with 401 if phone number or password are incorrect `backend side`",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090243795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\":\"200\"\n})\n.expect(201);\nres = await request(server)\n.post(\"/api/auth/signDoctor\")\n.send({phone_number:\"01090243794\",password:\"01288\"})\n.expect(401);\ndeleteDoctor(\"01090243795\");",
                  "err": {},
                  "uuid": "f4fb2c41-d683-4131-8f7b-ce812f5bfab9",
                  "parentUUID": "bb18726c-8abb-464b-9c57-22ea06324995",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "be3d3e35-dfa0-4b94-927e-34ad8d3c71ce",
                "f4fb2c41-d683-4131-8f7b-ce812f5bfab9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f90be4e1-cf28-472b-b3a6-6b4213f2b94d",
              "title": "/updateDoctorFirebaseToken",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/auth.test.js",
              "file": "/test/auth.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken Should respond with 400 if one of inpus is missed (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"doctor\");\nlet res = await request(server)\n.patch(\"/api/auth/updateDoctorFirebaseToken\")\n.send({\"notInTheSchema\":\"haka\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "2372091f-a5e5-4a22-909b-894b72094034",
                  "parentUUID": "f90be4e1-cf28-472b-b3a6-6b4213f2b94d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if phone number not found `backend side`",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken should respond with 401 if phone number not found `backend side`",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243788\",1,\"doctor\");\nlet res = await request(server)\n.patch(\"/api/auth/updateDoctorFirebaseToken\")\n.send({\"new_token\":\"djkdjkdjk\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(401);",
                  "err": {},
                  "uuid": "df94e296-69d5-489a-b0c0-7cac2338cf56",
                  "parentUUID": "f90be4e1-cf28-472b-b3a6-6b4213f2b94d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if we updated the Doctor token_id successfully",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken should respond with 200 if we updated the Doctor token_id successfully",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243788\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090243795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\":\"200\"\n})\n.expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01090243795\");\nconst token2 = genToken(\"01090243795\",1,\"doctor\");\nres = await request(server)\n.patch(\"/api/auth/updateDoctorFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n.set(\"Authorization\", `Bearer ${token2}`)\n.expect(200);\nexpect(res.body.data.updated_token).to.equal(\"123456789elhamdullah\");\ndeleteDoctor(\"01090243795\");",
                  "err": {},
                  "uuid": "439df73c-2ac8-4616-8d13-3860453fc2bb",
                  "parentUUID": "f90be4e1-cf28-472b-b3a6-6b4213f2b94d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 if Doctor is not authorized ",
                  "fullTitle": "/api/auth /updateDoctorFirebaseToken should respond with 401 if Doctor is not authorized ",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01010243795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\":\"200\"\n})\n.expect(201);\n// const token = genToken(\"01590243399\",\"doctor\");\nres = await request(server)\n.patch(\"/api/auth/updateFirebaseToken\")\n.send({\"new_token\":\"123456789elhamdullah\"})\n// .set(\"Authorization\", `Bearer ${token}`)\n.expect(401);\ndeleteDoctor(\"01010243795\");",
                  "err": {},
                  "uuid": "89620b54-4f97-469e-8d83-afbfffb3a1cd",
                  "parentUUID": "f90be4e1-cf28-472b-b3a6-6b4213f2b94d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2372091f-a5e5-4a22-909b-894b72094034",
                "df94e296-69d5-489a-b0c0-7cac2338cf56",
                "439df73c-2ac8-4616-8d13-3860453fc2bb",
                "89620b54-4f97-469e-8d83-afbfffb3a1cd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 28,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "846687a5-3fb4-40ba-9221-94371920d5cc",
          "title": "/api/categories",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/categories.js",
          "file": "/test/categories.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/categories \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "a3477b44-4d1a-4a0a-b2a9-602b12bff156",
              "parentUUID": "846687a5-3fb4-40ba-9221-94371920d5cc",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/categories \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "f280fdad-1cb9-4802-b2a0-69acf07bf645",
              "parentUUID": "846687a5-3fb4-40ba-9221-94371920d5cc",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "a5e72ab4-498b-4b14-aea5-c721e22989bd",
              "title": "/getCategories",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/categories.js",
              "file": "/test/categories.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/categories /getCategories Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/categories/getCategories\")\n.expect(401);",
                  "err": {},
                  "uuid": "9cd8b5a2-be9c-4542-9b26-3160f72ad7df",
                  "parentUUID": "a5e72ab4-498b-4b14-aea5-c721e22989bd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 if got categories successfully",
                  "fullTitle": "/api/categories /getCategories Should respond 200 if got categories successfully",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.get(\"/api/categories/getCategories\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);",
                  "err": {},
                  "uuid": "8f9bf009-323d-4104-b540-427d6043d734",
                  "parentUUID": "a5e72ab4-498b-4b14-aea5-c721e22989bd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9cd8b5a2-be9c-4542-9b26-3160f72ad7df",
                "8f9bf009-323d-4104-b540-427d6043d734"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "37071738-53b9-41dc-8e71-6fbbe784ad4b",
          "title": "/api/controlPanel",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
          "file": "/test/controlPanel.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/controlPanel \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "6162f7e6-571e-47df-a175-49752c219513",
              "parentUUID": "37071738-53b9-41dc-8e71-6fbbe784ad4b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/controlPanel \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "4b8871f1-a089-4cab-875b-cc55e75b6919",
              "parentUUID": "37071738-53b9-41dc-8e71-6fbbe784ad4b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "7a2832ac-f9e5-42bd-a529-1b06f7e26c30",
              "title": "/addingDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION)",
                  "fullTitle": "/api/controlPanel /addingDoctor Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nconst res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(400);",
                  "err": {},
                  "uuid": "eb8f8d74-0261-4251-b5e6-217586922dc3",
                  "parentUUID": "7a2832ac-f9e5-42bd-a529-1b06f7e26c30",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 201 if doctor created successfully",
                  "fullTitle": "/api/controlPanel /addingDoctor Should respond with 201 if doctor created successfully",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"11090243799\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"11090243799\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"11090243799\");\ndeleteDoctor(\"11090243799\");",
                  "err": {},
                  "uuid": "9ea7b78f-d363-4bd9-9dfb-e262de86d975",
                  "parentUUID": "7a2832ac-f9e5-42bd-a529-1b06f7e26c30",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 403 if the phone number is already registered",
                  "fullTitle": "/api/controlPanel /addingDoctor Should respond with 403 if the phone number is already registered",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243798\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243798\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01090243798\");\nres = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243798\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(403);",
                  "err": {},
                  "uuid": "50dcd685-34eb-4726-91c7-f6067209c805",
                  "parentUUID": "7a2832ac-f9e5-42bd-a529-1b06f7e26c30",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eb8f8d74-0261-4251-b5e6-217586922dc3",
                "9ea7b78f-d363-4bd9-9dfb-e262de86d975",
                "50dcd685-34eb-4726-91c7-f6067209c805"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6dbf14f3-7cc8-4335-b9fd-348deb905b8c",
              "title": "/addingAdmin",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION",
                  "fullTitle": "/api/controlPanel /addingAdmin Should respond with 400 if one of inpus is missed or incorrect (SCHEMA VALIDATION",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ name: \"fawzi\" })\n  .expect(400);",
                  "err": {},
                  "uuid": "ecb50a21-fb6f-4f57-85e7-2182a8140e92",
                  "parentUUID": "6dbf14f3-7cc8-4335-b9fd-348deb905b8c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 201 if created successfully",
                  "fullTitle": "/api/controlPanel /addingAdmin Should respond with 201 if created successfully",
                  "timedOut": false,
                  "duration": 266,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"11090243799\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"11090243799\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"11090243799\");\ndeleteAdmin(\"11090243799\");",
                  "err": {},
                  "uuid": "af554a7e-2a06-453c-bba4-5a97f1746f5f",
                  "parentUUID": "6dbf14f3-7cc8-4335-b9fd-348deb905b8c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should Respond with 403 if phone number is already Registered",
                  "fullTitle": "/api/controlPanel /addingAdmin Should Respond with 403 if phone number is already Registered",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243795\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(403);\ndeleteAdmin(\"01090243795\");",
                  "err": {},
                  "uuid": "4ea83da5-896c-494b-a45f-cfe72d59abdd",
                  "parentUUID": "6dbf14f3-7cc8-4335-b9fd-348deb905b8c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ecb50a21-fb6f-4f57-85e7-2182a8140e92",
                "af554a7e-2a06-453c-bba4-5a97f1746f5f",
                "4ea83da5-896c-494b-a45f-cfe72d59abdd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 274,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b46679c4-2def-46a7-a515-17ab3b8ec491",
              "title": "/signAdmin",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "fullTitle": "/api/controlPanel /signAdmin should respond with 400 if input are missing (SCHEMA VALIDATION)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .post(\"/api/controlPanel/signAdmin\")\n  .expect(400);",
                  "err": {},
                  "uuid": "c7b3d5dc-83d8-4edd-857f-5fec4c185b72",
                  "parentUUID": "b46679c4-2def-46a7-a515-17ab3b8ec491",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 401 when phone number is not found `backend side`",
                  "fullTitle": "/api/controlPanel /signAdmin should respond with 401 when phone number is not found `backend side`",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .post(\"/api/controlPanel/signAdmin\")\n  .send({ phone_number: \"01090243795\", password: \"testest\" })\n  .expect(401);",
                  "err": {},
                  "uuid": "ea75360f-237c-4146-970e-86ba90058a4d",
                  "parentUUID": "b46679c4-2def-46a7-a515-17ab3b8ec491",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if admin loged in successfully",
                  "fullTitle": "/api/controlPanel /signAdmin should respond with 200 if admin loged in successfully",
                  "timedOut": false,
                  "duration": 529,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243795\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01090243795\");\nres = await request(server)\n  .post(\"/api/controlPanel/signAdmin\")\n  .send({ phone_number: \"01090243795\", password: \"testtest\" })\n  .expect(200);\nexpect(res.body.data.phone_number).to.equal(\"01090243795\");\ndeleteAdmin(\"01090243795\");",
                  "err": {},
                  "uuid": "577dde75-4cde-43e1-9a86-2e6eb7485514",
                  "parentUUID": "b46679c4-2def-46a7-a515-17ab3b8ec491",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c7b3d5dc-83d8-4edd-857f-5fec4c185b72",
                "ea75360f-237c-4146-970e-86ba90058a4d",
                "577dde75-4cde-43e1-9a86-2e6eb7485514"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 533,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "175f30c9-1d31-4ebd-9158-f6f512c107df",
              "title": "/checkAdminByToken",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if admin is not authorized",
                  "fullTitle": "/api/controlPanel /checkAdminByToken Should respond with 401 if admin is not authorized",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109024379785\",1,\"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/checkAdminByToken\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(401);",
                  "err": {},
                  "uuid": "c05ff5bd-6834-4395-9645-75a226b075b1",
                  "parentUUID": "175f30c9-1d31-4ebd-9158-f6f512c107df",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if token is valid and referanced to admin",
                  "fullTitle": "/api/controlPanel /checkAdminByToken Should respond with 200 if token is valid and referanced to admin",
                  "timedOut": false,
                  "duration": 264,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addAdmin\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"01090243795\",\n    password: \"testtest\",\n    name: \"Fawzi E. Abdulfattah\",\n    role: \"admin\",\n  })\n  .expect(201);\nres = await request(server)\n  .post(\"/api/controlPanel/checkAdminByToken\")\n  .send({})\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(200);\ndeleteAdmin(\"01090243795\");",
                  "err": {},
                  "uuid": "33d93458-d24a-4b71-9d82-169d7f8343e0",
                  "parentUUID": "175f30c9-1d31-4ebd-9158-f6f512c107df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c05ff5bd-6834-4395-9645-75a226b075b1",
                "33d93458-d24a-4b71-9d82-169d7f8343e0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 267,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a8a6b9c7-7bd7-44a9-a13a-3bc5cf016037",
              "title": "/addImage",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should responed with 201 if uploaded",
                  "fullTitle": "/api/controlPanel /addImage Should responed with 201 if uploaded",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addImage\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n  .attach(\"file\", path.resolve(__dirname, \"../logo.png\"))\n  .expect(201);",
                  "err": {},
                  "uuid": "7e5d924d-5ff2-454b-a95b-f41438497ea5",
                  "parentUUID": "a8a6b9c7-7bd7-44a9-a13a-3bc5cf016037",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 403 if type not allowed",
                  "fullTitle": "/api/controlPanel /addImage Should responed with 403 if type not allowed",
                  "timedOut": false,
                  "duration": 49,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addImage\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n  .attach(\"file\", path.resolve(__dirname, \"../udemy-accs.txt\"))\n  .expect(403);",
                  "err": {},
                  "uuid": "024be8bf-a31e-4af1-a2f5-7d38a8eff503",
                  "parentUUID": "a8a6b9c7-7bd7-44a9-a13a-3bc5cf016037",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7e5d924d-5ff2-454b-a95b-f41438497ea5",
                "024be8bf-a31e-4af1-a2f5-7d38a8eff503"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 66,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5aa377a9-7ef8-4535-bf97-3d03c50ca478",
              "title": "/getCategories",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /getCategories Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .expect(401);",
                  "err": {},
                  "uuid": "6f0e6218-c870-4bc6-b79b-41564f6e3511",
                  "parentUUID": "5aa377a9-7ef8-4535-bf97-3d03c50ca478",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got categories successfully",
                  "fullTitle": "/api/controlPanel /getCategories Should respond with 200 if got categories successfully",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(200);",
                  "err": {},
                  "uuid": "2e3329af-e3d1-4623-b0a8-34b2cd25b16a",
                  "parentUUID": "5aa377a9-7ef8-4535-bf97-3d03c50ca478",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6f0e6218-c870-4bc6-b79b-41564f6e3511",
                "2e3329af-e3d1-4623-b0a8-34b2cd25b16a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9b6b4cc1-e0df-48d2-85ba-d8483f8e97af",
              "title": "/getDoctors",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /getDoctors Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .expect(401);",
                  "err": {},
                  "uuid": "67c72da6-9b4b-4cbd-9c56-472c015eeea4",
                  "parentUUID": "9b6b4cc1-e0df-48d2-85ba-d8483f8e97af",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got categories successfully",
                  "fullTitle": "/api/controlPanel /getDoctors Should respond with 200 if got categories successfully",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .get(\"/api/controlPanel/getDoctors\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .expect(200);",
                  "err": {},
                  "uuid": "426507e7-4c16-4893-bb70-c15b64565788",
                  "parentUUID": "9b6b4cc1-e0df-48d2-85ba-d8483f8e97af",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "67c72da6-9b4b-4cbd-9c56-472c015eeea4",
                "426507e7-4c16-4893-bb70-c15b64565788"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6a6127be-beaf-4885-b38f-d5572f996931",
              "title": "/deleteDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /deleteDoctor Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .get(\"/api/controlPanel/getCategories\")\n  .expect(401);",
                  "err": {},
                  "uuid": "6d50f890-f901-44f3-8dce-a1293949c99a",
                  "parentUUID": "6a6127be-beaf-4885-b38f-d5572f996931",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 404 if doctor not found",
                  "fullTitle": "/api/controlPanel /deleteDoctor Should respond with 404 if doctor not found",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .delete(\"/api/controlPanel/deleteDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"0109024371111212129511113\"})\n  .expect(404);",
                  "err": {},
                  "uuid": "19998078-ffd3-49b4-a93f-cfb80e0e1a41",
                  "parentUUID": "6a6127be-beaf-4885-b38f-d5572f996931",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if doctor deleted successfully",
                  "fullTitle": "/api/controlPanel /deleteDoctor Should respond with 200 if doctor deleted successfully",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .delete(\"/api/controlPanel/deleteDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"01090243798\"}) // this tee number which registered above\n  .expect(200);",
                  "err": {},
                  "uuid": "c2743bc8-a705-4b6a-ab73-6d68db04f8cf",
                  "parentUUID": "6a6127be-beaf-4885-b38f-d5572f996931",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6d50f890-f901-44f3-8dce-a1293949c99a",
                "19998078-ffd3-49b4-a93f-cfb80e0e1a41",
                "c2743bc8-a705-4b6a-ab73-6d68db04f8cf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5b607690-a4d7-4c54-a1a2-3540976ae345",
              "title": "/toggleBlock",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /toggleBlock Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .patch(\"/api/controlPanel/toggleBlock\")\n  .expect(401);",
                  "err": {},
                  "uuid": "4f8f5989-0056-4468-b190-727fb9a80770",
                  "parentUUID": "5b607690-a4d7-4c54-a1a2-3540976ae345",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 404 if user not found",
                  "fullTitle": "/api/controlPanel /toggleBlock Should respond with 404 if user not found",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .patch(\"/api/controlPanel/toggleBlock\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"0109024371111212129511113\"})\n  .expect(404);",
                  "err": {},
                  "uuid": "0a5d08ba-a820-45df-9c0b-ff1e52fbfec7",
                  "parentUUID": "5b607690-a4d7-4c54-a1a2-3540976ae345",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if toggle user's block successfully",
                  "fullTitle": "/api/controlPanel /toggleBlock Should respond with 200 if toggle user's block successfully",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"015902433199\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nconst token = genToken(\"01090243795\",1, \"admin\");\nres = await request(server)\n  .patch(\"/api/controlPanel/toggleBlock\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ phone_number: \"015902433199\"})\n  .expect(200);\n  deleteUser(\"015902433199\");",
                  "err": {},
                  "uuid": "19d9dd6e-aabb-47cf-af64-6123a0a102a6",
                  "parentUUID": "5b607690-a4d7-4c54-a1a2-3540976ae345",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f8f5989-0056-4468-b190-727fb9a80770",
                "0a5d08ba-a820-45df-9c0b-ff1e52fbfec7",
                "19d9dd6e-aabb-47cf-af64-6123a0a102a6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f895162d-4c60-4e99-ba80-4e8e8671b728",
              "title": "/getDoctorSlots",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/controlPanel.test.js",
              "file": "/test/controlPanel.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/controlPanel /getDoctorSlots Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n  .post(\"/api/controlPanel/getDoctorSlots\")\n  .expect(401);",
                  "err": {},
                  "uuid": "550cf2d3-623a-4a79-9c12-9ad5a509e370",
                  "parentUUID": "f895162d-4c60-4e99-ba80-4e8e8671b728",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 doctor_id is missing or incorrect",
                  "fullTitle": "/api/controlPanel /getDoctorSlots Should respond with 400 doctor_id is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/getDoctorSlots\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ doctor_id: \"ahmed\"})\n  .expect(400);",
                  "err": {},
                  "uuid": "dfb02431-d38e-4a9e-b7c8-899adf5162a4",
                  "parentUUID": "f895162d-4c60-4e99-ba80-4e8e8671b728",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got doctor's slots successfully",
                  "fullTitle": "/api/controlPanel /getDoctorSlots Should respond with 200 if got doctor's slots successfully",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/getDoctorSlots\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({ doctor_id: 11})\n  .expect(200);",
                  "err": {},
                  "uuid": "4ea8b2aa-0db0-47d2-bdbe-9ad11b2a7521",
                  "parentUUID": "f895162d-4c60-4e99-ba80-4e8e8671b728",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "550cf2d3-623a-4a79-9c12-9ad5a509e370",
                "dfb02431-d38e-4a9e-b7c8-899adf5162a4",
                "4ea8b2aa-0db0-47d2-bdbe-9ad11b2a7521"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "664614fb-8f71-4217-beca-a29eba08fdad",
          "title": "/api/doctors",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
          "file": "/test/doctors.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/doctors \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "7569d68a-5bc0-40d5-9eda-6544d3a09992",
              "parentUUID": "664614fb-8f71-4217-beca-a29eba08fdad",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/doctors \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "c38f74ee-872f-4176-b942-4067b630e2c6",
              "parentUUID": "664614fb-8f71-4217-beca-a29eba08fdad",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "9df01682-a7e0-42be-ac05-e9e068ceb127",
              "title": "/getDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
              "file": "/test/doctors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 400 if phone doctor_id is missing (validation schema)",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 400 if phone doctor_id is missing (validation schema)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({})\n.expect(400);",
                  "err": {},
                  "uuid": "f95eefbe-944d-44a5-9243-8f0da5f78456",
                  "parentUUID": "9df01682-a7e0-42be-ac05-e9e068ceb127",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.send({doctor_id: \"1233\"})\n.expect(401)",
                  "err": {},
                  "uuid": "ae8f690f-c95e-4b12-8a2c-4c3da26e57f8",
                  "parentUUID": "9df01682-a7e0-42be-ac05-e9e068ceb127",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 404 if doctor not found",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 404 if doctor not found",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({doctor_id: 54878785})\n.expect(404);",
                  "err": {},
                  "uuid": "272a15b6-38dc-424f-9ac4-53683ea04942",
                  "parentUUID": "9df01682-a7e0-42be-ac05-e9e068ceb127",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got doctor successfully",
                  "fullTitle": "/api/doctors /getDoctor Should respond with 200 if got doctor successfully",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090113795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\": \"100\",\n})\n.expect(201);\nconst doctor_id = res.body.data.doctor_id;\nres = await request(server)\n.post(\"/api/doctors/getDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({doctor_id: doctor_id})\n.expect(200);\ndeleteDoctor(\"01090113795\");",
                  "err": {},
                  "uuid": "9921f8b4-aafb-42f5-aac4-df29c7fcbe9a",
                  "parentUUID": "9df01682-a7e0-42be-ac05-e9e068ceb127",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f95eefbe-944d-44a5-9243-8f0da5f78456",
                "ae8f690f-c95e-4b12-8a2c-4c3da26e57f8",
                "272a15b6-38dc-424f-9ac4-53683ea04942",
                "9921f8b4-aafb-42f5-aac4-df29c7fcbe9a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "46cda12d-42b9-4e39-81dc-6c8b3eca6c1f",
              "title": "/getDoctors",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
              "file": "/test/doctors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/doctors /getDoctors Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/doctors/getDoctors\")\n.expect(401)",
                  "err": {},
                  "uuid": "ee5271de-552a-4e5e-8050-bfbe521574ec",
                  "parentUUID": "46cda12d-42b9-4e39-81dc-6c8b3eca6c1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if got doctors successfully",
                  "fullTitle": "/api/doctors /getDoctors Should respond with 200 if got doctors successfully",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01090243795\",1,\"user\");\n            let res = await request(server)\n            .post(\"/api/doctors/getDoctors\")\n            .set(\"Authorization\", `Bearer ${token}`)\n            .send({category_id: 42})\n            .expect(200);",
                  "err": {},
                  "uuid": "72c5abd1-1d6d-425c-80c9-a3cc519092ee",
                  "parentUUID": "46cda12d-42b9-4e39-81dc-6c8b3eca6c1f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ee5271de-552a-4e5e-8050-bfbe521574ec",
                "72c5abd1-1d6d-425c-80c9-a3cc519092ee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2f8bab1d-fce2-41e6-8df9-1225d66fd92e",
              "title": "/updateDoctor",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/doctors.js",
              "file": "/test/doctors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/doctors/updateDoctor\")\n.send({\"phone_number\":\"3487\"})\n.expect(401);",
                  "err": {},
                  "uuid": "3d982b9a-180c-4560-905c-1739a448295a",
                  "parentUUID": "2f8bab1d-fce2-41e6-8df9-1225d66fd92e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 if field is nor allowed",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 400 if field is nor allowed",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243311\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/doctors/updateDoctor\")\n.send({\"fb_token_id\":\"3487\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "b5b012d1-5af0-4fd5-8d6e-9a8f97aa5943",
                  "parentUUID": "2f8bab1d-fce2-41e6-8df9-1225d66fd92e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if successfully updated",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 200 if successfully updated",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"11090243799\",1, \"admin\");\nlet res = await request(server)\n  .post(\"/api/controlPanel/addDoctor\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .send({\n    phone_number: \"11090243799\",\n    password: \"testtest\",\n    first_name: \"fawzi\",\n    last_name: \"ahmed\",\n    country: \"egypt\",\n    category_id: 1,\n    picture: \"fkfjkfj\",\n    price: \"100\",\n  })\n  .expect(201);\n  const docId = res.body.data.doctor_id;\nres = await request(server)\n .patch(\"/api/doctors/updateDoctor\")\n.send({\n    doctor_id: docId,\n    phone_number: \"112345\",\n    password: \"t123\",\n    first_name: \"fawziiiii\",\n    last_name: \"ahmedddddd\",\n    country: \"saudiarabia\",\n    category_id: 5,\n    picture: \"fkfjkfj\",\n    price: \"300\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);\nexpect(res.body.data.phone_number).to.equal(\"112345\");\nexpect(res.body.data.password).to.equal(\"t123\");\nexpect(res.body.data.first_name).to.equal(\"fawziiiii\");\nexpect(res.body.data.last_name).to.equal(\"ahmedddddd\");\nexpect(res.body.data.country).to.equal(\"saudiarabia\");\nexpect(res.body.data.category_id).to.equal(5);\nexpect(res.body.data.picture).to.equal(\"fkfjkfj\");\nexpect(res.body.data.price).to.equal(\"300\");",
                  "err": {},
                  "uuid": "8dc5c1ea-7e28-4224-8901-24cad519fa6a",
                  "parentUUID": "2f8bab1d-fce2-41e6-8df9-1225d66fd92e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 403 if new phone number is already registered",
                  "fullTitle": "/api/doctors /updateDoctor Should respond with 403 if new phone number is already registered",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243313\",1,\"admin\");\n          let res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n  phone_number: \"110902411\",\n  password: \"testtest\",\n  first_name: \"fawzi\",\n  last_name: \"ahmed\",\n  country: \"egypt\",\n  category_id: 1,\n  picture: \"fkfjkfj\",\n  price: \"100\",\n})\n.expect(201);\nconst docId = res.body.data.doctor_id;\nres = await request(server)\n.patch(\"/api/doctors/updateDoctor\")\n.send({\n    doctor_id: docId,\n    phone_number: \"112345\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteDoctor(\"110902411\");\ndeleteDoctor(\"112345\");",
                  "err": {},
                  "uuid": "2a94696c-5600-406a-8e84-f151c52887f3",
                  "parentUUID": "2f8bab1d-fce2-41e6-8df9-1225d66fd92e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3d982b9a-180c-4560-905c-1739a448295a",
                "b5b012d1-5af0-4fd5-8d6e-9a8f97aa5943",
                "8dc5c1ea-7e28-4224-8901-24cad519fa6a",
                "2a94696c-5600-406a-8e84-f151c52887f3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 27,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c38235d8-9433-441c-9220-3cb3e56ba2cc",
          "title": "/api/slots",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
          "file": "/test/slots.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/slots \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "e4391c7f-fddf-4598-b6da-fa1c0900a98b",
              "parentUUID": "c38235d8-9433-441c-9220-3cb3e56ba2cc",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/slots \"after each\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "50579f36-169c-4104-aaa3-3ddc0bd850b1",
              "parentUUID": "c38235d8-9433-441c-9220-3cb3e56ba2cc",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "abc6c46a-206d-40b5-bc01-f20908ab42e8",
              "title": "/addSlot",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
              "file": "/test/slots.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/slots /addSlot Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/slots/addSlot\")\n.expect(401);",
                  "err": {},
                  "uuid": "7f65d23d-d850-4e7c-b271-894808cecf7c",
                  "parentUUID": "abc6c46a-206d-40b5-bc01-f20908ab42e8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/slots /addSlot Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/slots/addSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"day\":\"mon\",\n    \"slot_time\":\"60:00\",\n    \"available\":false\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "03be4a70-c354-480c-8348-bc1015d24653",
                  "parentUUID": "abc6c46a-206d-40b5-bc01-f20908ab42e8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 addedd Successfully",
                  "fullTitle": "/api/slots /addSlot Should respond 200 addedd Successfully",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090113795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\": \"100\",\n})\n.expect(201);\nconst docId = res.body.data.doctor_id;\nres = await request(server)\n.post(\"/api/slots/addSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":docId,\n    \"day\":\"mon\",\n    \"start_time\":\"23:00\",\n    \"end_time\":\"24:00\",\n    \"slot_time\":\"60:00\",\n    \"available\":false\n    })\n.expect(201);\nconst slotId = res.body.data.slot_id;\ndeleteDoctor(\"01090113795\");\ndeleteSlot(slotId);",
                  "err": {},
                  "uuid": "c8ffefa2-b70e-420e-b3c4-4f55cf155955",
                  "parentUUID": "abc6c46a-206d-40b5-bc01-f20908ab42e8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7f65d23d-d850-4e7c-b271-894808cecf7c",
                "03be4a70-c354-480c-8348-bc1015d24653",
                "c8ffefa2-b70e-420e-b3c4-4f55cf155955"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "798b6584-b518-4f5d-afa1-14d1f21330bf",
              "title": "/updateSlot",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
              "file": "/test/slots.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/slots /updateSlot Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/slots/updateSlot\")\n.expect(401);",
                  "err": {},
                  "uuid": "706db59d-6213-4599-85e2-df50805877b2",
                  "parentUUID": "798b6584-b518-4f5d-afa1-14d1f21330bf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is incorrect",
                  "fullTitle": "/api/slots /updateSlot Should respond 400 if one of inputs is incorrect",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/slots/updateSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"ahmed\":\"mon\",\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "eb20995b-55f1-4e53-a095-7f6d6c9d8f45",
                  "parentUUID": "798b6584-b518-4f5d-afa1-14d1f21330bf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 updated Successfully",
                  "fullTitle": "/api/slots /updateSlot Should respond 200 updated Successfully",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.patch(\"/api/slots/updateSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"slot_id\":1,\n    \"day\":\"wed\",\n    \"start_time\":\"21:00\",\n    \"end_time\":\"22:30\",\n    \"slot_time\":\"30:00\",\n    \"available\":true\n    })\n.expect(200);\nexpect(res.body.data.day).to.equal(\"wed\");\nconst slotId = res.body.data.slot_id;\ndeleteSlot(slotId);",
                  "err": {},
                  "uuid": "43fb4869-c0d0-41cb-9c77-924174cf9a04",
                  "parentUUID": "798b6584-b518-4f5d-afa1-14d1f21330bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "706db59d-6213-4599-85e2-df50805877b2",
                "eb20995b-55f1-4e53-a095-7f6d6c9d8f45",
                "43fb4869-c0d0-41cb-9c77-924174cf9a04"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fb51d46f-eb23-4fb1-9a8e-704680e189cb",
              "title": "/getOpenSlots",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
              "file": "/test/slots.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/slots /getOpenSlots Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/slots/getOpenSlots\")\n.expect(401);",
                  "err": {},
                  "uuid": "0a692dd7-7ab1-46e9-ae28-fa7b1b7650d8",
                  "parentUUID": "fb51d46f-eb23-4fb1-9a8e-704680e189cb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/slots /getOpenSlots Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/slots/getOpenSlots\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":44554,\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "d38749d9-f990-470e-b055-5eb09285cc11",
                  "parentUUID": "fb51d46f-eb23-4fb1-9a8e-704680e189cb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 addedd Successfully",
                  "fullTitle": "/api/slots /getOpenSlots Should respond 200 addedd Successfully",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n})\n.expect(201);\nconst userId = res.body.data.user_id;\n res = await request(server)\n.post(\"/api/slots/getOpenSlots\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\": 11,\n    \"day\": \"wed\",\n    \"date\":\"2020-05-27\"\n    })\n.expect(200);\nconst appId = res.body.data.slot_id;\ndeleteAppointment(1);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "5b7fba1f-f7ea-45b5-8ad2-1dca2a3f255a",
                  "parentUUID": "fb51d46f-eb23-4fb1-9a8e-704680e189cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0a692dd7-7ab1-46e9-ae28-fa7b1b7650d8",
                "d38749d9-f990-470e-b055-5eb09285cc11",
                "5b7fba1f-f7ea-45b5-8ad2-1dca2a3f255a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "154f40e2-e2fa-4a95-94d6-1c85c512c5fd",
              "title": "/getDoctorDays",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/slots.test.js",
              "file": "/test/slots.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond 401 if not Authorized",
                  "fullTitle": "/api/slots /getDoctorDays Should respond 401 if not Authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/slots/addSlot\")\n.expect(401);",
                  "err": {},
                  "uuid": "73bf93c0-39b5-46bb-b217-b2b7162d1233",
                  "parentUUID": "154f40e2-e2fa-4a95-94d6-1c85c512c5fd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 400 if one of inputs is missing or incorrect",
                  "fullTitle": "/api/slots /getDoctorDays Should respond 400 if one of inputs is missing or incorrect",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/slots/addSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n\"doctor_id\":\"kjdkjdk\"\n    })\n.expect(400);",
                  "err": {},
                  "uuid": "875653aa-2d91-4259-a398-a87cdcfabf79",
                  "parentUUID": "154f40e2-e2fa-4a95-94d6-1c85c512c5fd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond 200 if got days susccessfully",
                  "fullTitle": "/api/slots /getDoctorDays Should respond 200 if got days susccessfully",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"0109034748\",1,\"admin\");\nlet res = await request(server)\n.post(\"/api/controlPanel/addDoctor\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"phone_number\":\"01090113795\",\n    \"password\":\"testtest\",\n    \"first_name\":\"fawzi\",\n    \"last_name\": \"ahmed\",\n    \"country\":\"egypt\",\n    \"category_id\":1,\n    \"picture\":\"fkfjkfj\",\n    \"price\": \"100\",\n})\n.expect(201);\nconst docId = res.body.data.doctor_id;\nres = await request(server)\n.post(\"/api/slots/addSlot\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":docId,\n    \"day\":\"mon\",\n    \"start_time\":\"23:00\",\n    \"end_time\":\"24:00\",\n    \"slot_time\":\"60:00\",\n    \"available\":false\n    })\n.expect(201);\nres = await request(server)\n.post(\"/api/slots/getDoctorDays\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({\n    \"doctor_id\":docId,\n    })\n.expect(200);\nconst slotId = res.body.data.slot_id;\ndeleteDoctor(\"01090113795\");\ndeleteSlot(slotId);",
                  "err": {},
                  "uuid": "75995d1d-ab65-4f0b-878e-f20d5b9a481a",
                  "parentUUID": "154f40e2-e2fa-4a95-94d6-1c85c512c5fd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "73bf93c0-39b5-46bb-b217-b2b7162d1233",
                "875653aa-2d91-4259-a398-a87cdcfabf79",
                "75995d1d-ab65-4f0b-878e-f20d5b9a481a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4cce86e6-bff4-4ffb-86aa-d2269e2cb3da",
          "title": "/api/user",
          "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
          "file": "/test/user.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "/api/user \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = require(\"../app\");",
              "err": {},
              "uuid": "3ec7478c-cc20-4871-81b8-f1e6ad1b03c7",
              "parentUUID": "4cce86e6-bff4-4ffb-86aa-d2269e2cb3da",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "/api/user \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "5d0a76f2-4477-49ef-8dea-5ea3d4f85fdd",
              "parentUUID": "4cce86e6-bff4-4ffb-86aa-d2269e2cb3da",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "43a1ecfb-83e9-4e40-b5a9-9e8914c8f319",
              "title": "/updateInfo",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/user /updateInfo Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\"phone_number\":\"3487\"})\n.expect(401);",
                  "err": {},
                  "uuid": "b5c4c976-7264-4402-bae0-7a6a799715ad",
                  "parentUUID": "43a1ecfb-83e9-4e40-b5a9-9e8914c8f319",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 400 if field is nor allowed",
                  "fullTitle": "/api/user /updateInfo Should respond with 400 if field is nor allowed",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243311\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\"fb_token_id\":\"3487\"})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(400);",
                  "err": {},
                  "uuid": "1d38b6fd-79ff-4b17-9a1d-7a77bd4318d0",
                  "parentUUID": "43a1ecfb-83e9-4e40-b5a9-9e8914c8f319",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 200 if successfully updated",
                  "fullTitle": "/api/user /updateInfo Should respond with 200 if successfully updated",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243311\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n}).expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243311\");\nconst token = genToken(\"01590243311\",1,\"user\");\n res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\n    \"phone_number\": \"12345\",\n    \"first_name\": \"ahmed\",\n    \"last_name\":\"mohammed\",\n    \"birth_date\": \"1999-03-22\",\n    \"weight\": 200,\n    \"height\": 300,\n    \"bmi\": 50,\n    \"gender\": \"male\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(200);\nexpect(res.body.data.phone_number).to.equal(\"12345\");\nexpect(res.body.data.first_name).to.equal(\"ahmed\");\nexpect(res.body.data.last_name).to.equal(\"mohammed\");\nexpect(res.body.data.birth_date).to.equal(\"1999-03-22\");\nexpect(res.body.data.weight).to.equal(200);\nexpect(res.body.data.height).to.equal(300);\nexpect(res.body.data.bmi).to.equal(50);\nexpect(res.body.data.gender).to.equal(\"male\");",
                  "err": {},
                  "uuid": "a07dfe68-6327-4c08-ae4a-104e899954db",
                  "parentUUID": "43a1ecfb-83e9-4e40-b5a9-9e8914c8f319",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should respond with 403 if phone number is already registered",
                  "fullTitle": "/api/user /updateInfo Should respond with 403 if phone number is already registered",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243313\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"djdj84\",\n    \"gender\": \"male\",\n}).expect(201);\nexpect(res.body.data.phone_number).to.equal(\"01590243313\");\nconst token = genToken(\"01590243313\",1,\"user\");\n res = await request(server)\n.patch(\"/api/user/updateInfo\")\n.send({\n    \"phone_number\": \"12345\",\n    \"first_name\": \"ahmed\",\n    \"last_name\":\"mohammed\",\n    \"birth_date\": \"1999-03-22\",\n    \"weight\": 200,\n    \"height\": 300,\n    \"bmi\": 50,\n    \"gender\": \"male\",\n})\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteUser(\"01590243313\");\ndeleteUser(\"12345\");",
                  "err": {},
                  "uuid": "5e1c5926-3850-4774-8697-29769f920b45",
                  "parentUUID": "43a1ecfb-83e9-4e40-b5a9-9e8914c8f319",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b5c4c976-7264-4402-bae0-7a6a799715ad",
                "1d38b6fd-79ff-4b17-9a1d-7a77bd4318d0",
                "a07dfe68-6327-4c08-ae4a-104e899954db",
                "5e1c5926-3850-4774-8697-29769f920b45"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 25,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "14a9ffd1-b019-43c4-93b6-4370d2f123d7",
              "title": "/notBlocked",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/user /notBlocked Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.get(\"/api/user/notBlocked\")\n.expect(401);",
                  "err": {},
                  "uuid": "dda9e897-6c1c-45d6-a687-96917402bf44",
                  "parentUUID": "14a9ffd1-b019-43c4-93b6-4370d2f123d7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 403 if user is blocked",
                  "fullTitle": "/api/user /notBlocked should respond with 403 if user is blocked",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"01590243399\",1,\"user\");\nawait blockUser(\"01590243399\");\nres = await request(server)\n.get(\"/api/user/notBlocked\")\n.set(\"Authorization\", `Bearer ${token}`)\n.expect(403);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "affb906b-1a37-494a-9186-ce4452114486",
                  "parentUUID": "14a9ffd1-b019-43c4-93b6-4370d2f123d7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dda9e897-6c1c-45d6-a687-96917402bf44",
                "affb906b-1a37-494a-9186-ce4452114486"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "314717f8-9b5c-4882-bf24-dc0f1b438251",
              "title": "/api/user/updateImage",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should responed with 200 if updated",
                  "fullTitle": "/api/user /api/user/updateImage Should responed with 200 if updated",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"01590243399\",1,\"user\");\nres = await request(server)\n.patch(\"/api/user/updateImage\")\n.set(\"Authorization\", `Bearer ${token}`)\n.set('Content-Type', 'application/x-www-form-urlencoded')\n.attach('file',path.resolve(__dirname, \"../logo.png\"))\n.expect(200);",
                  "err": {},
                  "uuid": "0bd74d10-c53f-43ca-889f-f205f382135c",
                  "parentUUID": "314717f8-9b5c-4882-bf24-dc0f1b438251",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 403 if type not allowed",
                  "fullTitle": "/api/user /api/user/updateImage Should responed with 403 if type not allowed",
                  "timedOut": false,
                  "duration": 33,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/user/updateImage\")\n.set(\"Authorization\", `Bearer ${token}`)\n.set('Content-Type', 'application/x-www-form-urlencoded')\n.attach('file',path.resolve(__dirname, \"../udemy-accs.txt\"))\n.expect(403);",
                  "err": {},
                  "uuid": "2a8661c9-0232-42ae-b8a4-b1e07e65ae87",
                  "parentUUID": "314717f8-9b5c-4882-bf24-dc0f1b438251",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Should responed with 401 not authorized",
                  "fullTitle": "/api/user /api/user/updateImage Should responed with 401 not authorized",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590241\",1,\"user\");\nlet res = await request(server)\n.patch(\"/api/user/updateImage\")\n.set(\"Authorization\", `Bearer ${token}`)\n.set('Content-Type', 'application/x-www-form-urlencoded')\n.attach('file',path.resolve(__dirname, \"../logo.png\"))\n.expect(401);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "c33882d9-a2df-44a9-8056-2a8efdf24728",
                  "parentUUID": "314717f8-9b5c-4882-bf24-dc0f1b438251",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0bd74d10-c53f-43ca-889f-f205f382135c",
                "2a8661c9-0232-42ae-b8a4-b1e07e65ae87",
                "c33882d9-a2df-44a9-8056-2a8efdf24728"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 50,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "de952946-ce08-4125-9c75-b8b1ea669045",
              "title": "/getUser",
              "fullFile": "/Users/iifawzi/Desktop/current projects/Hospital/test/user.js",
              "file": "/test/user.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should respond with 401 if not authorized",
                  "fullTitle": "/api/user /getUser Should respond with 401 if not authorized",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/user/getUser\")\n.expect(401);",
                  "err": {},
                  "uuid": "a1943981-fa52-405e-b7d6-f7d5d8d67640",
                  "parentUUID": "de952946-ce08-4125-9c75-b8b1ea669045",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 404 if user not found",
                  "fullTitle": "/api/user /getUser should respond with 404 if user not found",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = genToken(\"01590243399\",1,\"user\");\nlet res = await request(server)\n.post(\"/api/user/getUser\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({ \"phone_number\": \"9868956981256\", })\n.expect(404);",
                  "err": {},
                  "uuid": "733dbc87-2dd3-482e-81c5-f5a08bf85007",
                  "parentUUID": "de952946-ce08-4125-9c75-b8b1ea669045",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should respond with 200 if got user successfully",
                  "fullTitle": "/api/user /getUser should respond with 200 if got user successfully",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let res = await request(server)\n.post(\"/api/auth/signup\")\n.send({\n    \"phone_number\": \"01590243399\",\n    \"first_name\": \"fawzi\",\n    \"last_name\":\"ahmed\",\n    \"birth_date\": \"1999-03-20\",\n    \"weight\": 100,\n    \"height\": 180,\n    \"bmi\": 28,\n    \"fb_token_id\": \"test\",\n    \"gender\": \"male\",\n}).expect(201);\nconst token = genToken(\"015902433399\",1,\"user\");\nres = await request(server)\n.post(\"/api/user/getUser\")\n.set(\"Authorization\", `Bearer ${token}`)\n.send({ \"phone_number\": \"01590243399\", })\n.expect(200);\ndeleteUser(\"01590243399\");",
                  "err": {},
                  "uuid": "f6aef43e-b893-4e48-9f4f-a82b96de9da3",
                  "parentUUID": "de952946-ce08-4125-9c75-b8b1ea669045",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a1943981-fa52-405e-b7d6-f7d5d8d67640",
                "733dbc87-2dd3-482e-81c5-f5a08bf85007",
                "f6aef43e-b893-4e48-9f4f-a82b96de9da3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}